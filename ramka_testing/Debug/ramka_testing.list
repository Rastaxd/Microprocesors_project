
ramka_testing.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003d3c  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000033c  08003ed4  08003ed4  00004ed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004210  08004210  0000605c  2**0
                  CONTENTS
  4 .ARM          00000008  08004210  08004210  00005210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004218  08004218  0000605c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004218  08004218  00005218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800421c  0800421c  0000521c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08004220  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000990  2000005c  0800427c  0000605c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200009ec  0800427c  000069ec  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000605c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d39e  00000000  00000000  0000608c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001df8  00000000  00000000  0001342a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ca0  00000000  00000000  00015228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000009f5  00000000  00000000  00015ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000164de  00000000  00000000  000168bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e6c7  00000000  00000000  0002cd9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008e3fb  00000000  00000000  0003b462  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c985d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000376c  00000000  00000000  000c98a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  000cd00c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000005c 	.word	0x2000005c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08003ebc 	.word	0x08003ebc

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000060 	.word	0x20000060
 80001d4:	08003ebc 	.word	0x08003ebc

080001d8 <strlen>:
 80001d8:	4603      	mov	r3, r0
 80001da:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001de:	2a00      	cmp	r2, #0
 80001e0:	d1fb      	bne.n	80001da <strlen+0x2>
 80001e2:	1a18      	subs	r0, r3, r0
 80001e4:	3801      	subs	r0, #1
 80001e6:	4770      	bx	lr

080001e8 <__aeabi_uldivmod>:
 80001e8:	b953      	cbnz	r3, 8000200 <__aeabi_uldivmod+0x18>
 80001ea:	b94a      	cbnz	r2, 8000200 <__aeabi_uldivmod+0x18>
 80001ec:	2900      	cmp	r1, #0
 80001ee:	bf08      	it	eq
 80001f0:	2800      	cmpeq	r0, #0
 80001f2:	bf1c      	itt	ne
 80001f4:	f04f 31ff 	movne.w	r1, #4294967295
 80001f8:	f04f 30ff 	movne.w	r0, #4294967295
 80001fc:	f000 b96a 	b.w	80004d4 <__aeabi_idiv0>
 8000200:	f1ad 0c08 	sub.w	ip, sp, #8
 8000204:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000208:	f000 f806 	bl	8000218 <__udivmoddi4>
 800020c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000210:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000214:	b004      	add	sp, #16
 8000216:	4770      	bx	lr

08000218 <__udivmoddi4>:
 8000218:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800021c:	9d08      	ldr	r5, [sp, #32]
 800021e:	460c      	mov	r4, r1
 8000220:	2b00      	cmp	r3, #0
 8000222:	d14e      	bne.n	80002c2 <__udivmoddi4+0xaa>
 8000224:	4694      	mov	ip, r2
 8000226:	458c      	cmp	ip, r1
 8000228:	4686      	mov	lr, r0
 800022a:	fab2 f282 	clz	r2, r2
 800022e:	d962      	bls.n	80002f6 <__udivmoddi4+0xde>
 8000230:	b14a      	cbz	r2, 8000246 <__udivmoddi4+0x2e>
 8000232:	f1c2 0320 	rsb	r3, r2, #32
 8000236:	4091      	lsls	r1, r2
 8000238:	fa20 f303 	lsr.w	r3, r0, r3
 800023c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000240:	4319      	orrs	r1, r3
 8000242:	fa00 fe02 	lsl.w	lr, r0, r2
 8000246:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800024a:	fa1f f68c 	uxth.w	r6, ip
 800024e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000252:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000256:	fb07 1114 	mls	r1, r7, r4, r1
 800025a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800025e:	fb04 f106 	mul.w	r1, r4, r6
 8000262:	4299      	cmp	r1, r3
 8000264:	d90a      	bls.n	800027c <__udivmoddi4+0x64>
 8000266:	eb1c 0303 	adds.w	r3, ip, r3
 800026a:	f104 30ff 	add.w	r0, r4, #4294967295
 800026e:	f080 8112 	bcs.w	8000496 <__udivmoddi4+0x27e>
 8000272:	4299      	cmp	r1, r3
 8000274:	f240 810f 	bls.w	8000496 <__udivmoddi4+0x27e>
 8000278:	3c02      	subs	r4, #2
 800027a:	4463      	add	r3, ip
 800027c:	1a59      	subs	r1, r3, r1
 800027e:	fa1f f38e 	uxth.w	r3, lr
 8000282:	fbb1 f0f7 	udiv	r0, r1, r7
 8000286:	fb07 1110 	mls	r1, r7, r0, r1
 800028a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800028e:	fb00 f606 	mul.w	r6, r0, r6
 8000292:	429e      	cmp	r6, r3
 8000294:	d90a      	bls.n	80002ac <__udivmoddi4+0x94>
 8000296:	eb1c 0303 	adds.w	r3, ip, r3
 800029a:	f100 31ff 	add.w	r1, r0, #4294967295
 800029e:	f080 80fc 	bcs.w	800049a <__udivmoddi4+0x282>
 80002a2:	429e      	cmp	r6, r3
 80002a4:	f240 80f9 	bls.w	800049a <__udivmoddi4+0x282>
 80002a8:	4463      	add	r3, ip
 80002aa:	3802      	subs	r0, #2
 80002ac:	1b9b      	subs	r3, r3, r6
 80002ae:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002b2:	2100      	movs	r1, #0
 80002b4:	b11d      	cbz	r5, 80002be <__udivmoddi4+0xa6>
 80002b6:	40d3      	lsrs	r3, r2
 80002b8:	2200      	movs	r2, #0
 80002ba:	e9c5 3200 	strd	r3, r2, [r5]
 80002be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d905      	bls.n	80002d2 <__udivmoddi4+0xba>
 80002c6:	b10d      	cbz	r5, 80002cc <__udivmoddi4+0xb4>
 80002c8:	e9c5 0100 	strd	r0, r1, [r5]
 80002cc:	2100      	movs	r1, #0
 80002ce:	4608      	mov	r0, r1
 80002d0:	e7f5      	b.n	80002be <__udivmoddi4+0xa6>
 80002d2:	fab3 f183 	clz	r1, r3
 80002d6:	2900      	cmp	r1, #0
 80002d8:	d146      	bne.n	8000368 <__udivmoddi4+0x150>
 80002da:	42a3      	cmp	r3, r4
 80002dc:	d302      	bcc.n	80002e4 <__udivmoddi4+0xcc>
 80002de:	4290      	cmp	r0, r2
 80002e0:	f0c0 80f0 	bcc.w	80004c4 <__udivmoddi4+0x2ac>
 80002e4:	1a86      	subs	r6, r0, r2
 80002e6:	eb64 0303 	sbc.w	r3, r4, r3
 80002ea:	2001      	movs	r0, #1
 80002ec:	2d00      	cmp	r5, #0
 80002ee:	d0e6      	beq.n	80002be <__udivmoddi4+0xa6>
 80002f0:	e9c5 6300 	strd	r6, r3, [r5]
 80002f4:	e7e3      	b.n	80002be <__udivmoddi4+0xa6>
 80002f6:	2a00      	cmp	r2, #0
 80002f8:	f040 8090 	bne.w	800041c <__udivmoddi4+0x204>
 80002fc:	eba1 040c 	sub.w	r4, r1, ip
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	fa1f f78c 	uxth.w	r7, ip
 8000308:	2101      	movs	r1, #1
 800030a:	fbb4 f6f8 	udiv	r6, r4, r8
 800030e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000312:	fb08 4416 	mls	r4, r8, r6, r4
 8000316:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800031a:	fb07 f006 	mul.w	r0, r7, r6
 800031e:	4298      	cmp	r0, r3
 8000320:	d908      	bls.n	8000334 <__udivmoddi4+0x11c>
 8000322:	eb1c 0303 	adds.w	r3, ip, r3
 8000326:	f106 34ff 	add.w	r4, r6, #4294967295
 800032a:	d202      	bcs.n	8000332 <__udivmoddi4+0x11a>
 800032c:	4298      	cmp	r0, r3
 800032e:	f200 80cd 	bhi.w	80004cc <__udivmoddi4+0x2b4>
 8000332:	4626      	mov	r6, r4
 8000334:	1a1c      	subs	r4, r3, r0
 8000336:	fa1f f38e 	uxth.w	r3, lr
 800033a:	fbb4 f0f8 	udiv	r0, r4, r8
 800033e:	fb08 4410 	mls	r4, r8, r0, r4
 8000342:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000346:	fb00 f707 	mul.w	r7, r0, r7
 800034a:	429f      	cmp	r7, r3
 800034c:	d908      	bls.n	8000360 <__udivmoddi4+0x148>
 800034e:	eb1c 0303 	adds.w	r3, ip, r3
 8000352:	f100 34ff 	add.w	r4, r0, #4294967295
 8000356:	d202      	bcs.n	800035e <__udivmoddi4+0x146>
 8000358:	429f      	cmp	r7, r3
 800035a:	f200 80b0 	bhi.w	80004be <__udivmoddi4+0x2a6>
 800035e:	4620      	mov	r0, r4
 8000360:	1bdb      	subs	r3, r3, r7
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	e7a5      	b.n	80002b4 <__udivmoddi4+0x9c>
 8000368:	f1c1 0620 	rsb	r6, r1, #32
 800036c:	408b      	lsls	r3, r1
 800036e:	fa22 f706 	lsr.w	r7, r2, r6
 8000372:	431f      	orrs	r7, r3
 8000374:	fa20 fc06 	lsr.w	ip, r0, r6
 8000378:	fa04 f301 	lsl.w	r3, r4, r1
 800037c:	ea43 030c 	orr.w	r3, r3, ip
 8000380:	40f4      	lsrs	r4, r6
 8000382:	fa00 f801 	lsl.w	r8, r0, r1
 8000386:	0c38      	lsrs	r0, r7, #16
 8000388:	ea4f 4913 	mov.w	r9, r3, lsr #16
 800038c:	fbb4 fef0 	udiv	lr, r4, r0
 8000390:	fa1f fc87 	uxth.w	ip, r7
 8000394:	fb00 441e 	mls	r4, r0, lr, r4
 8000398:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800039c:	fb0e f90c 	mul.w	r9, lr, ip
 80003a0:	45a1      	cmp	r9, r4
 80003a2:	fa02 f201 	lsl.w	r2, r2, r1
 80003a6:	d90a      	bls.n	80003be <__udivmoddi4+0x1a6>
 80003a8:	193c      	adds	r4, r7, r4
 80003aa:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ae:	f080 8084 	bcs.w	80004ba <__udivmoddi4+0x2a2>
 80003b2:	45a1      	cmp	r9, r4
 80003b4:	f240 8081 	bls.w	80004ba <__udivmoddi4+0x2a2>
 80003b8:	f1ae 0e02 	sub.w	lr, lr, #2
 80003bc:	443c      	add	r4, r7
 80003be:	eba4 0409 	sub.w	r4, r4, r9
 80003c2:	fa1f f983 	uxth.w	r9, r3
 80003c6:	fbb4 f3f0 	udiv	r3, r4, r0
 80003ca:	fb00 4413 	mls	r4, r0, r3, r4
 80003ce:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003d2:	fb03 fc0c 	mul.w	ip, r3, ip
 80003d6:	45a4      	cmp	ip, r4
 80003d8:	d907      	bls.n	80003ea <__udivmoddi4+0x1d2>
 80003da:	193c      	adds	r4, r7, r4
 80003dc:	f103 30ff 	add.w	r0, r3, #4294967295
 80003e0:	d267      	bcs.n	80004b2 <__udivmoddi4+0x29a>
 80003e2:	45a4      	cmp	ip, r4
 80003e4:	d965      	bls.n	80004b2 <__udivmoddi4+0x29a>
 80003e6:	3b02      	subs	r3, #2
 80003e8:	443c      	add	r4, r7
 80003ea:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80003ee:	fba0 9302 	umull	r9, r3, r0, r2
 80003f2:	eba4 040c 	sub.w	r4, r4, ip
 80003f6:	429c      	cmp	r4, r3
 80003f8:	46ce      	mov	lr, r9
 80003fa:	469c      	mov	ip, r3
 80003fc:	d351      	bcc.n	80004a2 <__udivmoddi4+0x28a>
 80003fe:	d04e      	beq.n	800049e <__udivmoddi4+0x286>
 8000400:	b155      	cbz	r5, 8000418 <__udivmoddi4+0x200>
 8000402:	ebb8 030e 	subs.w	r3, r8, lr
 8000406:	eb64 040c 	sbc.w	r4, r4, ip
 800040a:	fa04 f606 	lsl.w	r6, r4, r6
 800040e:	40cb      	lsrs	r3, r1
 8000410:	431e      	orrs	r6, r3
 8000412:	40cc      	lsrs	r4, r1
 8000414:	e9c5 6400 	strd	r6, r4, [r5]
 8000418:	2100      	movs	r1, #0
 800041a:	e750      	b.n	80002be <__udivmoddi4+0xa6>
 800041c:	f1c2 0320 	rsb	r3, r2, #32
 8000420:	fa20 f103 	lsr.w	r1, r0, r3
 8000424:	fa0c fc02 	lsl.w	ip, ip, r2
 8000428:	fa24 f303 	lsr.w	r3, r4, r3
 800042c:	4094      	lsls	r4, r2
 800042e:	430c      	orrs	r4, r1
 8000430:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000434:	fa00 fe02 	lsl.w	lr, r0, r2
 8000438:	fa1f f78c 	uxth.w	r7, ip
 800043c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000440:	fb08 3110 	mls	r1, r8, r0, r3
 8000444:	0c23      	lsrs	r3, r4, #16
 8000446:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044a:	fb00 f107 	mul.w	r1, r0, r7
 800044e:	4299      	cmp	r1, r3
 8000450:	d908      	bls.n	8000464 <__udivmoddi4+0x24c>
 8000452:	eb1c 0303 	adds.w	r3, ip, r3
 8000456:	f100 36ff 	add.w	r6, r0, #4294967295
 800045a:	d22c      	bcs.n	80004b6 <__udivmoddi4+0x29e>
 800045c:	4299      	cmp	r1, r3
 800045e:	d92a      	bls.n	80004b6 <__udivmoddi4+0x29e>
 8000460:	3802      	subs	r0, #2
 8000462:	4463      	add	r3, ip
 8000464:	1a5b      	subs	r3, r3, r1
 8000466:	b2a4      	uxth	r4, r4
 8000468:	fbb3 f1f8 	udiv	r1, r3, r8
 800046c:	fb08 3311 	mls	r3, r8, r1, r3
 8000470:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000474:	fb01 f307 	mul.w	r3, r1, r7
 8000478:	42a3      	cmp	r3, r4
 800047a:	d908      	bls.n	800048e <__udivmoddi4+0x276>
 800047c:	eb1c 0404 	adds.w	r4, ip, r4
 8000480:	f101 36ff 	add.w	r6, r1, #4294967295
 8000484:	d213      	bcs.n	80004ae <__udivmoddi4+0x296>
 8000486:	42a3      	cmp	r3, r4
 8000488:	d911      	bls.n	80004ae <__udivmoddi4+0x296>
 800048a:	3902      	subs	r1, #2
 800048c:	4464      	add	r4, ip
 800048e:	1ae4      	subs	r4, r4, r3
 8000490:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000494:	e739      	b.n	800030a <__udivmoddi4+0xf2>
 8000496:	4604      	mov	r4, r0
 8000498:	e6f0      	b.n	800027c <__udivmoddi4+0x64>
 800049a:	4608      	mov	r0, r1
 800049c:	e706      	b.n	80002ac <__udivmoddi4+0x94>
 800049e:	45c8      	cmp	r8, r9
 80004a0:	d2ae      	bcs.n	8000400 <__udivmoddi4+0x1e8>
 80004a2:	ebb9 0e02 	subs.w	lr, r9, r2
 80004a6:	eb63 0c07 	sbc.w	ip, r3, r7
 80004aa:	3801      	subs	r0, #1
 80004ac:	e7a8      	b.n	8000400 <__udivmoddi4+0x1e8>
 80004ae:	4631      	mov	r1, r6
 80004b0:	e7ed      	b.n	800048e <__udivmoddi4+0x276>
 80004b2:	4603      	mov	r3, r0
 80004b4:	e799      	b.n	80003ea <__udivmoddi4+0x1d2>
 80004b6:	4630      	mov	r0, r6
 80004b8:	e7d4      	b.n	8000464 <__udivmoddi4+0x24c>
 80004ba:	46d6      	mov	lr, sl
 80004bc:	e77f      	b.n	80003be <__udivmoddi4+0x1a6>
 80004be:	4463      	add	r3, ip
 80004c0:	3802      	subs	r0, #2
 80004c2:	e74d      	b.n	8000360 <__udivmoddi4+0x148>
 80004c4:	4606      	mov	r6, r0
 80004c6:	4623      	mov	r3, r4
 80004c8:	4608      	mov	r0, r1
 80004ca:	e70f      	b.n	80002ec <__udivmoddi4+0xd4>
 80004cc:	3e02      	subs	r6, #2
 80004ce:	4463      	add	r3, ip
 80004d0:	e730      	b.n	8000334 <__udivmoddi4+0x11c>
 80004d2:	bf00      	nop

080004d4 <__aeabi_idiv0>:
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop

080004d8 <calculateCRC>:
 */

#include "frame.h"

// Funkcja obliczająca CRC
uint16_t calculateCRC(const uint8_t *data, uint16_t length) {
 80004d8:	b480      	push	{r7}
 80004da:	b085      	sub	sp, #20
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
 80004e0:	460b      	mov	r3, r1
 80004e2:	807b      	strh	r3, [r7, #2]
    		0xBBAF, 0xD4CC, 0x6569, 0x0A0A,   0x6940, 0x0623, 0xB786, 0xD8E5,
    		0x8B0B, 0xE468, 0x55CD, 0x3AAE,   0x59E4, 0x3687, 0x8722, 0xE841,
    		0x41B6, 0x2ED5, 0x9F70, 0xF013,   0x9359, 0xFC3A, 0x4D9F, 0x22FC
    };

    uint16_t crc = 0xFFFF; // Dodać tę linię - inicjalizacja CRC
 80004e4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80004e8:	81fb      	strh	r3, [r7, #14]
    
    for (uint16_t i = 0; i < length; i++) {
 80004ea:	2300      	movs	r3, #0
 80004ec:	81bb      	strh	r3, [r7, #12]
 80004ee:	e017      	b.n	8000520 <calculateCRC+0x48>
        uint8_t index = (crc >> 8) ^ data[i]; // XOR bieżącego bajtu z górnymi 8 bitami CRC
 80004f0:	89fb      	ldrh	r3, [r7, #14]
 80004f2:	0a1b      	lsrs	r3, r3, #8
 80004f4:	b29b      	uxth	r3, r3
 80004f6:	b2da      	uxtb	r2, r3
 80004f8:	89bb      	ldrh	r3, [r7, #12]
 80004fa:	6879      	ldr	r1, [r7, #4]
 80004fc:	440b      	add	r3, r1
 80004fe:	781b      	ldrb	r3, [r3, #0]
 8000500:	4053      	eors	r3, r2
 8000502:	72fb      	strb	r3, [r7, #11]
        crc = (crc << 8) ^ CRC_TABLE[index];  // Aktualizacja CRC
 8000504:	89fb      	ldrh	r3, [r7, #14]
 8000506:	021b      	lsls	r3, r3, #8
 8000508:	b21a      	sxth	r2, r3
 800050a:	7afb      	ldrb	r3, [r7, #11]
 800050c:	490a      	ldr	r1, [pc, #40]	@ (8000538 <calculateCRC+0x60>)
 800050e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000512:	b21b      	sxth	r3, r3
 8000514:	4053      	eors	r3, r2
 8000516:	b21b      	sxth	r3, r3
 8000518:	81fb      	strh	r3, [r7, #14]
    for (uint16_t i = 0; i < length; i++) {
 800051a:	89bb      	ldrh	r3, [r7, #12]
 800051c:	3301      	adds	r3, #1
 800051e:	81bb      	strh	r3, [r7, #12]
 8000520:	89ba      	ldrh	r2, [r7, #12]
 8000522:	887b      	ldrh	r3, [r7, #2]
 8000524:	429a      	cmp	r2, r3
 8000526:	d3e3      	bcc.n	80004f0 <calculateCRC+0x18>
    }

    return crc;
 8000528:	89fb      	ldrh	r3, [r7, #14]
}
 800052a:	4618      	mov	r0, r3
 800052c:	3714      	adds	r7, #20
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	08003ef4 	.word	0x08003ef4

0800053c <createFrame>:

// Funkcja tworząca ramkę
uint16_t createFrame(uint8_t *buffer, const Frame *frame) {
 800053c:	b580      	push	{r7, lr}
 800053e:	b084      	sub	sp, #16
 8000540:	af00      	add	r7, sp, #0
 8000542:	6078      	str	r0, [r7, #4]
 8000544:	6039      	str	r1, [r7, #0]
    uint16_t index = 0;
 8000546:	2300      	movs	r3, #0
 8000548:	81fb      	strh	r3, [r7, #14]

    // Znak początku
    buffer[index++] = FRAME_START;
 800054a:	89fb      	ldrh	r3, [r7, #14]
 800054c:	1c5a      	adds	r2, r3, #1
 800054e:	81fa      	strh	r2, [r7, #14]
 8000550:	461a      	mov	r2, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	4413      	add	r3, r2
 8000556:	227e      	movs	r2, #126	@ 0x7e
 8000558:	701a      	strb	r2, [r3, #0]

    // Adres nadawcy (2 znaki)
    buffer[index++] = frame->sourceAddress[0];
 800055a:	89fb      	ldrh	r3, [r7, #14]
 800055c:	1c5a      	adds	r2, r3, #1
 800055e:	81fa      	strh	r2, [r7, #14]
 8000560:	461a      	mov	r2, r3
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	4413      	add	r3, r2
 8000566:	683a      	ldr	r2, [r7, #0]
 8000568:	7812      	ldrb	r2, [r2, #0]
 800056a:	701a      	strb	r2, [r3, #0]
    buffer[index++] = frame->sourceAddress[1];
 800056c:	89fb      	ldrh	r3, [r7, #14]
 800056e:	1c5a      	adds	r2, r3, #1
 8000570:	81fa      	strh	r2, [r7, #14]
 8000572:	461a      	mov	r2, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	4413      	add	r3, r2
 8000578:	683a      	ldr	r2, [r7, #0]
 800057a:	7852      	ldrb	r2, [r2, #1]
 800057c:	701a      	strb	r2, [r3, #0]

    // Adres odbiorcy (2 znaki)
    buffer[index++] = frame->destinationAddress[0];
 800057e:	89fb      	ldrh	r3, [r7, #14]
 8000580:	1c5a      	adds	r2, r3, #1
 8000582:	81fa      	strh	r2, [r7, #14]
 8000584:	461a      	mov	r2, r3
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	4413      	add	r3, r2
 800058a:	683a      	ldr	r2, [r7, #0]
 800058c:	7892      	ldrb	r2, [r2, #2]
 800058e:	701a      	strb	r2, [r3, #0]
    buffer[index++] = frame->destinationAddress[1];
 8000590:	89fb      	ldrh	r3, [r7, #14]
 8000592:	1c5a      	adds	r2, r3, #1
 8000594:	81fa      	strh	r2, [r7, #14]
 8000596:	461a      	mov	r2, r3
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4413      	add	r3, r2
 800059c:	683a      	ldr	r2, [r7, #0]
 800059e:	78d2      	ldrb	r2, [r2, #3]
 80005a0:	701a      	strb	r2, [r3, #0]

    // Długość
    buffer[index++] = frame->length;
 80005a2:	89fb      	ldrh	r3, [r7, #14]
 80005a4:	1c5a      	adds	r2, r3, #1
 80005a6:	81fa      	strh	r2, [r7, #14]
 80005a8:	461a      	mov	r2, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	4413      	add	r3, r2
 80005ae:	683a      	ldr	r2, [r7, #0]
 80005b0:	7912      	ldrb	r2, [r2, #4]
 80005b2:	701a      	strb	r2, [r3, #0]

    // Dodaj dane (ASCII)
    for (uint16_t i = 0; i < frame->length; i++) {
 80005b4:	2300      	movs	r3, #0
 80005b6:	81bb      	strh	r3, [r7, #12]
 80005b8:	e036      	b.n	8000628 <createFrame+0xec>
        if (frame->data[i] == FRAME_START || 
 80005ba:	89bb      	ldrh	r3, [r7, #12]
 80005bc:	683a      	ldr	r2, [r7, #0]
 80005be:	4413      	add	r3, r2
 80005c0:	795b      	ldrb	r3, [r3, #5]
 80005c2:	2b7e      	cmp	r3, #126	@ 0x7e
 80005c4:	d00b      	beq.n	80005de <createFrame+0xa2>
            frame->data[i] == FRAME_END || 
 80005c6:	89bb      	ldrh	r3, [r7, #12]
 80005c8:	683a      	ldr	r2, [r7, #0]
 80005ca:	4413      	add	r3, r2
 80005cc:	795b      	ldrb	r3, [r3, #5]
        if (frame->data[i] == FRAME_START || 
 80005ce:	2b7c      	cmp	r3, #124	@ 0x7c
 80005d0:	d005      	beq.n	80005de <createFrame+0xa2>
            frame->data[i] == ESCAPE_CHAR) {
 80005d2:	89bb      	ldrh	r3, [r7, #12]
 80005d4:	683a      	ldr	r2, [r7, #0]
 80005d6:	4413      	add	r3, r2
 80005d8:	795b      	ldrb	r3, [r3, #5]
            frame->data[i] == FRAME_END || 
 80005da:	2b7d      	cmp	r3, #125	@ 0x7d
 80005dc:	d116      	bne.n	800060c <createFrame+0xd0>
            buffer[index++] = ESCAPE_CHAR;
 80005de:	89fb      	ldrh	r3, [r7, #14]
 80005e0:	1c5a      	adds	r2, r3, #1
 80005e2:	81fa      	strh	r2, [r7, #14]
 80005e4:	461a      	mov	r2, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	4413      	add	r3, r2
 80005ea:	227d      	movs	r2, #125	@ 0x7d
 80005ec:	701a      	strb	r2, [r3, #0]
            buffer[index++] = frame->data[i] ^ 0x20;  // Byte stuffing
 80005ee:	89bb      	ldrh	r3, [r7, #12]
 80005f0:	683a      	ldr	r2, [r7, #0]
 80005f2:	4413      	add	r3, r2
 80005f4:	795a      	ldrb	r2, [r3, #5]
 80005f6:	89fb      	ldrh	r3, [r7, #14]
 80005f8:	1c59      	adds	r1, r3, #1
 80005fa:	81f9      	strh	r1, [r7, #14]
 80005fc:	4619      	mov	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	440b      	add	r3, r1
 8000602:	f082 0220 	eor.w	r2, r2, #32
 8000606:	b2d2      	uxtb	r2, r2
 8000608:	701a      	strb	r2, [r3, #0]
 800060a:	e00a      	b.n	8000622 <createFrame+0xe6>
        } else {
            buffer[index++] = frame->data[i];
 800060c:	89ba      	ldrh	r2, [r7, #12]
 800060e:	89fb      	ldrh	r3, [r7, #14]
 8000610:	1c59      	adds	r1, r3, #1
 8000612:	81f9      	strh	r1, [r7, #14]
 8000614:	4619      	mov	r1, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	440b      	add	r3, r1
 800061a:	6839      	ldr	r1, [r7, #0]
 800061c:	440a      	add	r2, r1
 800061e:	7952      	ldrb	r2, [r2, #5]
 8000620:	701a      	strb	r2, [r3, #0]
    for (uint16_t i = 0; i < frame->length; i++) {
 8000622:	89bb      	ldrh	r3, [r7, #12]
 8000624:	3301      	adds	r3, #1
 8000626:	81bb      	strh	r3, [r7, #12]
 8000628:	683b      	ldr	r3, [r7, #0]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	461a      	mov	r2, r3
 800062e:	89bb      	ldrh	r3, [r7, #12]
 8000630:	4293      	cmp	r3, r2
 8000632:	d3c2      	bcc.n	80005ba <createFrame+0x7e>
        }
    }

    // Oblicz CRC
    uint16_t crc = calculateCRC(frame->data, frame->length);
 8000634:	683b      	ldr	r3, [r7, #0]
 8000636:	1d5a      	adds	r2, r3, #5
 8000638:	683b      	ldr	r3, [r7, #0]
 800063a:	791b      	ldrb	r3, [r3, #4]
 800063c:	4619      	mov	r1, r3
 800063e:	4610      	mov	r0, r2
 8000640:	f7ff ff4a 	bl	80004d8 <calculateCRC>
 8000644:	4603      	mov	r3, r0
 8000646:	817b      	strh	r3, [r7, #10]

    // Dodaj CRC jako surowe bajty w formacie big endian
    buffer[index++] = (crc >> 8) & 0xFF;  // Starszy bajt
 8000648:	897b      	ldrh	r3, [r7, #10]
 800064a:	0a1b      	lsrs	r3, r3, #8
 800064c:	b29a      	uxth	r2, r3
 800064e:	89fb      	ldrh	r3, [r7, #14]
 8000650:	1c59      	adds	r1, r3, #1
 8000652:	81f9      	strh	r1, [r7, #14]
 8000654:	4619      	mov	r1, r3
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	440b      	add	r3, r1
 800065a:	b2d2      	uxtb	r2, r2
 800065c:	701a      	strb	r2, [r3, #0]
    buffer[index++] = crc & 0xFF;         // Młodszy bajt
 800065e:	89fb      	ldrh	r3, [r7, #14]
 8000660:	1c5a      	adds	r2, r3, #1
 8000662:	81fa      	strh	r2, [r7, #14]
 8000664:	461a      	mov	r2, r3
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4413      	add	r3, r2
 800066a:	897a      	ldrh	r2, [r7, #10]
 800066c:	b2d2      	uxtb	r2, r2
 800066e:	701a      	strb	r2, [r3, #0]

    // Dodaj FRAME_END (hex)
    buffer[index++] = FRAME_END; // 0x7C
 8000670:	89fb      	ldrh	r3, [r7, #14]
 8000672:	1c5a      	adds	r2, r3, #1
 8000674:	81fa      	strh	r2, [r7, #14]
 8000676:	461a      	mov	r2, r3
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	4413      	add	r3, r2
 800067c:	227c      	movs	r2, #124	@ 0x7c
 800067e:	701a      	strb	r2, [r3, #0]

    return index;
 8000680:	89fb      	ldrh	r3, [r7, #14]
}
 8000682:	4618      	mov	r0, r3
 8000684:	3710      	adds	r7, #16
 8000686:	46bd      	mov	sp, r7
 8000688:	bd80      	pop	{r7, pc}

0800068a <decodeFrame>:

// Funkcja dekodująca ramkę
int decodeFrame(const uint8_t *buffer, uint16_t length, Frame *frame) {
 800068a:	b580      	push	{r7, lr}
 800068c:	b086      	sub	sp, #24
 800068e:	af00      	add	r7, sp, #0
 8000690:	60f8      	str	r0, [r7, #12]
 8000692:	460b      	mov	r3, r1
 8000694:	607a      	str	r2, [r7, #4]
 8000696:	817b      	strh	r3, [r7, #10]
    // Sprawdź minimalną długość przed odczytem
    if (length < 9) return 0;  // Przenieść na początek funkcji
 8000698:	897b      	ldrh	r3, [r7, #10]
 800069a:	2b08      	cmp	r3, #8
 800069c:	d801      	bhi.n	80006a2 <decodeFrame+0x18>
 800069e:	2300      	movs	r3, #0
 80006a0:	e0b3      	b.n	800080a <decodeFrame+0x180>
    
    // Sprawdź znak początku
    if (buffer[0] != FRAME_START) return 0;
 80006a2:	68fb      	ldr	r3, [r7, #12]
 80006a4:	781b      	ldrb	r3, [r3, #0]
 80006a6:	2b7e      	cmp	r3, #126	@ 0x7e
 80006a8:	d001      	beq.n	80006ae <decodeFrame+0x24>
 80006aa:	2300      	movs	r3, #0
 80006ac:	e0ad      	b.n	800080a <decodeFrame+0x180>
    
    // Odczyt adresów
    frame->sourceAddress[0] = buffer[1];
 80006ae:	68fb      	ldr	r3, [r7, #12]
 80006b0:	3301      	adds	r3, #1
 80006b2:	781a      	ldrb	r2, [r3, #0]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	701a      	strb	r2, [r3, #0]
    frame->sourceAddress[1] = buffer[2];
 80006b8:	68fb      	ldr	r3, [r7, #12]
 80006ba:	3302      	adds	r3, #2
 80006bc:	781a      	ldrb	r2, [r3, #0]
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	705a      	strb	r2, [r3, #1]
    frame->destinationAddress[0] = buffer[3];
 80006c2:	68fb      	ldr	r3, [r7, #12]
 80006c4:	3303      	adds	r3, #3
 80006c6:	781a      	ldrb	r2, [r3, #0]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	709a      	strb	r2, [r3, #2]
    frame->destinationAddress[1] = buffer[4];
 80006cc:	68fb      	ldr	r3, [r7, #12]
 80006ce:	3304      	adds	r3, #4
 80006d0:	781a      	ldrb	r2, [r3, #0]
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	70da      	strb	r2, [r3, #3]
    frame->length = buffer[5];
 80006d6:	68fb      	ldr	r3, [r7, #12]
 80006d8:	3305      	adds	r3, #5
 80006da:	781a      	ldrb	r2, [r3, #0]
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	711a      	strb	r2, [r3, #4]
    
    // Sprawdź długość
    if (frame->length > MAX_DATA_LEN || frame->length > (length - 9)) {
 80006e0:	897b      	ldrh	r3, [r7, #10]
 80006e2:	3b08      	subs	r3, #8
 80006e4:	687a      	ldr	r2, [r7, #4]
 80006e6:	7912      	ldrb	r2, [r2, #4]
 80006e8:	4293      	cmp	r3, r2
 80006ea:	dc01      	bgt.n	80006f0 <decodeFrame+0x66>
        return 0;
 80006ec:	2300      	movs	r3, #0
 80006ee:	e08c      	b.n	800080a <decodeFrame+0x180>
    }
    
    uint16_t dataIndex = 0;
 80006f0:	2300      	movs	r3, #0
 80006f2:	82fb      	strh	r3, [r7, #22]
    
    // Kopiowanie danych z dekodowaniem byte stuffingu - ZŁY POCZĄTKOWY INDEKS!
    for (uint16_t i = 6; i < length - 3 && dataIndex < frame->length; i++) {
 80006f4:	2306      	movs	r3, #6
 80006f6:	82bb      	strh	r3, [r7, #20]
 80006f8:	e040      	b.n	800077c <decodeFrame+0xf2>
        if (buffer[i] == ESCAPE_CHAR) {
 80006fa:	8abb      	ldrh	r3, [r7, #20]
 80006fc:	68fa      	ldr	r2, [r7, #12]
 80006fe:	4413      	add	r3, r2
 8000700:	781b      	ldrb	r3, [r3, #0]
 8000702:	2b7d      	cmp	r3, #125	@ 0x7d
 8000704:	d12c      	bne.n	8000760 <decodeFrame+0xd6>
            switch (buffer[++i]) {  // Najpierw inkrementuj i, potem użyj
 8000706:	8abb      	ldrh	r3, [r7, #20]
 8000708:	3301      	adds	r3, #1
 800070a:	82bb      	strh	r3, [r7, #20]
 800070c:	8abb      	ldrh	r3, [r7, #20]
 800070e:	68fa      	ldr	r2, [r7, #12]
 8000710:	4413      	add	r3, r2
 8000712:	781b      	ldrb	r3, [r3, #0]
 8000714:	2b5e      	cmp	r3, #94	@ 0x5e
 8000716:	d006      	beq.n	8000726 <decodeFrame+0x9c>
 8000718:	2b5e      	cmp	r3, #94	@ 0x5e
 800071a:	dc1f      	bgt.n	800075c <decodeFrame+0xd2>
 800071c:	2b5c      	cmp	r3, #92	@ 0x5c
 800071e:	d00b      	beq.n	8000738 <decodeFrame+0xae>
 8000720:	2b5d      	cmp	r3, #93	@ 0x5d
 8000722:	d012      	beq.n	800074a <decodeFrame+0xc0>
 8000724:	e01a      	b.n	800075c <decodeFrame+0xd2>
                case FRAME_START_STUFF:
                    frame->data[dataIndex++] = FRAME_START;
 8000726:	8afb      	ldrh	r3, [r7, #22]
 8000728:	1c5a      	adds	r2, r3, #1
 800072a:	82fa      	strh	r2, [r7, #22]
 800072c:	461a      	mov	r2, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	4413      	add	r3, r2
 8000732:	227e      	movs	r2, #126	@ 0x7e
 8000734:	715a      	strb	r2, [r3, #5]
                    break;
 8000736:	e01e      	b.n	8000776 <decodeFrame+0xec>
                case FRAME_END_STUFF:
                    frame->data[dataIndex++] = FRAME_END;
 8000738:	8afb      	ldrh	r3, [r7, #22]
 800073a:	1c5a      	adds	r2, r3, #1
 800073c:	82fa      	strh	r2, [r7, #22]
 800073e:	461a      	mov	r2, r3
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	4413      	add	r3, r2
 8000744:	227c      	movs	r2, #124	@ 0x7c
 8000746:	715a      	strb	r2, [r3, #5]
                    break;
 8000748:	e015      	b.n	8000776 <decodeFrame+0xec>
                case ESCAPE_CHAR_STUFF:
                    frame->data[dataIndex++] = ESCAPE_CHAR;
 800074a:	8afb      	ldrh	r3, [r7, #22]
 800074c:	1c5a      	adds	r2, r3, #1
 800074e:	82fa      	strh	r2, [r7, #22]
 8000750:	461a      	mov	r2, r3
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	4413      	add	r3, r2
 8000756:	227d      	movs	r2, #125	@ 0x7d
 8000758:	715a      	strb	r2, [r3, #5]
                    break;
 800075a:	e00c      	b.n	8000776 <decodeFrame+0xec>
                default:
                    return 0; // Błędna sekwencja escape
 800075c:	2300      	movs	r3, #0
 800075e:	e054      	b.n	800080a <decodeFrame+0x180>
            }
        } else {
            frame->data[dataIndex++] = buffer[i];
 8000760:	8abb      	ldrh	r3, [r7, #20]
 8000762:	68fa      	ldr	r2, [r7, #12]
 8000764:	441a      	add	r2, r3
 8000766:	8afb      	ldrh	r3, [r7, #22]
 8000768:	1c59      	adds	r1, r3, #1
 800076a:	82f9      	strh	r1, [r7, #22]
 800076c:	4619      	mov	r1, r3
 800076e:	7812      	ldrb	r2, [r2, #0]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	440b      	add	r3, r1
 8000774:	715a      	strb	r2, [r3, #5]
    for (uint16_t i = 6; i < length - 3 && dataIndex < frame->length; i++) {
 8000776:	8abb      	ldrh	r3, [r7, #20]
 8000778:	3301      	adds	r3, #1
 800077a:	82bb      	strh	r3, [r7, #20]
 800077c:	8aba      	ldrh	r2, [r7, #20]
 800077e:	897b      	ldrh	r3, [r7, #10]
 8000780:	3b03      	subs	r3, #3
 8000782:	429a      	cmp	r2, r3
 8000784:	da05      	bge.n	8000792 <decodeFrame+0x108>
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	791b      	ldrb	r3, [r3, #4]
 800078a:	461a      	mov	r2, r3
 800078c:	8afb      	ldrh	r3, [r7, #22]
 800078e:	4293      	cmp	r3, r2
 8000790:	d3b3      	bcc.n	80006fa <decodeFrame+0x70>
        }
    }
    
    // Sprawdź czy odczytano właściwą ilość danych
    if (dataIndex != frame->length) {
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	791b      	ldrb	r3, [r3, #4]
 8000796:	461a      	mov	r2, r3
 8000798:	8afb      	ldrh	r3, [r7, #22]
 800079a:	4293      	cmp	r3, r2
 800079c:	d001      	beq.n	80007a2 <decodeFrame+0x118>
        return 0;
 800079e:	2300      	movs	r3, #0
 80007a0:	e033      	b.n	800080a <decodeFrame+0x180>
    }
    
    // Odczyt CRC (2 bajty, big endian)
    if (length < 9) return 0;  // Minimalna długość ramki
 80007a2:	897b      	ldrh	r3, [r7, #10]
 80007a4:	2b08      	cmp	r3, #8
 80007a6:	d801      	bhi.n	80007ac <decodeFrame+0x122>
 80007a8:	2300      	movs	r3, #0
 80007aa:	e02e      	b.n	800080a <decodeFrame+0x180>
    frame->crc = (buffer[length - 3] << 8) | buffer[length - 2];
 80007ac:	897b      	ldrh	r3, [r7, #10]
 80007ae:	3b03      	subs	r3, #3
 80007b0:	68fa      	ldr	r2, [r7, #12]
 80007b2:	4413      	add	r3, r2
 80007b4:	781b      	ldrb	r3, [r3, #0]
 80007b6:	021b      	lsls	r3, r3, #8
 80007b8:	b21a      	sxth	r2, r3
 80007ba:	897b      	ldrh	r3, [r7, #10]
 80007bc:	3b02      	subs	r3, #2
 80007be:	68f9      	ldr	r1, [r7, #12]
 80007c0:	440b      	add	r3, r1
 80007c2:	781b      	ldrb	r3, [r3, #0]
 80007c4:	b21b      	sxth	r3, r3
 80007c6:	4313      	orrs	r3, r2
 80007c8:	b21b      	sxth	r3, r3
 80007ca:	b29a      	uxth	r2, r3
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
    if (buffer[length - 1] != FRAME_END) return 0;  // Sprawdź końcowy znak
 80007d2:	897b      	ldrh	r3, [r7, #10]
 80007d4:	3b01      	subs	r3, #1
 80007d6:	68fa      	ldr	r2, [r7, #12]
 80007d8:	4413      	add	r3, r2
 80007da:	781b      	ldrb	r3, [r3, #0]
 80007dc:	2b7c      	cmp	r3, #124	@ 0x7c
 80007de:	d001      	beq.n	80007e4 <decodeFrame+0x15a>
 80007e0:	2300      	movs	r3, #0
 80007e2:	e012      	b.n	800080a <decodeFrame+0x180>
    
    // Weryfikacja CRC
    uint16_t calculatedCRC = calculateCRC(frame->data, frame->length);
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	1d5a      	adds	r2, r3, #5
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	791b      	ldrb	r3, [r3, #4]
 80007ec:	4619      	mov	r1, r3
 80007ee:	4610      	mov	r0, r2
 80007f0:	f7ff fe72 	bl	80004d8 <calculateCRC>
 80007f4:	4603      	mov	r3, r0
 80007f6:	827b      	strh	r3, [r7, #18]
    if (calculatedCRC != frame->crc) {
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
 80007fe:	8a7a      	ldrh	r2, [r7, #18]
 8000800:	429a      	cmp	r2, r3
 8000802:	d001      	beq.n	8000808 <decodeFrame+0x17e>
        return 0;
 8000804:	2300      	movs	r3, #0
 8000806:	e000      	b.n	800080a <decodeFrame+0x180>
    }
    
    return 1; // Sukces
 8000808:	2301      	movs	r3, #1
}
 800080a:	4618      	mov	r0, r3
 800080c:	3718      	adds	r7, #24
 800080e:	46bd      	mov	sp, r7
 8000810:	bd80      	pop	{r7, pc}
	...

08000814 <USART_kbhit>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

// Weryfikacja, czy w buforze są nowe dane
uint8_t USART_kbhit(){
 8000814:	b480      	push	{r7}
 8000816:	af00      	add	r7, sp, #0
	if(USART_RX_Empty==USART_RX_Busy){
 8000818:	4b06      	ldr	r3, [pc, #24]	@ (8000834 <USART_kbhit+0x20>)
 800081a:	681a      	ldr	r2, [r3, #0]
 800081c:	4b06      	ldr	r3, [pc, #24]	@ (8000838 <USART_kbhit+0x24>)
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	429a      	cmp	r2, r3
 8000822:	d101      	bne.n	8000828 <USART_kbhit+0x14>
		return 0;
 8000824:	2300      	movs	r3, #0
 8000826:	e000      	b.n	800082a <USART_kbhit+0x16>
	}else{
		return 1;
 8000828:	2301      	movs	r3, #1
	}
}
 800082a:	4618      	mov	r0, r3
 800082c:	46bd      	mov	sp, r7
 800082e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000832:	4770      	bx	lr
 8000834:	20000710 	.word	0x20000710
 8000838:	20000714 	.word	0x20000714

0800083c <USART_getchar>:

// Funkcja pobiera jeden znak z bufora odbiorczego
int16_t USART_getchar(){
 800083c:	b480      	push	{r7}
 800083e:	b083      	sub	sp, #12
 8000840:	af00      	add	r7, sp, #0
int16_t tmp;
	if(USART_RX_Empty!=USART_RX_Busy){
 8000842:	4b11      	ldr	r3, [pc, #68]	@ (8000888 <USART_getchar+0x4c>)
 8000844:	681a      	ldr	r2, [r3, #0]
 8000846:	4b11      	ldr	r3, [pc, #68]	@ (800088c <USART_getchar+0x50>)
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	429a      	cmp	r2, r3
 800084c:	d014      	beq.n	8000878 <USART_getchar+0x3c>
		 tmp=USART_RxBuf[USART_RX_Busy];// Pobierz dane
 800084e:	4b0f      	ldr	r3, [pc, #60]	@ (800088c <USART_getchar+0x50>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	4a0f      	ldr	r2, [pc, #60]	@ (8000890 <USART_getchar+0x54>)
 8000854:	5cd3      	ldrb	r3, [r2, r3]
 8000856:	80fb      	strh	r3, [r7, #6]
		 USART_RX_Busy++;
 8000858:	4b0c      	ldr	r3, [pc, #48]	@ (800088c <USART_getchar+0x50>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	3301      	adds	r3, #1
 800085e:	4a0b      	ldr	r2, [pc, #44]	@ (800088c <USART_getchar+0x50>)
 8000860:	6013      	str	r3, [r2, #0]
		 if(USART_RX_Busy >= USART_RXBUF_LEN)USART_RX_Busy=0; // Zawijanie wskaźnika
 8000862:	4b0a      	ldr	r3, [pc, #40]	@ (800088c <USART_getchar+0x50>)
 8000864:	681b      	ldr	r3, [r3, #0]
 8000866:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800086a:	db02      	blt.n	8000872 <USART_getchar+0x36>
 800086c:	4b07      	ldr	r3, [pc, #28]	@ (800088c <USART_getchar+0x50>)
 800086e:	2200      	movs	r2, #0
 8000870:	601a      	str	r2, [r3, #0]
		 return tmp; // Zwróc odebrany bajt
 8000872:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000876:	e001      	b.n	800087c <USART_getchar+0x40>
	}else return -1; // Brak danych
 8000878:	f04f 33ff 	mov.w	r3, #4294967295
}
 800087c:	4618      	mov	r0, r3
 800087e:	370c      	adds	r7, #12
 8000880:	46bd      	mov	sp, r7
 8000882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000886:	4770      	bx	lr
 8000888:	20000710 	.word	0x20000710
 800088c:	20000714 	.word	0x20000714
 8000890:	20000508 	.word	0x20000508

08000894 <HAL_UART_TxCpltCallback>:
}



// Callback na Wyslanie
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
 8000894:	b580      	push	{r7, lr}
 8000896:	b084      	sub	sp, #16
 8000898:	af00      	add	r7, sp, #0
 800089a:	6078      	str	r0, [r7, #4]
  if(huart==&huart2){
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	4a13      	ldr	r2, [pc, #76]	@ (80008ec <HAL_UART_TxCpltCallback+0x58>)
 80008a0:	4293      	cmp	r3, r2
 80008a2:	d11e      	bne.n	80008e2 <HAL_UART_TxCpltCallback+0x4e>
    if(USART_TX_Empty!=USART_TX_Busy){
 80008a4:	4b12      	ldr	r3, [pc, #72]	@ (80008f0 <HAL_UART_TxCpltCallback+0x5c>)
 80008a6:	681a      	ldr	r2, [r3, #0]
 80008a8:	4b12      	ldr	r3, [pc, #72]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	429a      	cmp	r2, r3
 80008ae:	d018      	beq.n	80008e2 <HAL_UART_TxCpltCallback+0x4e>
      uint8_t tmp=USART_TxBuf[USART_TX_Busy];
 80008b0:	4b10      	ldr	r3, [pc, #64]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	4a10      	ldr	r2, [pc, #64]	@ (80008f8 <HAL_UART_TxCpltCallback+0x64>)
 80008b6:	5cd3      	ldrb	r3, [r2, r3]
 80008b8:	73fb      	strb	r3, [r7, #15]
      USART_TX_Busy++;
 80008ba:	4b0e      	ldr	r3, [pc, #56]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008bc:	681b      	ldr	r3, [r3, #0]
 80008be:	3301      	adds	r3, #1
 80008c0:	4a0c      	ldr	r2, [pc, #48]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008c2:	6013      	str	r3, [r2, #0]
      if(USART_TX_Busy >= USART_TXBUF_LEN)USART_TX_Busy=0;
 80008c4:	4b0b      	ldr	r3, [pc, #44]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80008cc:	db02      	blt.n	80008d4 <HAL_UART_TxCpltCallback+0x40>
 80008ce:	4b09      	ldr	r3, [pc, #36]	@ (80008f4 <HAL_UART_TxCpltCallback+0x60>)
 80008d0:	2200      	movs	r2, #0
 80008d2:	601a      	str	r2, [r3, #0]
      HAL_UART_Transmit_IT(&huart2, &tmp, 1);
 80008d4:	f107 030f 	add.w	r3, r7, #15
 80008d8:	2201      	movs	r2, #1
 80008da:	4619      	mov	r1, r3
 80008dc:	4803      	ldr	r0, [pc, #12]	@ (80008ec <HAL_UART_TxCpltCallback+0x58>)
 80008de:	f002 fa72 	bl	8002dc6 <HAL_UART_Transmit_IT>
    }
  }
}
 80008e2:	bf00      	nop
 80008e4:	3710      	adds	r7, #16
 80008e6:	46bd      	mov	sp, r7
 80008e8:	bd80      	pop	{r7, pc}
 80008ea:	bf00      	nop
 80008ec:	200000c0 	.word	0x200000c0
 80008f0:	20000708 	.word	0x20000708
 80008f4:	2000070c 	.word	0x2000070c
 80008f8:	20000108 	.word	0x20000108

080008fc <sendResponse>:

void sendResponse(const char *message) {
 80008fc:	b580      	push	{r7, lr}
 80008fe:	f5ad 7d44 	sub.w	sp, sp, #784	@ 0x310
 8000902:	af00      	add	r7, sp, #0
 8000904:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000908:	f5a3 7343 	sub.w	r3, r3, #780	@ 0x30c
 800090c:	6018      	str	r0, [r3, #0]
    if (!message || strlen(message) > MAX_DATA_LEN) {  // Dodanie sprawdzenia NULL
 800090e:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000912:	f5a3 7343 	sub.w	r3, r3, #780	@ 0x30c
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	2b00      	cmp	r3, #0
 800091a:	d055      	beq.n	80009c8 <sendResponse+0xcc>
 800091c:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000920:	f5a3 7343 	sub.w	r3, r3, #780	@ 0x30c
 8000924:	6818      	ldr	r0, [r3, #0]
 8000926:	f7ff fc57 	bl	80001d8 <strlen>
 800092a:	4603      	mov	r3, r0
 800092c:	2bff      	cmp	r3, #255	@ 0xff
 800092e:	d84b      	bhi.n	80009c8 <sendResponse+0xcc>
        return;
    }
    Frame responseFrame;
    // Zachowujemy dwuznakowe adresy
    responseFrame.sourceAddress[0] = 'S';
 8000930:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000934:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000938:	2253      	movs	r2, #83	@ 0x53
 800093a:	701a      	strb	r2, [r3, #0]
    responseFrame.sourceAddress[1] = 'T';
 800093c:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000940:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000944:	2254      	movs	r2, #84	@ 0x54
 8000946:	705a      	strb	r2, [r3, #1]
    responseFrame.destinationAddress[0] = 'P';
 8000948:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 800094c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000950:	2250      	movs	r2, #80	@ 0x50
 8000952:	709a      	strb	r2, [r3, #2]
    responseFrame.destinationAddress[1] = 'C';
 8000954:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000958:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800095c:	2243      	movs	r2, #67	@ 0x43
 800095e:	70da      	strb	r2, [r3, #3]
    responseFrame.length = strlen(message);
 8000960:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000964:	f5a3 7343 	sub.w	r3, r3, #780	@ 0x30c
 8000968:	6818      	ldr	r0, [r3, #0]
 800096a:	f7ff fc35 	bl	80001d8 <strlen>
 800096e:	4603      	mov	r3, r0
 8000970:	b2da      	uxtb	r2, r3
 8000972:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000976:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800097a:	711a      	strb	r2, [r3, #4]
    memcpy(responseFrame.data, message, responseFrame.length);
 800097c:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 8000980:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8000984:	791b      	ldrb	r3, [r3, #4]
 8000986:	4619      	mov	r1, r3
 8000988:	f507 7344 	add.w	r3, r7, #784	@ 0x310
 800098c:	f5a3 7343 	sub.w	r3, r3, #780	@ 0x30c
 8000990:	f507 7202 	add.w	r2, r7, #520	@ 0x208
 8000994:	1d50      	adds	r0, r2, #5
 8000996:	460a      	mov	r2, r1
 8000998:	6819      	ldr	r1, [r3, #0]
 800099a:	f003 fa81 	bl	8003ea0 <memcpy>

    uint8_t buffer[512];  // Stała wartość powinna być zdefiniowana jako makro
    uint16_t frameLength = createFrame(buffer, &responseFrame);
 800099e:	f507 7202 	add.w	r2, r7, #520	@ 0x208
 80009a2:	f107 0308 	add.w	r3, r7, #8
 80009a6:	4611      	mov	r1, r2
 80009a8:	4618      	mov	r0, r3
 80009aa:	f7ff fdc7 	bl	800053c <createFrame>
 80009ae:	4603      	mov	r3, r0
 80009b0:	f8a7 330e 	strh.w	r3, [r7, #782]	@ 0x30e
    HAL_UART_Transmit(&huart2, buffer, frameLength, HAL_MAX_DELAY);
 80009b4:	f8b7 230e 	ldrh.w	r2, [r7, #782]	@ 0x30e
 80009b8:	f107 0108 	add.w	r1, r7, #8
 80009bc:	f04f 33ff 	mov.w	r3, #4294967295
 80009c0:	4804      	ldr	r0, [pc, #16]	@ (80009d4 <sendResponse+0xd8>)
 80009c2:	f002 f975 	bl	8002cb0 <HAL_UART_Transmit>
 80009c6:	e000      	b.n	80009ca <sendResponse+0xce>
        return;
 80009c8:	bf00      	nop
}
 80009ca:	f507 7744 	add.w	r7, r7, #784	@ 0x310
 80009ce:	46bd      	mov	sp, r7
 80009d0:	bd80      	pop	{r7, pc}
 80009d2:	bf00      	nop
 80009d4:	200000c0 	.word	0x200000c0

080009d8 <processCommand>:

void processCommand(Frame *frame) {
 80009d8:	b580      	push	{r7, lr}
 80009da:	f5ad 7d46 	sub.w	sp, sp, #792	@ 0x318
 80009de:	af00      	add	r7, sp, #0
 80009e0:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 80009e4:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 80009e8:	6018      	str	r0, [r3, #0]
    if (!frame) {  // Dodanie sprawdzenia NULL
 80009ea:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 80009ee:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	f000 80bc 	beq.w	8000b72 <processCommand+0x19a>
        return;
    }

    // Sprawdź poprawność adresów
    if (memcmp(&frame->sourceAddress, "PC", 2) != 0 || 
 80009fa:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 80009fe:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	2202      	movs	r2, #2
 8000a06:	495d      	ldr	r1, [pc, #372]	@ (8000b7c <processCommand+0x1a4>)
 8000a08:	4618      	mov	r0, r3
 8000a0a:	f003 fa07 	bl	8003e1c <memcmp>
 8000a0e:	4603      	mov	r3, r0
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d10d      	bne.n	8000a30 <processCommand+0x58>
        memcmp(&frame->destinationAddress, "ST", 2) != 0) {
 8000a14:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000a18:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	3302      	adds	r3, #2
 8000a20:	2202      	movs	r2, #2
 8000a22:	4957      	ldr	r1, [pc, #348]	@ (8000b80 <processCommand+0x1a8>)
 8000a24:	4618      	mov	r0, r3
 8000a26:	f003 f9f9 	bl	8003e1c <memcmp>
 8000a2a:	4603      	mov	r3, r0
    if (memcmp(&frame->sourceAddress, "PC", 2) != 0 || 
 8000a2c:	2b00      	cmp	r3, #0
 8000a2e:	d003      	beq.n	8000a38 <processCommand+0x60>
        sendResponse("FAL");
 8000a30:	4854      	ldr	r0, [pc, #336]	@ (8000b84 <processCommand+0x1ac>)
 8000a32:	f7ff ff63 	bl	80008fc <sendResponse>
        return;
 8000a36:	e09d      	b.n	8000b74 <processCommand+0x19c>
    }

    if (frame->length < 3) {
 8000a38:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000a3c:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	791b      	ldrb	r3, [r3, #4]
 8000a44:	2b02      	cmp	r3, #2
 8000a46:	d803      	bhi.n	8000a50 <processCommand+0x78>
        sendResponse("FAL");
 8000a48:	484e      	ldr	r0, [pc, #312]	@ (8000b84 <processCommand+0x1ac>)
 8000a4a:	f7ff ff57 	bl	80008fc <sendResponse>
        return;
 8000a4e:	e091      	b.n	8000b74 <processCommand+0x19c>
    }

    if (memcmp(frame->data, "GET", 3) == 0) {
 8000a50:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000a54:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000a58:	681b      	ldr	r3, [r3, #0]
 8000a5a:	3305      	adds	r3, #5
 8000a5c:	2203      	movs	r2, #3
 8000a5e:	494a      	ldr	r1, [pc, #296]	@ (8000b88 <processCommand+0x1b0>)
 8000a60:	4618      	mov	r0, r3
 8000a62:	f003 f9db 	bl	8003e1c <memcmp>
 8000a66:	4603      	mov	r3, r0
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	d169      	bne.n	8000b40 <processCommand+0x168>
        char *endptr;
        uint16_t requestedCount = (uint16_t)strtol((char *)&frame->data[3], &endptr, 10);
 8000a6c:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000a70:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	3308      	adds	r3, #8
 8000a78:	f507 7144 	add.w	r1, r7, #784	@ 0x310
 8000a7c:	220a      	movs	r2, #10
 8000a7e:	4618      	mov	r0, r3
 8000a80:	f003 f9c2 	bl	8003e08 <strtol>
 8000a84:	4603      	mov	r3, r0
 8000a86:	f8a7 3316 	strh.w	r3, [r7, #790]	@ 0x316
        if (*endptr != '\0') {  // Sprawdzenie poprawności konwersji
 8000a8a:	f8d7 3310 	ldr.w	r3, [r7, #784]	@ 0x310
 8000a8e:	781b      	ldrb	r3, [r3, #0]
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	d003      	beq.n	8000a9c <processCommand+0xc4>
            sendResponse("FAL");
 8000a94:	483b      	ldr	r0, [pc, #236]	@ (8000b84 <processCommand+0x1ac>)
 8000a96:	f7ff ff31 	bl	80008fc <sendResponse>
            return;
 8000a9a:	e06b      	b.n	8000b74 <processCommand+0x19c>
        }
        if (requestedCount > sensorIndex) {
 8000a9c:	4b3b      	ldr	r3, [pc, #236]	@ (8000b8c <processCommand+0x1b4>)
 8000a9e:	881b      	ldrh	r3, [r3, #0]
 8000aa0:	b29b      	uxth	r3, r3
 8000aa2:	f8b7 2316 	ldrh.w	r2, [r7, #790]	@ 0x316
 8000aa6:	429a      	cmp	r2, r3
 8000aa8:	d903      	bls.n	8000ab2 <processCommand+0xda>
            sendResponse("TMC"); // Za dużo danych
 8000aaa:	4839      	ldr	r0, [pc, #228]	@ (8000b90 <processCommand+0x1b8>)
 8000aac:	f7ff ff26 	bl	80008fc <sendResponse>
 8000ab0:	e060      	b.n	8000b74 <processCommand+0x19c>
        } else {
            // Dodać sprawdzenie przed kopiowaniem danych:
            if (requestedCount > MAX_DATA_LEN) {
 8000ab2:	f8b7 3316 	ldrh.w	r3, [r7, #790]	@ 0x316
 8000ab6:	2bff      	cmp	r3, #255	@ 0xff
 8000ab8:	d903      	bls.n	8000ac2 <processCommand+0xea>
                sendResponse("TMC");
 8000aba:	4835      	ldr	r0, [pc, #212]	@ (8000b90 <processCommand+0x1b8>)
 8000abc:	f7ff ff1e 	bl	80008fc <sendResponse>
            return;
 8000ac0:	e058      	b.n	8000b74 <processCommand+0x19c>
                return;
            }
            Frame dataFrame;
            // Ustawiamy ST jako nadawcę odpowiedzi
            memcpy(&dataFrame.sourceAddress, "ST", 2);
 8000ac2:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000ac6:	f5a3 7344 	sub.w	r3, r3, #784	@ 0x310
 8000aca:	f245 4253 	movw	r2, #21587	@ 0x5453
 8000ace:	801a      	strh	r2, [r3, #0]
            // Ustawiamy PC jako odbiorcę odpowiedzi
            memcpy(&dataFrame.destinationAddress, "PC", 2);
 8000ad0:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000ad4:	f5a3 7344 	sub.w	r3, r3, #784	@ 0x310
 8000ad8:	f244 3250 	movw	r2, #17232	@ 0x4350
 8000adc:	805a      	strh	r2, [r3, #2]
            dataFrame.length = requestedCount;
 8000ade:	f8b7 3316 	ldrh.w	r3, [r7, #790]	@ 0x316
 8000ae2:	b2da      	uxtb	r2, r3
 8000ae4:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000ae8:	f5a3 7344 	sub.w	r3, r3, #784	@ 0x310
 8000aec:	711a      	strb	r2, [r3, #4]
            memcpy(dataFrame.data, &sensorBuffer[sensorIndex - requestedCount], requestedCount);
 8000aee:	4b27      	ldr	r3, [pc, #156]	@ (8000b8c <processCommand+0x1b4>)
 8000af0:	881b      	ldrh	r3, [r3, #0]
 8000af2:	b29b      	uxth	r3, r3
 8000af4:	461a      	mov	r2, r3
 8000af6:	f8b7 3316 	ldrh.w	r3, [r7, #790]	@ 0x316
 8000afa:	1ad3      	subs	r3, r2, r3
 8000afc:	4a25      	ldr	r2, [pc, #148]	@ (8000b94 <processCommand+0x1bc>)
 8000afe:	1899      	adds	r1, r3, r2
 8000b00:	f8b7 2316 	ldrh.w	r2, [r7, #790]	@ 0x316
 8000b04:	f107 0308 	add.w	r3, r7, #8
 8000b08:	3305      	adds	r3, #5
 8000b0a:	4618      	mov	r0, r3
 8000b0c:	f003 f9c8 	bl	8003ea0 <memcpy>

            uint8_t buffer[512];
            uint16_t frameLength = createFrame(buffer, &dataFrame);
 8000b10:	f107 0208 	add.w	r2, r7, #8
 8000b14:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000b18:	4611      	mov	r1, r2
 8000b1a:	4618      	mov	r0, r3
 8000b1c:	f7ff fd0e 	bl	800053c <createFrame>
 8000b20:	4603      	mov	r3, r0
 8000b22:	f8a7 3314 	strh.w	r3, [r7, #788]	@ 0x314
            HAL_UART_Transmit(&huart2, buffer, frameLength, HAL_MAX_DELAY);
 8000b26:	f8b7 2314 	ldrh.w	r2, [r7, #788]	@ 0x314
 8000b2a:	f507 7188 	add.w	r1, r7, #272	@ 0x110
 8000b2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000b32:	4819      	ldr	r0, [pc, #100]	@ (8000b98 <processCommand+0x1c0>)
 8000b34:	f002 f8bc 	bl	8002cb0 <HAL_UART_Transmit>

            sendResponse("CPL"); // Completed
 8000b38:	4818      	ldr	r0, [pc, #96]	@ (8000b9c <processCommand+0x1c4>)
 8000b3a:	f7ff fedf 	bl	80008fc <sendResponse>
 8000b3e:	e019      	b.n	8000b74 <processCommand+0x19c>
        }
    } else if (memcmp(frame->data, "LIVEG", 5) == 0) {
 8000b40:	f507 7346 	add.w	r3, r7, #792	@ 0x318
 8000b44:	f5a3 7345 	sub.w	r3, r3, #788	@ 0x314
 8000b48:	681b      	ldr	r3, [r3, #0]
 8000b4a:	3305      	adds	r3, #5
 8000b4c:	2205      	movs	r2, #5
 8000b4e:	4914      	ldr	r1, [pc, #80]	@ (8000ba0 <processCommand+0x1c8>)
 8000b50:	4618      	mov	r0, r3
 8000b52:	f003 f963 	bl	8003e1c <memcmp>
 8000b56:	4603      	mov	r3, r0
 8000b58:	2b00      	cmp	r3, #0
 8000b5a:	d106      	bne.n	8000b6a <processCommand+0x192>
        liveModeEnabled = 1;
 8000b5c:	4b11      	ldr	r3, [pc, #68]	@ (8000ba4 <processCommand+0x1cc>)
 8000b5e:	2201      	movs	r2, #1
 8000b60:	701a      	strb	r2, [r3, #0]
        sendResponse("CPL"); // Completed
 8000b62:	480e      	ldr	r0, [pc, #56]	@ (8000b9c <processCommand+0x1c4>)
 8000b64:	f7ff feca 	bl	80008fc <sendResponse>
 8000b68:	e004      	b.n	8000b74 <processCommand+0x19c>
    } else {
        sendResponse("FAL"); // Nieprawidłowa komenda
 8000b6a:	4806      	ldr	r0, [pc, #24]	@ (8000b84 <processCommand+0x1ac>)
 8000b6c:	f7ff fec6 	bl	80008fc <sendResponse>
 8000b70:	e000      	b.n	8000b74 <processCommand+0x19c>
        return;
 8000b72:	bf00      	nop
    }
}
 8000b74:	f507 7746 	add.w	r7, r7, #792	@ 0x318
 8000b78:	46bd      	mov	sp, r7
 8000b7a:	bd80      	pop	{r7, pc}
 8000b7c:	08003ed4 	.word	0x08003ed4
 8000b80:	08003ed8 	.word	0x08003ed8
 8000b84:	08003edc 	.word	0x08003edc
 8000b88:	08003ee0 	.word	0x08003ee0
 8000b8c:	20000798 	.word	0x20000798
 8000b90:	08003ee4 	.word	0x08003ee4
 8000b94:	20000718 	.word	0x20000718
 8000b98:	200000c0 	.word	0x200000c0
 8000b9c:	08003ee8 	.word	0x08003ee8
 8000ba0:	08003eec 	.word	0x08003eec
 8000ba4:	2000079a 	.word	0x2000079a

08000ba8 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b082      	sub	sp, #8
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	6078      	str	r0, [r7, #4]
	 if(huart==&huart2){
 8000bb0:	687b      	ldr	r3, [r7, #4]
 8000bb2:	4a0e      	ldr	r2, [pc, #56]	@ (8000bec <HAL_UART_RxCpltCallback+0x44>)
 8000bb4:	4293      	cmp	r3, r2
 8000bb6:	d115      	bne.n	8000be4 <HAL_UART_RxCpltCallback+0x3c>
		 USART_RX_Empty++;
 8000bb8:	4b0d      	ldr	r3, [pc, #52]	@ (8000bf0 <HAL_UART_RxCpltCallback+0x48>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	3301      	adds	r3, #1
 8000bbe:	4a0c      	ldr	r2, [pc, #48]	@ (8000bf0 <HAL_UART_RxCpltCallback+0x48>)
 8000bc0:	6013      	str	r3, [r2, #0]
		 if(USART_RX_Empty>=USART_RXBUF_LEN)USART_RX_Empty=0; // Zawijanie wskaznika
 8000bc2:	4b0b      	ldr	r3, [pc, #44]	@ (8000bf0 <HAL_UART_RxCpltCallback+0x48>)
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000bca:	db02      	blt.n	8000bd2 <HAL_UART_RxCpltCallback+0x2a>
 8000bcc:	4b08      	ldr	r3, [pc, #32]	@ (8000bf0 <HAL_UART_RxCpltCallback+0x48>)
 8000bce:	2200      	movs	r2, #0
 8000bd0:	601a      	str	r2, [r3, #0]
		 HAL_UART_Receive_IT(&huart2,&USART_RxBuf[USART_RX_Empty],1); // Kontynuacja odbioru
 8000bd2:	4b07      	ldr	r3, [pc, #28]	@ (8000bf0 <HAL_UART_RxCpltCallback+0x48>)
 8000bd4:	681b      	ldr	r3, [r3, #0]
 8000bd6:	4a07      	ldr	r2, [pc, #28]	@ (8000bf4 <HAL_UART_RxCpltCallback+0x4c>)
 8000bd8:	4413      	add	r3, r2
 8000bda:	2201      	movs	r2, #1
 8000bdc:	4619      	mov	r1, r3
 8000bde:	4803      	ldr	r0, [pc, #12]	@ (8000bec <HAL_UART_RxCpltCallback+0x44>)
 8000be0:	f002 f927 	bl	8002e32 <HAL_UART_Receive_IT>

	 }
}
 8000be4:	bf00      	nop
 8000be6:	3708      	adds	r7, #8
 8000be8:	46bd      	mov	sp, r7
 8000bea:	bd80      	pop	{r7, pc}
 8000bec:	200000c0 	.word	0x200000c0
 8000bf0:	20000710 	.word	0x20000710
 8000bf4:	20000508 	.word	0x20000508

08000bf8 <resetFrameState>:

void resetFrameState() {
 8000bf8:	b480      	push	{r7}
 8000bfa:	af00      	add	r7, sp, #0
    frameState.inFrame = false;
 8000bfc:	4b07      	ldr	r3, [pc, #28]	@ (8000c1c <resetFrameState+0x24>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	701a      	strb	r2, [r3, #0]
    frameState.escapeDetected = false;
 8000c02:	4b06      	ldr	r3, [pc, #24]	@ (8000c1c <resetFrameState+0x24>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	705a      	strb	r2, [r3, #1]
    frameState.bxIndex = 0;
 8000c08:	4b04      	ldr	r3, [pc, #16]	@ (8000c1c <resetFrameState+0x24>)
 8000c0a:	2200      	movs	r2, #0
 8000c0c:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
}
 8000c10:	bf00      	nop
 8000c12:	46bd      	mov	sp, r7
 8000c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c18:	4770      	bx	lr
 8000c1a:	bf00      	nop
 8000c1c:	2000079c 	.word	0x2000079c

08000c20 <sendStatus>:

void sendStatus(uint8_t status) {
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b082      	sub	sp, #8
 8000c24:	af00      	add	r7, sp, #0
 8000c26:	4603      	mov	r3, r0
 8000c28:	71fb      	strb	r3, [r7, #7]
    if (status == ERR_GOOD) {
 8000c2a:	79fb      	ldrb	r3, [r7, #7]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d103      	bne.n	8000c38 <sendStatus+0x18>
        sendResponse("CPL");
 8000c30:	4805      	ldr	r0, [pc, #20]	@ (8000c48 <sendStatus+0x28>)
 8000c32:	f7ff fe63 	bl	80008fc <sendResponse>
    } else {
        sendResponse("FAL");
    }
}
 8000c36:	e002      	b.n	8000c3e <sendStatus+0x1e>
        sendResponse("FAL");
 8000c38:	4804      	ldr	r0, [pc, #16]	@ (8000c4c <sendStatus+0x2c>)
 8000c3a:	f7ff fe5f 	bl	80008fc <sendResponse>
}
 8000c3e:	bf00      	nop
 8000c40:	3708      	adds	r7, #8
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}
 8000c46:	bf00      	nop
 8000c48:	08003ee8 	.word	0x08003ee8
 8000c4c:	08003edc 	.word	0x08003edc

08000c50 <processReceivedChar>:

void processReceivedChar(uint8_t receivedChar) {
 8000c50:	b580      	push	{r7, lr}
 8000c52:	b0c4      	sub	sp, #272	@ 0x110
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	4602      	mov	r2, r0
 8000c58:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000c5c:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000c60:	701a      	strb	r2, [r3, #0]
    if (receivedChar == FRAME_START) {
 8000c62:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000c66:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000c6a:	781b      	ldrb	r3, [r3, #0]
 8000c6c:	2b7e      	cmp	r3, #126	@ 0x7e
 8000c6e:	d105      	bne.n	8000c7c <processReceivedChar+0x2c>
        resetFrameState();
 8000c70:	f7ff ffc2 	bl	8000bf8 <resetFrameState>
        frameState.inFrame = true;
 8000c74:	4b63      	ldr	r3, [pc, #396]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000c76:	2201      	movs	r2, #1
 8000c78:	701a      	strb	r2, [r3, #0]
        } 
        else {
            resetFrameState();
        }
    }
}
 8000c7a:	e0bd      	b.n	8000df8 <processReceivedChar+0x1a8>
    else if (receivedChar == FRAME_END && !frameState.escapeDetected) {
 8000c7c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000c80:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000c84:	781b      	ldrb	r3, [r3, #0]
 8000c86:	2b7c      	cmp	r3, #124	@ 0x7c
 8000c88:	d12a      	bne.n	8000ce0 <processReceivedChar+0x90>
 8000c8a:	4b5e      	ldr	r3, [pc, #376]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000c8c:	785b      	ldrb	r3, [r3, #1]
 8000c8e:	f083 0301 	eor.w	r3, r3, #1
 8000c92:	b2db      	uxtb	r3, r3
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	d023      	beq.n	8000ce0 <processReceivedChar+0x90>
        if (frameState.inFrame) {
 8000c98:	4b5a      	ldr	r3, [pc, #360]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000c9a:	781b      	ldrb	r3, [r3, #0]
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	f000 80ab 	beq.w	8000df8 <processReceivedChar+0x1a8>
            if (decodeFrame(USART_RxBuf + USART_RX_Busy, frameState.bxIndex, &decodedFrame)) {
 8000ca2:	4b59      	ldr	r3, [pc, #356]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	461a      	mov	r2, r3
 8000ca8:	4b58      	ldr	r3, [pc, #352]	@ (8000e0c <processReceivedChar+0x1bc>)
 8000caa:	4413      	add	r3, r2
 8000cac:	4a55      	ldr	r2, [pc, #340]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000cae:	f8b2 1110 	ldrh.w	r1, [r2, #272]	@ 0x110
 8000cb2:	f107 0208 	add.w	r2, r7, #8
 8000cb6:	4618      	mov	r0, r3
 8000cb8:	f7ff fce7 	bl	800068a <decodeFrame>
 8000cbc:	4603      	mov	r3, r0
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	d008      	beq.n	8000cd4 <processReceivedChar+0x84>
                sendStatus(ERR_GOOD);
 8000cc2:	2000      	movs	r0, #0
 8000cc4:	f7ff ffac 	bl	8000c20 <sendStatus>
                processCommand(&decodedFrame);
 8000cc8:	f107 0308 	add.w	r3, r7, #8
 8000ccc:	4618      	mov	r0, r3
 8000cce:	f7ff fe83 	bl	80009d8 <processCommand>
 8000cd2:	e002      	b.n	8000cda <processReceivedChar+0x8a>
                sendStatus(ERR_FAIL);
 8000cd4:	2001      	movs	r0, #1
 8000cd6:	f7ff ffa3 	bl	8000c20 <sendStatus>
            resetFrameState();
 8000cda:	f7ff ff8d 	bl	8000bf8 <resetFrameState>
        if (frameState.inFrame) {
 8000cde:	e08b      	b.n	8000df8 <processReceivedChar+0x1a8>
    else if (frameState.inFrame) {
 8000ce0:	4b48      	ldr	r3, [pc, #288]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000ce2:	781b      	ldrb	r3, [r3, #0]
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	f000 8087 	beq.w	8000df8 <processReceivedChar+0x1a8>
        if (frameState.bxIndex <= MAX_FRAME_WITHOUT_STUFFING * 2) {
 8000cea:	4b46      	ldr	r3, [pc, #280]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000cec:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000cf0:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 8000cf4:	d87d      	bhi.n	8000df2 <processReceivedChar+0x1a2>
            if (frameState.escapeDetected) {
 8000cf6:	4b43      	ldr	r3, [pc, #268]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000cf8:	785b      	ldrb	r3, [r3, #1]
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d04d      	beq.n	8000d9a <processReceivedChar+0x14a>
                if (receivedChar == FRAME_START_STUFF) {
 8000cfe:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000d02:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000d06:	781b      	ldrb	r3, [r3, #0]
 8000d08:	2b5e      	cmp	r3, #94	@ 0x5e
 8000d0a:	d10f      	bne.n	8000d2c <processReceivedChar+0xdc>
                    USART_RxBuf[USART_RX_Busy + frameState.bxIndex++] = FRAME_START;
 8000d0c:	4b3d      	ldr	r3, [pc, #244]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d0e:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000d12:	1c5a      	adds	r2, r3, #1
 8000d14:	b291      	uxth	r1, r2
 8000d16:	4a3b      	ldr	r2, [pc, #236]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d18:	f8a2 1110 	strh.w	r1, [r2, #272]	@ 0x110
 8000d1c:	461a      	mov	r2, r3
 8000d1e:	4b3a      	ldr	r3, [pc, #232]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	4413      	add	r3, r2
 8000d24:	4a39      	ldr	r2, [pc, #228]	@ (8000e0c <processReceivedChar+0x1bc>)
 8000d26:	217e      	movs	r1, #126	@ 0x7e
 8000d28:	54d1      	strb	r1, [r2, r3]
 8000d2a:	e032      	b.n	8000d92 <processReceivedChar+0x142>
                else if (receivedChar == ESCAPE_CHAR_STUFF) {
 8000d2c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000d30:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000d34:	781b      	ldrb	r3, [r3, #0]
 8000d36:	2b5d      	cmp	r3, #93	@ 0x5d
 8000d38:	d10f      	bne.n	8000d5a <processReceivedChar+0x10a>
                    USART_RxBuf[USART_RX_Busy + frameState.bxIndex++] = ESCAPE_CHAR;
 8000d3a:	4b32      	ldr	r3, [pc, #200]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d3c:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000d40:	1c5a      	adds	r2, r3, #1
 8000d42:	b291      	uxth	r1, r2
 8000d44:	4a2f      	ldr	r2, [pc, #188]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d46:	f8a2 1110 	strh.w	r1, [r2, #272]	@ 0x110
 8000d4a:	461a      	mov	r2, r3
 8000d4c:	4b2e      	ldr	r3, [pc, #184]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	4413      	add	r3, r2
 8000d52:	4a2e      	ldr	r2, [pc, #184]	@ (8000e0c <processReceivedChar+0x1bc>)
 8000d54:	217d      	movs	r1, #125	@ 0x7d
 8000d56:	54d1      	strb	r1, [r2, r3]
 8000d58:	e01b      	b.n	8000d92 <processReceivedChar+0x142>
                else if (receivedChar == FRAME_END_STUFF) {
 8000d5a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000d5e:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000d62:	781b      	ldrb	r3, [r3, #0]
 8000d64:	2b5c      	cmp	r3, #92	@ 0x5c
 8000d66:	d10f      	bne.n	8000d88 <processReceivedChar+0x138>
                    USART_RxBuf[USART_RX_Busy + frameState.bxIndex++] = FRAME_END;
 8000d68:	4b26      	ldr	r3, [pc, #152]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d6a:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000d6e:	1c5a      	adds	r2, r3, #1
 8000d70:	b291      	uxth	r1, r2
 8000d72:	4a24      	ldr	r2, [pc, #144]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d74:	f8a2 1110 	strh.w	r1, [r2, #272]	@ 0x110
 8000d78:	461a      	mov	r2, r3
 8000d7a:	4b23      	ldr	r3, [pc, #140]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	4413      	add	r3, r2
 8000d80:	4a22      	ldr	r2, [pc, #136]	@ (8000e0c <processReceivedChar+0x1bc>)
 8000d82:	217c      	movs	r1, #124	@ 0x7c
 8000d84:	54d1      	strb	r1, [r2, r3]
 8000d86:	e004      	b.n	8000d92 <processReceivedChar+0x142>
                    sendStatus(ERR_FAIL);
 8000d88:	2001      	movs	r0, #1
 8000d8a:	f7ff ff49 	bl	8000c20 <sendStatus>
                    resetFrameState();
 8000d8e:	f7ff ff33 	bl	8000bf8 <resetFrameState>
                frameState.escapeDetected = false;
 8000d92:	4b1c      	ldr	r3, [pc, #112]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000d94:	2200      	movs	r2, #0
 8000d96:	705a      	strb	r2, [r3, #1]
}
 8000d98:	e02e      	b.n	8000df8 <processReceivedChar+0x1a8>
            else if (receivedChar == ESCAPE_CHAR) {
 8000d9a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000d9e:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 8000da2:	781b      	ldrb	r3, [r3, #0]
 8000da4:	2b7d      	cmp	r3, #125	@ 0x7d
 8000da6:	d103      	bne.n	8000db0 <processReceivedChar+0x160>
                frameState.escapeDetected = true;
 8000da8:	4b16      	ldr	r3, [pc, #88]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000daa:	2201      	movs	r2, #1
 8000dac:	705a      	strb	r2, [r3, #1]
}
 8000dae:	e023      	b.n	8000df8 <processReceivedChar+0x1a8>
                if (USART_RX_Busy + frameState.bxIndex < USART_RXBUF_LEN) {
 8000db0:	4b14      	ldr	r3, [pc, #80]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000db2:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000db6:	461a      	mov	r2, r3
 8000db8:	4b13      	ldr	r3, [pc, #76]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	4413      	add	r3, r2
 8000dbe:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000dc2:	da13      	bge.n	8000dec <processReceivedChar+0x19c>
                    USART_RxBuf[USART_RX_Busy + frameState.bxIndex++] = receivedChar;
 8000dc4:	4b0f      	ldr	r3, [pc, #60]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000dc6:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000dca:	1c5a      	adds	r2, r3, #1
 8000dcc:	b291      	uxth	r1, r2
 8000dce:	4a0d      	ldr	r2, [pc, #52]	@ (8000e04 <processReceivedChar+0x1b4>)
 8000dd0:	f8a2 1110 	strh.w	r1, [r2, #272]	@ 0x110
 8000dd4:	461a      	mov	r2, r3
 8000dd6:	4b0c      	ldr	r3, [pc, #48]	@ (8000e08 <processReceivedChar+0x1b8>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	4413      	add	r3, r2
 8000ddc:	490b      	ldr	r1, [pc, #44]	@ (8000e0c <processReceivedChar+0x1bc>)
 8000dde:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 8000de2:	f2a2 1209 	subw	r2, r2, #265	@ 0x109
 8000de6:	7812      	ldrb	r2, [r2, #0]
 8000de8:	54ca      	strb	r2, [r1, r3]
}
 8000dea:	e005      	b.n	8000df8 <processReceivedChar+0x1a8>
                    resetFrameState();
 8000dec:	f7ff ff04 	bl	8000bf8 <resetFrameState>
}
 8000df0:	e002      	b.n	8000df8 <processReceivedChar+0x1a8>
            resetFrameState();
 8000df2:	f7ff ff01 	bl	8000bf8 <resetFrameState>
}
 8000df6:	e7ff      	b.n	8000df8 <processReceivedChar+0x1a8>
 8000df8:	bf00      	nop
 8000dfa:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	bd80      	pop	{r7, pc}
 8000e02:	bf00      	nop
 8000e04:	2000079c 	.word	0x2000079c
 8000e08:	20000714 	.word	0x20000714
 8000e0c:	20000508 	.word	0x20000508

08000e10 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	b082      	sub	sp, #8
 8000e14:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000e16:	f000 fa87 	bl	8001328 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000e1a:	f000 f829 	bl	8000e70 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000e1e:	f000 f905 	bl	800102c <MX_GPIO_Init>
  MX_TIM2_Init();
 8000e22:	f000 f883 	bl	8000f2c <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8000e26:	f000 f8d7 	bl	8000fd8 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_UART_Receive_IT(&huart2, &USART_RxBuf[USART_RX_Empty], 1);
 8000e2a:	4b0e      	ldr	r3, [pc, #56]	@ (8000e64 <main+0x54>)
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	4a0e      	ldr	r2, [pc, #56]	@ (8000e68 <main+0x58>)
 8000e30:	4413      	add	r3, r2
 8000e32:	2201      	movs	r2, #1
 8000e34:	4619      	mov	r1, r3
 8000e36:	480d      	ldr	r0, [pc, #52]	@ (8000e6c <main+0x5c>)
 8000e38:	f001 fffb 	bl	8002e32 <HAL_UART_Receive_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
while (1) {
    // Sprawdzamy, czy w buforze są nowe dane
    if (USART_kbhit()) {
 8000e3c:	f7ff fcea 	bl	8000814 <USART_kbhit>
 8000e40:	4603      	mov	r3, r0
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d0fa      	beq.n	8000e3c <main+0x2c>
        int16_t receivedChar = USART_getchar();
 8000e46:	f7ff fcf9 	bl	800083c <USART_getchar>
 8000e4a:	4603      	mov	r3, r0
 8000e4c:	80fb      	strh	r3, [r7, #6]
        if (receivedChar != -1) {
 8000e4e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000e52:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000e56:	d0f1      	beq.n	8000e3c <main+0x2c>
            processReceivedChar((uint8_t)receivedChar);
 8000e58:	88fb      	ldrh	r3, [r7, #6]
 8000e5a:	b2db      	uxtb	r3, r3
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	f7ff fef7 	bl	8000c50 <processReceivedChar>
    if (USART_kbhit()) {
 8000e62:	e7eb      	b.n	8000e3c <main+0x2c>
 8000e64:	20000710 	.word	0x20000710
 8000e68:	20000508 	.word	0x20000508
 8000e6c:	200000c0 	.word	0x200000c0

08000e70 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e70:	b580      	push	{r7, lr}
 8000e72:	b094      	sub	sp, #80	@ 0x50
 8000e74:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e76:	f107 0320 	add.w	r3, r7, #32
 8000e7a:	2230      	movs	r2, #48	@ 0x30
 8000e7c:	2100      	movs	r1, #0
 8000e7e:	4618      	mov	r0, r3
 8000e80:	f002 ffdc 	bl	8003e3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e84:	f107 030c 	add.w	r3, r7, #12
 8000e88:	2200      	movs	r2, #0
 8000e8a:	601a      	str	r2, [r3, #0]
 8000e8c:	605a      	str	r2, [r3, #4]
 8000e8e:	609a      	str	r2, [r3, #8]
 8000e90:	60da      	str	r2, [r3, #12]
 8000e92:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e94:	2300      	movs	r3, #0
 8000e96:	60bb      	str	r3, [r7, #8]
 8000e98:	4b22      	ldr	r3, [pc, #136]	@ (8000f24 <SystemClock_Config+0xb4>)
 8000e9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e9c:	4a21      	ldr	r2, [pc, #132]	@ (8000f24 <SystemClock_Config+0xb4>)
 8000e9e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ea2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ea4:	4b1f      	ldr	r3, [pc, #124]	@ (8000f24 <SystemClock_Config+0xb4>)
 8000ea6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ea8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000eac:	60bb      	str	r3, [r7, #8]
 8000eae:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	607b      	str	r3, [r7, #4]
 8000eb4:	4b1c      	ldr	r3, [pc, #112]	@ (8000f28 <SystemClock_Config+0xb8>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	4a1b      	ldr	r2, [pc, #108]	@ (8000f28 <SystemClock_Config+0xb8>)
 8000eba:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000ebe:	6013      	str	r3, [r2, #0]
 8000ec0:	4b19      	ldr	r3, [pc, #100]	@ (8000f28 <SystemClock_Config+0xb8>)
 8000ec2:	681b      	ldr	r3, [r3, #0]
 8000ec4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000ec8:	607b      	str	r3, [r7, #4]
 8000eca:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000ecc:	2302      	movs	r3, #2
 8000ece:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ed0:	2301      	movs	r3, #1
 8000ed2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ed4:	2310      	movs	r3, #16
 8000ed6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000ed8:	2300      	movs	r3, #0
 8000eda:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000edc:	f107 0320 	add.w	r3, r7, #32
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	f000 fdd5 	bl	8001a90 <HAL_RCC_OscConfig>
 8000ee6:	4603      	mov	r3, r0
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d001      	beq.n	8000ef0 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8000eec:	f000 f8f8 	bl	80010e0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ef0:	230f      	movs	r3, #15
 8000ef2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ef8:	2300      	movs	r3, #0
 8000efa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000efc:	2300      	movs	r3, #0
 8000efe:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000f00:	2300      	movs	r3, #0
 8000f02:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000f04:	f107 030c 	add.w	r3, r7, #12
 8000f08:	2100      	movs	r1, #0
 8000f0a:	4618      	mov	r0, r3
 8000f0c:	f001 f838 	bl	8001f80 <HAL_RCC_ClockConfig>
 8000f10:	4603      	mov	r3, r0
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d001      	beq.n	8000f1a <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8000f16:	f000 f8e3 	bl	80010e0 <Error_Handler>
  }
}
 8000f1a:	bf00      	nop
 8000f1c:	3750      	adds	r7, #80	@ 0x50
 8000f1e:	46bd      	mov	sp, r7
 8000f20:	bd80      	pop	{r7, pc}
 8000f22:	bf00      	nop
 8000f24:	40023800 	.word	0x40023800
 8000f28:	40007000 	.word	0x40007000

08000f2c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000f2c:	b580      	push	{r7, lr}
 8000f2e:	b08a      	sub	sp, #40	@ 0x28
 8000f30:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f32:	f107 0320 	add.w	r3, r7, #32
 8000f36:	2200      	movs	r2, #0
 8000f38:	601a      	str	r2, [r3, #0]
 8000f3a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000f3c:	1d3b      	adds	r3, r7, #4
 8000f3e:	2200      	movs	r2, #0
 8000f40:	601a      	str	r2, [r3, #0]
 8000f42:	605a      	str	r2, [r3, #4]
 8000f44:	609a      	str	r2, [r3, #8]
 8000f46:	60da      	str	r2, [r3, #12]
 8000f48:	611a      	str	r2, [r3, #16]
 8000f4a:	615a      	str	r2, [r3, #20]
 8000f4c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000f4e:	4b21      	ldr	r3, [pc, #132]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f50:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000f54:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 16000;
 8000f56:	4b1f      	ldr	r3, [pc, #124]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f58:	f44f 527a 	mov.w	r2, #16000	@ 0x3e80
 8000f5c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f5e:	4b1d      	ldr	r3, [pc, #116]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f60:	2200      	movs	r2, #0
 8000f62:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1000;
 8000f64:	4b1b      	ldr	r3, [pc, #108]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f66:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000f6a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f6c:	4b19      	ldr	r3, [pc, #100]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f6e:	2200      	movs	r2, #0
 8000f70:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f72:	4b18      	ldr	r3, [pc, #96]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f74:	2200      	movs	r2, #0
 8000f76:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 8000f78:	4816      	ldr	r0, [pc, #88]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f7a:	f001 f9e1 	bl	8002340 <HAL_TIM_OC_Init>
 8000f7e:	4603      	mov	r3, r0
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d001      	beq.n	8000f88 <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
 8000f84:	f000 f8ac 	bl	80010e0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f88:	2300      	movs	r3, #0
 8000f8a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000f90:	f107 0320 	add.w	r3, r7, #32
 8000f94:	4619      	mov	r1, r3
 8000f96:	480f      	ldr	r0, [pc, #60]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000f98:	f001 fdb8 	bl	8002b0c <HAL_TIMEx_MasterConfigSynchronization>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d001      	beq.n	8000fa6 <MX_TIM2_Init+0x7a>
  {
    Error_Handler();
 8000fa2:	f000 f89d 	bl	80010e0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000faa:	2300      	movs	r3, #0
 8000fac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000fae:	2300      	movs	r3, #0
 8000fb0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000fb6:	1d3b      	adds	r3, r7, #4
 8000fb8:	220c      	movs	r2, #12
 8000fba:	4619      	mov	r1, r3
 8000fbc:	4805      	ldr	r0, [pc, #20]	@ (8000fd4 <MX_TIM2_Init+0xa8>)
 8000fbe:	f001 faff 	bl	80025c0 <HAL_TIM_OC_ConfigChannel>
 8000fc2:	4603      	mov	r3, r0
 8000fc4:	2b00      	cmp	r3, #0
 8000fc6:	d001      	beq.n	8000fcc <MX_TIM2_Init+0xa0>
  {
    Error_Handler();
 8000fc8:	f000 f88a 	bl	80010e0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000fcc:	bf00      	nop
 8000fce:	3728      	adds	r7, #40	@ 0x28
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	bd80      	pop	{r7, pc}
 8000fd4:	20000078 	.word	0x20000078

08000fd8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000fd8:	b580      	push	{r7, lr}
 8000fda:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000fdc:	4b11      	ldr	r3, [pc, #68]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000fde:	4a12      	ldr	r2, [pc, #72]	@ (8001028 <MX_USART2_UART_Init+0x50>)
 8000fe0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000fe2:	4b10      	ldr	r3, [pc, #64]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000fe4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000fe8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000fea:	4b0e      	ldr	r3, [pc, #56]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000fec:	2200      	movs	r2, #0
 8000fee:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000ff0:	4b0c      	ldr	r3, [pc, #48]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000ff2:	2200      	movs	r2, #0
 8000ff4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000ff6:	4b0b      	ldr	r3, [pc, #44]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000ff8:	2200      	movs	r2, #0
 8000ffa:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000ffc:	4b09      	ldr	r3, [pc, #36]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8000ffe:	220c      	movs	r2, #12
 8001000:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001002:	4b08      	ldr	r3, [pc, #32]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8001004:	2200      	movs	r2, #0
 8001006:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001008:	4b06      	ldr	r3, [pc, #24]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 800100a:	2200      	movs	r2, #0
 800100c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800100e:	4805      	ldr	r0, [pc, #20]	@ (8001024 <MX_USART2_UART_Init+0x4c>)
 8001010:	f001 fdfe 	bl	8002c10 <HAL_UART_Init>
 8001014:	4603      	mov	r3, r0
 8001016:	2b00      	cmp	r3, #0
 8001018:	d001      	beq.n	800101e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800101a:	f000 f861 	bl	80010e0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800101e:	bf00      	nop
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	200000c0 	.word	0x200000c0
 8001028:	40004400 	.word	0x40004400

0800102c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800102c:	b580      	push	{r7, lr}
 800102e:	b088      	sub	sp, #32
 8001030:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001032:	f107 030c 	add.w	r3, r7, #12
 8001036:	2200      	movs	r2, #0
 8001038:	601a      	str	r2, [r3, #0]
 800103a:	605a      	str	r2, [r3, #4]
 800103c:	609a      	str	r2, [r3, #8]
 800103e:	60da      	str	r2, [r3, #12]
 8001040:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001042:	2300      	movs	r3, #0
 8001044:	60bb      	str	r3, [r7, #8]
 8001046:	4b23      	ldr	r3, [pc, #140]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 8001048:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800104a:	4a22      	ldr	r2, [pc, #136]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 800104c:	f043 0304 	orr.w	r3, r3, #4
 8001050:	6313      	str	r3, [r2, #48]	@ 0x30
 8001052:	4b20      	ldr	r3, [pc, #128]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 8001054:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001056:	f003 0304 	and.w	r3, r3, #4
 800105a:	60bb      	str	r3, [r7, #8]
 800105c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800105e:	2300      	movs	r3, #0
 8001060:	607b      	str	r3, [r7, #4]
 8001062:	4b1c      	ldr	r3, [pc, #112]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 8001064:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001066:	4a1b      	ldr	r2, [pc, #108]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 8001068:	f043 0301 	orr.w	r3, r3, #1
 800106c:	6313      	str	r3, [r2, #48]	@ 0x30
 800106e:	4b19      	ldr	r3, [pc, #100]	@ (80010d4 <MX_GPIO_Init+0xa8>)
 8001070:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001072:	f003 0301 	and.w	r3, r3, #1
 8001076:	607b      	str	r3, [r7, #4]
 8001078:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 800107a:	2200      	movs	r2, #0
 800107c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001080:	4815      	ldr	r0, [pc, #84]	@ (80010d8 <MX_GPIO_Init+0xac>)
 8001082:	f000 fceb 	bl	8001a5c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8001086:	2200      	movs	r2, #0
 8001088:	2120      	movs	r1, #32
 800108a:	4814      	ldr	r0, [pc, #80]	@ (80010dc <MX_GPIO_Init+0xb0>)
 800108c:	f000 fce6 	bl	8001a5c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001090:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001094:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001096:	2301      	movs	r3, #1
 8001098:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109a:	2300      	movs	r3, #0
 800109c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800109e:	2300      	movs	r3, #0
 80010a0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010a2:	f107 030c 	add.w	r3, r7, #12
 80010a6:	4619      	mov	r1, r3
 80010a8:	480b      	ldr	r0, [pc, #44]	@ (80010d8 <MX_GPIO_Init+0xac>)
 80010aa:	f000 fb53 	bl	8001754 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 80010ae:	2320      	movs	r3, #32
 80010b0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80010b2:	2301      	movs	r3, #1
 80010b4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010b6:	2300      	movs	r3, #0
 80010b8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010ba:	2300      	movs	r3, #0
 80010bc:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010be:	f107 030c 	add.w	r3, r7, #12
 80010c2:	4619      	mov	r1, r3
 80010c4:	4805      	ldr	r0, [pc, #20]	@ (80010dc <MX_GPIO_Init+0xb0>)
 80010c6:	f000 fb45 	bl	8001754 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80010ca:	bf00      	nop
 80010cc:	3720      	adds	r7, #32
 80010ce:	46bd      	mov	sp, r7
 80010d0:	bd80      	pop	{r7, pc}
 80010d2:	bf00      	nop
 80010d4:	40023800 	.word	0x40023800
 80010d8:	40020800 	.word	0x40020800
 80010dc:	40020000 	.word	0x40020000

080010e0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80010e0:	b480      	push	{r7}
 80010e2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80010e4:	b672      	cpsid	i
}
 80010e6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80010e8:	bf00      	nop
 80010ea:	e7fd      	b.n	80010e8 <Error_Handler+0x8>

080010ec <HAL_MspInit>:
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	2300      	movs	r3, #0
 80010f4:	607b      	str	r3, [r7, #4]
 80010f6:	4b10      	ldr	r3, [pc, #64]	@ (8001138 <HAL_MspInit+0x4c>)
 80010f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010fa:	4a0f      	ldr	r2, [pc, #60]	@ (8001138 <HAL_MspInit+0x4c>)
 80010fc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001100:	6453      	str	r3, [r2, #68]	@ 0x44
 8001102:	4b0d      	ldr	r3, [pc, #52]	@ (8001138 <HAL_MspInit+0x4c>)
 8001104:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001106:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800110a:	607b      	str	r3, [r7, #4]
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	2300      	movs	r3, #0
 8001110:	603b      	str	r3, [r7, #0]
 8001112:	4b09      	ldr	r3, [pc, #36]	@ (8001138 <HAL_MspInit+0x4c>)
 8001114:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001116:	4a08      	ldr	r2, [pc, #32]	@ (8001138 <HAL_MspInit+0x4c>)
 8001118:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800111c:	6413      	str	r3, [r2, #64]	@ 0x40
 800111e:	4b06      	ldr	r3, [pc, #24]	@ (8001138 <HAL_MspInit+0x4c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001122:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001126:	603b      	str	r3, [r7, #0]
 8001128:	683b      	ldr	r3, [r7, #0]
 800112a:	bf00      	nop
 800112c:	370c      	adds	r7, #12
 800112e:	46bd      	mov	sp, r7
 8001130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001134:	4770      	bx	lr
 8001136:	bf00      	nop
 8001138:	40023800 	.word	0x40023800

0800113c <HAL_TIM_OC_MspInit>:
 800113c:	b580      	push	{r7, lr}
 800113e:	b084      	sub	sp, #16
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800114c:	d115      	bne.n	800117a <HAL_TIM_OC_MspInit+0x3e>
 800114e:	2300      	movs	r3, #0
 8001150:	60fb      	str	r3, [r7, #12]
 8001152:	4b0c      	ldr	r3, [pc, #48]	@ (8001184 <HAL_TIM_OC_MspInit+0x48>)
 8001154:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001156:	4a0b      	ldr	r2, [pc, #44]	@ (8001184 <HAL_TIM_OC_MspInit+0x48>)
 8001158:	f043 0301 	orr.w	r3, r3, #1
 800115c:	6413      	str	r3, [r2, #64]	@ 0x40
 800115e:	4b09      	ldr	r3, [pc, #36]	@ (8001184 <HAL_TIM_OC_MspInit+0x48>)
 8001160:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001162:	f003 0301 	and.w	r3, r3, #1
 8001166:	60fb      	str	r3, [r7, #12]
 8001168:	68fb      	ldr	r3, [r7, #12]
 800116a:	2200      	movs	r2, #0
 800116c:	2100      	movs	r1, #0
 800116e:	201c      	movs	r0, #28
 8001170:	f000 fa27 	bl	80015c2 <HAL_NVIC_SetPriority>
 8001174:	201c      	movs	r0, #28
 8001176:	f000 fa40 	bl	80015fa <HAL_NVIC_EnableIRQ>
 800117a:	bf00      	nop
 800117c:	3710      	adds	r7, #16
 800117e:	46bd      	mov	sp, r7
 8001180:	bd80      	pop	{r7, pc}
 8001182:	bf00      	nop
 8001184:	40023800 	.word	0x40023800

08001188 <HAL_UART_MspInit>:
 8001188:	b580      	push	{r7, lr}
 800118a:	b08a      	sub	sp, #40	@ 0x28
 800118c:	af00      	add	r7, sp, #0
 800118e:	6078      	str	r0, [r7, #4]
 8001190:	f107 0314 	add.w	r3, r7, #20
 8001194:	2200      	movs	r2, #0
 8001196:	601a      	str	r2, [r3, #0]
 8001198:	605a      	str	r2, [r3, #4]
 800119a:	609a      	str	r2, [r3, #8]
 800119c:	60da      	str	r2, [r3, #12]
 800119e:	611a      	str	r2, [r3, #16]
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	681b      	ldr	r3, [r3, #0]
 80011a4:	4a1d      	ldr	r2, [pc, #116]	@ (800121c <HAL_UART_MspInit+0x94>)
 80011a6:	4293      	cmp	r3, r2
 80011a8:	d133      	bne.n	8001212 <HAL_UART_MspInit+0x8a>
 80011aa:	2300      	movs	r3, #0
 80011ac:	613b      	str	r3, [r7, #16]
 80011ae:	4b1c      	ldr	r3, [pc, #112]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011b2:	4a1b      	ldr	r2, [pc, #108]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80011b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80011ba:	4b19      	ldr	r3, [pc, #100]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80011c2:	613b      	str	r3, [r7, #16]
 80011c4:	693b      	ldr	r3, [r7, #16]
 80011c6:	2300      	movs	r3, #0
 80011c8:	60fb      	str	r3, [r7, #12]
 80011ca:	4b15      	ldr	r3, [pc, #84]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ce:	4a14      	ldr	r2, [pc, #80]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011d0:	f043 0301 	orr.w	r3, r3, #1
 80011d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80011d6:	4b12      	ldr	r3, [pc, #72]	@ (8001220 <HAL_UART_MspInit+0x98>)
 80011d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011da:	f003 0301 	and.w	r3, r3, #1
 80011de:	60fb      	str	r3, [r7, #12]
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	230c      	movs	r3, #12
 80011e4:	617b      	str	r3, [r7, #20]
 80011e6:	2302      	movs	r3, #2
 80011e8:	61bb      	str	r3, [r7, #24]
 80011ea:	2300      	movs	r3, #0
 80011ec:	61fb      	str	r3, [r7, #28]
 80011ee:	2303      	movs	r3, #3
 80011f0:	623b      	str	r3, [r7, #32]
 80011f2:	2307      	movs	r3, #7
 80011f4:	627b      	str	r3, [r7, #36]	@ 0x24
 80011f6:	f107 0314 	add.w	r3, r7, #20
 80011fa:	4619      	mov	r1, r3
 80011fc:	4809      	ldr	r0, [pc, #36]	@ (8001224 <HAL_UART_MspInit+0x9c>)
 80011fe:	f000 faa9 	bl	8001754 <HAL_GPIO_Init>
 8001202:	2200      	movs	r2, #0
 8001204:	2100      	movs	r1, #0
 8001206:	2026      	movs	r0, #38	@ 0x26
 8001208:	f000 f9db 	bl	80015c2 <HAL_NVIC_SetPriority>
 800120c:	2026      	movs	r0, #38	@ 0x26
 800120e:	f000 f9f4 	bl	80015fa <HAL_NVIC_EnableIRQ>
 8001212:	bf00      	nop
 8001214:	3728      	adds	r7, #40	@ 0x28
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}
 800121a:	bf00      	nop
 800121c:	40004400 	.word	0x40004400
 8001220:	40023800 	.word	0x40023800
 8001224:	40020000 	.word	0x40020000

08001228 <NMI_Handler>:
 8001228:	b480      	push	{r7}
 800122a:	af00      	add	r7, sp, #0
 800122c:	bf00      	nop
 800122e:	e7fd      	b.n	800122c <NMI_Handler+0x4>

08001230 <HardFault_Handler>:
 8001230:	b480      	push	{r7}
 8001232:	af00      	add	r7, sp, #0
 8001234:	bf00      	nop
 8001236:	e7fd      	b.n	8001234 <HardFault_Handler+0x4>

08001238 <MemManage_Handler>:
 8001238:	b480      	push	{r7}
 800123a:	af00      	add	r7, sp, #0
 800123c:	bf00      	nop
 800123e:	e7fd      	b.n	800123c <MemManage_Handler+0x4>

08001240 <BusFault_Handler>:
 8001240:	b480      	push	{r7}
 8001242:	af00      	add	r7, sp, #0
 8001244:	bf00      	nop
 8001246:	e7fd      	b.n	8001244 <BusFault_Handler+0x4>

08001248 <UsageFault_Handler>:
 8001248:	b480      	push	{r7}
 800124a:	af00      	add	r7, sp, #0
 800124c:	bf00      	nop
 800124e:	e7fd      	b.n	800124c <UsageFault_Handler+0x4>

08001250 <SVC_Handler>:
 8001250:	b480      	push	{r7}
 8001252:	af00      	add	r7, sp, #0
 8001254:	bf00      	nop
 8001256:	46bd      	mov	sp, r7
 8001258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800125c:	4770      	bx	lr

0800125e <DebugMon_Handler>:
 800125e:	b480      	push	{r7}
 8001260:	af00      	add	r7, sp, #0
 8001262:	bf00      	nop
 8001264:	46bd      	mov	sp, r7
 8001266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800126a:	4770      	bx	lr

0800126c <PendSV_Handler>:
 800126c:	b480      	push	{r7}
 800126e:	af00      	add	r7, sp, #0
 8001270:	bf00      	nop
 8001272:	46bd      	mov	sp, r7
 8001274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001278:	4770      	bx	lr

0800127a <SysTick_Handler>:
 800127a:	b580      	push	{r7, lr}
 800127c:	af00      	add	r7, sp, #0
 800127e:	f000 f8a5 	bl	80013cc <HAL_IncTick>
 8001282:	bf00      	nop
 8001284:	bd80      	pop	{r7, pc}
	...

08001288 <TIM2_IRQHandler>:
 8001288:	b580      	push	{r7, lr}
 800128a:	af00      	add	r7, sp, #0
 800128c:	4802      	ldr	r0, [pc, #8]	@ (8001298 <TIM2_IRQHandler+0x10>)
 800128e:	f001 f8a6 	bl	80023de <HAL_TIM_IRQHandler>
 8001292:	bf00      	nop
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	20000078 	.word	0x20000078

0800129c <USART2_IRQHandler>:
 800129c:	b580      	push	{r7, lr}
 800129e:	af00      	add	r7, sp, #0
 80012a0:	4802      	ldr	r0, [pc, #8]	@ (80012ac <USART2_IRQHandler+0x10>)
 80012a2:	f001 fdeb 	bl	8002e7c <HAL_UART_IRQHandler>
 80012a6:	bf00      	nop
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	200000c0 	.word	0x200000c0

080012b0 <SystemInit>:
 80012b0:	b480      	push	{r7}
 80012b2:	af00      	add	r7, sp, #0
 80012b4:	4b06      	ldr	r3, [pc, #24]	@ (80012d0 <SystemInit+0x20>)
 80012b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012ba:	4a05      	ldr	r2, [pc, #20]	@ (80012d0 <SystemInit+0x20>)
 80012bc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012c0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80012c4:	bf00      	nop
 80012c6:	46bd      	mov	sp, r7
 80012c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012cc:	4770      	bx	lr
 80012ce:	bf00      	nop
 80012d0:	e000ed00 	.word	0xe000ed00

080012d4 <Reset_Handler>:
 80012d4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800130c <LoopFillZerobss+0xe>
 80012d8:	f7ff ffea 	bl	80012b0 <SystemInit>
 80012dc:	480c      	ldr	r0, [pc, #48]	@ (8001310 <LoopFillZerobss+0x12>)
 80012de:	490d      	ldr	r1, [pc, #52]	@ (8001314 <LoopFillZerobss+0x16>)
 80012e0:	4a0d      	ldr	r2, [pc, #52]	@ (8001318 <LoopFillZerobss+0x1a>)
 80012e2:	2300      	movs	r3, #0
 80012e4:	e002      	b.n	80012ec <LoopCopyDataInit>

080012e6 <CopyDataInit>:
 80012e6:	58d4      	ldr	r4, [r2, r3]
 80012e8:	50c4      	str	r4, [r0, r3]
 80012ea:	3304      	adds	r3, #4

080012ec <LoopCopyDataInit>:
 80012ec:	18c4      	adds	r4, r0, r3
 80012ee:	428c      	cmp	r4, r1
 80012f0:	d3f9      	bcc.n	80012e6 <CopyDataInit>
 80012f2:	4a0a      	ldr	r2, [pc, #40]	@ (800131c <LoopFillZerobss+0x1e>)
 80012f4:	4c0a      	ldr	r4, [pc, #40]	@ (8001320 <LoopFillZerobss+0x22>)
 80012f6:	2300      	movs	r3, #0
 80012f8:	e001      	b.n	80012fe <LoopFillZerobss>

080012fa <FillZerobss>:
 80012fa:	6013      	str	r3, [r2, #0]
 80012fc:	3204      	adds	r2, #4

080012fe <LoopFillZerobss>:
 80012fe:	42a2      	cmp	r2, r4
 8001300:	d3fb      	bcc.n	80012fa <FillZerobss>
 8001302:	f002 fda9 	bl	8003e58 <__libc_init_array>
 8001306:	f7ff fd83 	bl	8000e10 <main>
 800130a:	4770      	bx	lr
 800130c:	20020000 	.word	0x20020000
 8001310:	20000000 	.word	0x20000000
 8001314:	2000005c 	.word	0x2000005c
 8001318:	08004220 	.word	0x08004220
 800131c:	2000005c 	.word	0x2000005c
 8001320:	200009ec 	.word	0x200009ec

08001324 <ADC_IRQHandler>:
 8001324:	e7fe      	b.n	8001324 <ADC_IRQHandler>
	...

08001328 <HAL_Init>:
 8001328:	b580      	push	{r7, lr}
 800132a:	af00      	add	r7, sp, #0
 800132c:	4b0e      	ldr	r3, [pc, #56]	@ (8001368 <HAL_Init+0x40>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	4a0d      	ldr	r2, [pc, #52]	@ (8001368 <HAL_Init+0x40>)
 8001332:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001336:	6013      	str	r3, [r2, #0]
 8001338:	4b0b      	ldr	r3, [pc, #44]	@ (8001368 <HAL_Init+0x40>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	4a0a      	ldr	r2, [pc, #40]	@ (8001368 <HAL_Init+0x40>)
 800133e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001342:	6013      	str	r3, [r2, #0]
 8001344:	4b08      	ldr	r3, [pc, #32]	@ (8001368 <HAL_Init+0x40>)
 8001346:	681b      	ldr	r3, [r3, #0]
 8001348:	4a07      	ldr	r2, [pc, #28]	@ (8001368 <HAL_Init+0x40>)
 800134a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800134e:	6013      	str	r3, [r2, #0]
 8001350:	2003      	movs	r0, #3
 8001352:	f000 f92b 	bl	80015ac <HAL_NVIC_SetPriorityGrouping>
 8001356:	200f      	movs	r0, #15
 8001358:	f000 f808 	bl	800136c <HAL_InitTick>
 800135c:	f7ff fec6 	bl	80010ec <HAL_MspInit>
 8001360:	2300      	movs	r3, #0
 8001362:	4618      	mov	r0, r3
 8001364:	bd80      	pop	{r7, pc}
 8001366:	bf00      	nop
 8001368:	40023c00 	.word	0x40023c00

0800136c <HAL_InitTick>:
 800136c:	b580      	push	{r7, lr}
 800136e:	b082      	sub	sp, #8
 8001370:	af00      	add	r7, sp, #0
 8001372:	6078      	str	r0, [r7, #4]
 8001374:	4b12      	ldr	r3, [pc, #72]	@ (80013c0 <HAL_InitTick+0x54>)
 8001376:	681a      	ldr	r2, [r3, #0]
 8001378:	4b12      	ldr	r3, [pc, #72]	@ (80013c4 <HAL_InitTick+0x58>)
 800137a:	781b      	ldrb	r3, [r3, #0]
 800137c:	4619      	mov	r1, r3
 800137e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001382:	fbb3 f3f1 	udiv	r3, r3, r1
 8001386:	fbb2 f3f3 	udiv	r3, r2, r3
 800138a:	4618      	mov	r0, r3
 800138c:	f000 f943 	bl	8001616 <HAL_SYSTICK_Config>
 8001390:	4603      	mov	r3, r0
 8001392:	2b00      	cmp	r3, #0
 8001394:	d001      	beq.n	800139a <HAL_InitTick+0x2e>
 8001396:	2301      	movs	r3, #1
 8001398:	e00e      	b.n	80013b8 <HAL_InitTick+0x4c>
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	2b0f      	cmp	r3, #15
 800139e:	d80a      	bhi.n	80013b6 <HAL_InitTick+0x4a>
 80013a0:	2200      	movs	r2, #0
 80013a2:	6879      	ldr	r1, [r7, #4]
 80013a4:	f04f 30ff 	mov.w	r0, #4294967295
 80013a8:	f000 f90b 	bl	80015c2 <HAL_NVIC_SetPriority>
 80013ac:	4a06      	ldr	r2, [pc, #24]	@ (80013c8 <HAL_InitTick+0x5c>)
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	6013      	str	r3, [r2, #0]
 80013b2:	2300      	movs	r3, #0
 80013b4:	e000      	b.n	80013b8 <HAL_InitTick+0x4c>
 80013b6:	2301      	movs	r3, #1
 80013b8:	4618      	mov	r0, r3
 80013ba:	3708      	adds	r7, #8
 80013bc:	46bd      	mov	sp, r7
 80013be:	bd80      	pop	{r7, pc}
 80013c0:	20000000 	.word	0x20000000
 80013c4:	20000008 	.word	0x20000008
 80013c8:	20000004 	.word	0x20000004

080013cc <HAL_IncTick>:
 80013cc:	b480      	push	{r7}
 80013ce:	af00      	add	r7, sp, #0
 80013d0:	4b06      	ldr	r3, [pc, #24]	@ (80013ec <HAL_IncTick+0x20>)
 80013d2:	781b      	ldrb	r3, [r3, #0]
 80013d4:	461a      	mov	r2, r3
 80013d6:	4b06      	ldr	r3, [pc, #24]	@ (80013f0 <HAL_IncTick+0x24>)
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	4413      	add	r3, r2
 80013dc:	4a04      	ldr	r2, [pc, #16]	@ (80013f0 <HAL_IncTick+0x24>)
 80013de:	6013      	str	r3, [r2, #0]
 80013e0:	bf00      	nop
 80013e2:	46bd      	mov	sp, r7
 80013e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e8:	4770      	bx	lr
 80013ea:	bf00      	nop
 80013ec:	20000008 	.word	0x20000008
 80013f0:	200008b0 	.word	0x200008b0

080013f4 <HAL_GetTick>:
 80013f4:	b480      	push	{r7}
 80013f6:	af00      	add	r7, sp, #0
 80013f8:	4b03      	ldr	r3, [pc, #12]	@ (8001408 <HAL_GetTick+0x14>)
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	4618      	mov	r0, r3
 80013fe:	46bd      	mov	sp, r7
 8001400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001404:	4770      	bx	lr
 8001406:	bf00      	nop
 8001408:	200008b0 	.word	0x200008b0

0800140c <__NVIC_SetPriorityGrouping>:
 800140c:	b480      	push	{r7}
 800140e:	b085      	sub	sp, #20
 8001410:	af00      	add	r7, sp, #0
 8001412:	6078      	str	r0, [r7, #4]
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	f003 0307 	and.w	r3, r3, #7
 800141a:	60fb      	str	r3, [r7, #12]
 800141c:	4b0c      	ldr	r3, [pc, #48]	@ (8001450 <__NVIC_SetPriorityGrouping+0x44>)
 800141e:	68db      	ldr	r3, [r3, #12]
 8001420:	60bb      	str	r3, [r7, #8]
 8001422:	68ba      	ldr	r2, [r7, #8]
 8001424:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001428:	4013      	ands	r3, r2
 800142a:	60bb      	str	r3, [r7, #8]
 800142c:	68fb      	ldr	r3, [r7, #12]
 800142e:	021a      	lsls	r2, r3, #8
 8001430:	68bb      	ldr	r3, [r7, #8]
 8001432:	4313      	orrs	r3, r2
 8001434:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001438:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800143c:	60bb      	str	r3, [r7, #8]
 800143e:	4a04      	ldr	r2, [pc, #16]	@ (8001450 <__NVIC_SetPriorityGrouping+0x44>)
 8001440:	68bb      	ldr	r3, [r7, #8]
 8001442:	60d3      	str	r3, [r2, #12]
 8001444:	bf00      	nop
 8001446:	3714      	adds	r7, #20
 8001448:	46bd      	mov	sp, r7
 800144a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144e:	4770      	bx	lr
 8001450:	e000ed00 	.word	0xe000ed00

08001454 <__NVIC_GetPriorityGrouping>:
 8001454:	b480      	push	{r7}
 8001456:	af00      	add	r7, sp, #0
 8001458:	4b04      	ldr	r3, [pc, #16]	@ (800146c <__NVIC_GetPriorityGrouping+0x18>)
 800145a:	68db      	ldr	r3, [r3, #12]
 800145c:	0a1b      	lsrs	r3, r3, #8
 800145e:	f003 0307 	and.w	r3, r3, #7
 8001462:	4618      	mov	r0, r3
 8001464:	46bd      	mov	sp, r7
 8001466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146a:	4770      	bx	lr
 800146c:	e000ed00 	.word	0xe000ed00

08001470 <__NVIC_EnableIRQ>:
 8001470:	b480      	push	{r7}
 8001472:	b083      	sub	sp, #12
 8001474:	af00      	add	r7, sp, #0
 8001476:	4603      	mov	r3, r0
 8001478:	71fb      	strb	r3, [r7, #7]
 800147a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800147e:	2b00      	cmp	r3, #0
 8001480:	db0b      	blt.n	800149a <__NVIC_EnableIRQ+0x2a>
 8001482:	79fb      	ldrb	r3, [r7, #7]
 8001484:	f003 021f 	and.w	r2, r3, #31
 8001488:	4907      	ldr	r1, [pc, #28]	@ (80014a8 <__NVIC_EnableIRQ+0x38>)
 800148a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800148e:	095b      	lsrs	r3, r3, #5
 8001490:	2001      	movs	r0, #1
 8001492:	fa00 f202 	lsl.w	r2, r0, r2
 8001496:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800149a:	bf00      	nop
 800149c:	370c      	adds	r7, #12
 800149e:	46bd      	mov	sp, r7
 80014a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014a4:	4770      	bx	lr
 80014a6:	bf00      	nop
 80014a8:	e000e100 	.word	0xe000e100

080014ac <__NVIC_SetPriority>:
 80014ac:	b480      	push	{r7}
 80014ae:	b083      	sub	sp, #12
 80014b0:	af00      	add	r7, sp, #0
 80014b2:	4603      	mov	r3, r0
 80014b4:	6039      	str	r1, [r7, #0]
 80014b6:	71fb      	strb	r3, [r7, #7]
 80014b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	db0a      	blt.n	80014d6 <__NVIC_SetPriority+0x2a>
 80014c0:	683b      	ldr	r3, [r7, #0]
 80014c2:	b2da      	uxtb	r2, r3
 80014c4:	490c      	ldr	r1, [pc, #48]	@ (80014f8 <__NVIC_SetPriority+0x4c>)
 80014c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014ca:	0112      	lsls	r2, r2, #4
 80014cc:	b2d2      	uxtb	r2, r2
 80014ce:	440b      	add	r3, r1
 80014d0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80014d4:	e00a      	b.n	80014ec <__NVIC_SetPriority+0x40>
 80014d6:	683b      	ldr	r3, [r7, #0]
 80014d8:	b2da      	uxtb	r2, r3
 80014da:	4908      	ldr	r1, [pc, #32]	@ (80014fc <__NVIC_SetPriority+0x50>)
 80014dc:	79fb      	ldrb	r3, [r7, #7]
 80014de:	f003 030f 	and.w	r3, r3, #15
 80014e2:	3b04      	subs	r3, #4
 80014e4:	0112      	lsls	r2, r2, #4
 80014e6:	b2d2      	uxtb	r2, r2
 80014e8:	440b      	add	r3, r1
 80014ea:	761a      	strb	r2, [r3, #24]
 80014ec:	bf00      	nop
 80014ee:	370c      	adds	r7, #12
 80014f0:	46bd      	mov	sp, r7
 80014f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f6:	4770      	bx	lr
 80014f8:	e000e100 	.word	0xe000e100
 80014fc:	e000ed00 	.word	0xe000ed00

08001500 <NVIC_EncodePriority>:
 8001500:	b480      	push	{r7}
 8001502:	b089      	sub	sp, #36	@ 0x24
 8001504:	af00      	add	r7, sp, #0
 8001506:	60f8      	str	r0, [r7, #12]
 8001508:	60b9      	str	r1, [r7, #8]
 800150a:	607a      	str	r2, [r7, #4]
 800150c:	68fb      	ldr	r3, [r7, #12]
 800150e:	f003 0307 	and.w	r3, r3, #7
 8001512:	61fb      	str	r3, [r7, #28]
 8001514:	69fb      	ldr	r3, [r7, #28]
 8001516:	f1c3 0307 	rsb	r3, r3, #7
 800151a:	2b04      	cmp	r3, #4
 800151c:	bf28      	it	cs
 800151e:	2304      	movcs	r3, #4
 8001520:	61bb      	str	r3, [r7, #24]
 8001522:	69fb      	ldr	r3, [r7, #28]
 8001524:	3304      	adds	r3, #4
 8001526:	2b06      	cmp	r3, #6
 8001528:	d902      	bls.n	8001530 <NVIC_EncodePriority+0x30>
 800152a:	69fb      	ldr	r3, [r7, #28]
 800152c:	3b03      	subs	r3, #3
 800152e:	e000      	b.n	8001532 <NVIC_EncodePriority+0x32>
 8001530:	2300      	movs	r3, #0
 8001532:	617b      	str	r3, [r7, #20]
 8001534:	f04f 32ff 	mov.w	r2, #4294967295
 8001538:	69bb      	ldr	r3, [r7, #24]
 800153a:	fa02 f303 	lsl.w	r3, r2, r3
 800153e:	43da      	mvns	r2, r3
 8001540:	68bb      	ldr	r3, [r7, #8]
 8001542:	401a      	ands	r2, r3
 8001544:	697b      	ldr	r3, [r7, #20]
 8001546:	409a      	lsls	r2, r3
 8001548:	f04f 31ff 	mov.w	r1, #4294967295
 800154c:	697b      	ldr	r3, [r7, #20]
 800154e:	fa01 f303 	lsl.w	r3, r1, r3
 8001552:	43d9      	mvns	r1, r3
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	400b      	ands	r3, r1
 8001558:	4313      	orrs	r3, r2
 800155a:	4618      	mov	r0, r3
 800155c:	3724      	adds	r7, #36	@ 0x24
 800155e:	46bd      	mov	sp, r7
 8001560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001564:	4770      	bx	lr
	...

08001568 <SysTick_Config>:
 8001568:	b580      	push	{r7, lr}
 800156a:	b082      	sub	sp, #8
 800156c:	af00      	add	r7, sp, #0
 800156e:	6078      	str	r0, [r7, #4]
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	3b01      	subs	r3, #1
 8001574:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001578:	d301      	bcc.n	800157e <SysTick_Config+0x16>
 800157a:	2301      	movs	r3, #1
 800157c:	e00f      	b.n	800159e <SysTick_Config+0x36>
 800157e:	4a0a      	ldr	r2, [pc, #40]	@ (80015a8 <SysTick_Config+0x40>)
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	3b01      	subs	r3, #1
 8001584:	6053      	str	r3, [r2, #4]
 8001586:	210f      	movs	r1, #15
 8001588:	f04f 30ff 	mov.w	r0, #4294967295
 800158c:	f7ff ff8e 	bl	80014ac <__NVIC_SetPriority>
 8001590:	4b05      	ldr	r3, [pc, #20]	@ (80015a8 <SysTick_Config+0x40>)
 8001592:	2200      	movs	r2, #0
 8001594:	609a      	str	r2, [r3, #8]
 8001596:	4b04      	ldr	r3, [pc, #16]	@ (80015a8 <SysTick_Config+0x40>)
 8001598:	2207      	movs	r2, #7
 800159a:	601a      	str	r2, [r3, #0]
 800159c:	2300      	movs	r3, #0
 800159e:	4618      	mov	r0, r3
 80015a0:	3708      	adds	r7, #8
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bd80      	pop	{r7, pc}
 80015a6:	bf00      	nop
 80015a8:	e000e010 	.word	0xe000e010

080015ac <HAL_NVIC_SetPriorityGrouping>:
 80015ac:	b580      	push	{r7, lr}
 80015ae:	b082      	sub	sp, #8
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
 80015b4:	6878      	ldr	r0, [r7, #4]
 80015b6:	f7ff ff29 	bl	800140c <__NVIC_SetPriorityGrouping>
 80015ba:	bf00      	nop
 80015bc:	3708      	adds	r7, #8
 80015be:	46bd      	mov	sp, r7
 80015c0:	bd80      	pop	{r7, pc}

080015c2 <HAL_NVIC_SetPriority>:
 80015c2:	b580      	push	{r7, lr}
 80015c4:	b086      	sub	sp, #24
 80015c6:	af00      	add	r7, sp, #0
 80015c8:	4603      	mov	r3, r0
 80015ca:	60b9      	str	r1, [r7, #8]
 80015cc:	607a      	str	r2, [r7, #4]
 80015ce:	73fb      	strb	r3, [r7, #15]
 80015d0:	2300      	movs	r3, #0
 80015d2:	617b      	str	r3, [r7, #20]
 80015d4:	f7ff ff3e 	bl	8001454 <__NVIC_GetPriorityGrouping>
 80015d8:	6178      	str	r0, [r7, #20]
 80015da:	687a      	ldr	r2, [r7, #4]
 80015dc:	68b9      	ldr	r1, [r7, #8]
 80015de:	6978      	ldr	r0, [r7, #20]
 80015e0:	f7ff ff8e 	bl	8001500 <NVIC_EncodePriority>
 80015e4:	4602      	mov	r2, r0
 80015e6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015ea:	4611      	mov	r1, r2
 80015ec:	4618      	mov	r0, r3
 80015ee:	f7ff ff5d 	bl	80014ac <__NVIC_SetPriority>
 80015f2:	bf00      	nop
 80015f4:	3718      	adds	r7, #24
 80015f6:	46bd      	mov	sp, r7
 80015f8:	bd80      	pop	{r7, pc}

080015fa <HAL_NVIC_EnableIRQ>:
 80015fa:	b580      	push	{r7, lr}
 80015fc:	b082      	sub	sp, #8
 80015fe:	af00      	add	r7, sp, #0
 8001600:	4603      	mov	r3, r0
 8001602:	71fb      	strb	r3, [r7, #7]
 8001604:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001608:	4618      	mov	r0, r3
 800160a:	f7ff ff31 	bl	8001470 <__NVIC_EnableIRQ>
 800160e:	bf00      	nop
 8001610:	3708      	adds	r7, #8
 8001612:	46bd      	mov	sp, r7
 8001614:	bd80      	pop	{r7, pc}

08001616 <HAL_SYSTICK_Config>:
 8001616:	b580      	push	{r7, lr}
 8001618:	b082      	sub	sp, #8
 800161a:	af00      	add	r7, sp, #0
 800161c:	6078      	str	r0, [r7, #4]
 800161e:	6878      	ldr	r0, [r7, #4]
 8001620:	f7ff ffa2 	bl	8001568 <SysTick_Config>
 8001624:	4603      	mov	r3, r0
 8001626:	4618      	mov	r0, r3
 8001628:	3708      	adds	r7, #8
 800162a:	46bd      	mov	sp, r7
 800162c:	bd80      	pop	{r7, pc}

0800162e <HAL_DMA_Abort>:
 800162e:	b580      	push	{r7, lr}
 8001630:	b084      	sub	sp, #16
 8001632:	af00      	add	r7, sp, #0
 8001634:	6078      	str	r0, [r7, #4]
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800163a:	60fb      	str	r3, [r7, #12]
 800163c:	f7ff feda 	bl	80013f4 <HAL_GetTick>
 8001640:	60b8      	str	r0, [r7, #8]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001648:	b2db      	uxtb	r3, r3
 800164a:	2b02      	cmp	r3, #2
 800164c:	d008      	beq.n	8001660 <HAL_DMA_Abort+0x32>
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	2280      	movs	r2, #128	@ 0x80
 8001652:	655a      	str	r2, [r3, #84]	@ 0x54
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	2200      	movs	r2, #0
 8001658:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800165c:	2301      	movs	r3, #1
 800165e:	e052      	b.n	8001706 <HAL_DMA_Abort+0xd8>
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	681b      	ldr	r3, [r3, #0]
 8001664:	681a      	ldr	r2, [r3, #0]
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	f022 0216 	bic.w	r2, r2, #22
 800166e:	601a      	str	r2, [r3, #0]
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	695a      	ldr	r2, [r3, #20]
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800167e:	615a      	str	r2, [r3, #20]
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001684:	2b00      	cmp	r3, #0
 8001686:	d103      	bne.n	8001690 <HAL_DMA_Abort+0x62>
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800168c:	2b00      	cmp	r3, #0
 800168e:	d007      	beq.n	80016a0 <HAL_DMA_Abort+0x72>
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	681a      	ldr	r2, [r3, #0]
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	f022 0208 	bic.w	r2, r2, #8
 800169e:	601a      	str	r2, [r3, #0]
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	681a      	ldr	r2, [r3, #0]
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	f022 0201 	bic.w	r2, r2, #1
 80016ae:	601a      	str	r2, [r3, #0]
 80016b0:	e013      	b.n	80016da <HAL_DMA_Abort+0xac>
 80016b2:	f7ff fe9f 	bl	80013f4 <HAL_GetTick>
 80016b6:	4602      	mov	r2, r0
 80016b8:	68bb      	ldr	r3, [r7, #8]
 80016ba:	1ad3      	subs	r3, r2, r3
 80016bc:	2b05      	cmp	r3, #5
 80016be:	d90c      	bls.n	80016da <HAL_DMA_Abort+0xac>
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	2220      	movs	r2, #32
 80016c4:	655a      	str	r2, [r3, #84]	@ 0x54
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	2203      	movs	r2, #3
 80016ca:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	2200      	movs	r2, #0
 80016d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80016d6:	2303      	movs	r3, #3
 80016d8:	e015      	b.n	8001706 <HAL_DMA_Abort+0xd8>
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	f003 0301 	and.w	r3, r3, #1
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d1e4      	bne.n	80016b2 <HAL_DMA_Abort+0x84>
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80016ec:	223f      	movs	r2, #63	@ 0x3f
 80016ee:	409a      	lsls	r2, r3
 80016f0:	68fb      	ldr	r3, [r7, #12]
 80016f2:	609a      	str	r2, [r3, #8]
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	2201      	movs	r2, #1
 80016f8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	2200      	movs	r2, #0
 8001700:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001704:	2300      	movs	r3, #0
 8001706:	4618      	mov	r0, r3
 8001708:	3710      	adds	r7, #16
 800170a:	46bd      	mov	sp, r7
 800170c:	bd80      	pop	{r7, pc}

0800170e <HAL_DMA_Abort_IT>:
 800170e:	b480      	push	{r7}
 8001710:	b083      	sub	sp, #12
 8001712:	af00      	add	r7, sp, #0
 8001714:	6078      	str	r0, [r7, #4]
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800171c:	b2db      	uxtb	r3, r3
 800171e:	2b02      	cmp	r3, #2
 8001720:	d004      	beq.n	800172c <HAL_DMA_Abort_IT+0x1e>
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	2280      	movs	r2, #128	@ 0x80
 8001726:	655a      	str	r2, [r3, #84]	@ 0x54
 8001728:	2301      	movs	r3, #1
 800172a:	e00c      	b.n	8001746 <HAL_DMA_Abort_IT+0x38>
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	2205      	movs	r2, #5
 8001730:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	681a      	ldr	r2, [r3, #0]
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	f022 0201 	bic.w	r2, r2, #1
 8001742:	601a      	str	r2, [r3, #0]
 8001744:	2300      	movs	r3, #0
 8001746:	4618      	mov	r0, r3
 8001748:	370c      	adds	r7, #12
 800174a:	46bd      	mov	sp, r7
 800174c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001750:	4770      	bx	lr
	...

08001754 <HAL_GPIO_Init>:
 8001754:	b480      	push	{r7}
 8001756:	b089      	sub	sp, #36	@ 0x24
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
 800175c:	6039      	str	r1, [r7, #0]
 800175e:	2300      	movs	r3, #0
 8001760:	617b      	str	r3, [r7, #20]
 8001762:	2300      	movs	r3, #0
 8001764:	613b      	str	r3, [r7, #16]
 8001766:	2300      	movs	r3, #0
 8001768:	61bb      	str	r3, [r7, #24]
 800176a:	2300      	movs	r3, #0
 800176c:	61fb      	str	r3, [r7, #28]
 800176e:	e159      	b.n	8001a24 <HAL_GPIO_Init+0x2d0>
 8001770:	2201      	movs	r2, #1
 8001772:	69fb      	ldr	r3, [r7, #28]
 8001774:	fa02 f303 	lsl.w	r3, r2, r3
 8001778:	617b      	str	r3, [r7, #20]
 800177a:	683b      	ldr	r3, [r7, #0]
 800177c:	681b      	ldr	r3, [r3, #0]
 800177e:	697a      	ldr	r2, [r7, #20]
 8001780:	4013      	ands	r3, r2
 8001782:	613b      	str	r3, [r7, #16]
 8001784:	693a      	ldr	r2, [r7, #16]
 8001786:	697b      	ldr	r3, [r7, #20]
 8001788:	429a      	cmp	r2, r3
 800178a:	f040 8148 	bne.w	8001a1e <HAL_GPIO_Init+0x2ca>
 800178e:	683b      	ldr	r3, [r7, #0]
 8001790:	685b      	ldr	r3, [r3, #4]
 8001792:	f003 0303 	and.w	r3, r3, #3
 8001796:	2b01      	cmp	r3, #1
 8001798:	d005      	beq.n	80017a6 <HAL_GPIO_Init+0x52>
 800179a:	683b      	ldr	r3, [r7, #0]
 800179c:	685b      	ldr	r3, [r3, #4]
 800179e:	f003 0303 	and.w	r3, r3, #3
 80017a2:	2b02      	cmp	r3, #2
 80017a4:	d130      	bne.n	8001808 <HAL_GPIO_Init+0xb4>
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	689b      	ldr	r3, [r3, #8]
 80017aa:	61bb      	str	r3, [r7, #24]
 80017ac:	69fb      	ldr	r3, [r7, #28]
 80017ae:	005b      	lsls	r3, r3, #1
 80017b0:	2203      	movs	r2, #3
 80017b2:	fa02 f303 	lsl.w	r3, r2, r3
 80017b6:	43db      	mvns	r3, r3
 80017b8:	69ba      	ldr	r2, [r7, #24]
 80017ba:	4013      	ands	r3, r2
 80017bc:	61bb      	str	r3, [r7, #24]
 80017be:	683b      	ldr	r3, [r7, #0]
 80017c0:	68da      	ldr	r2, [r3, #12]
 80017c2:	69fb      	ldr	r3, [r7, #28]
 80017c4:	005b      	lsls	r3, r3, #1
 80017c6:	fa02 f303 	lsl.w	r3, r2, r3
 80017ca:	69ba      	ldr	r2, [r7, #24]
 80017cc:	4313      	orrs	r3, r2
 80017ce:	61bb      	str	r3, [r7, #24]
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	69ba      	ldr	r2, [r7, #24]
 80017d4:	609a      	str	r2, [r3, #8]
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	685b      	ldr	r3, [r3, #4]
 80017da:	61bb      	str	r3, [r7, #24]
 80017dc:	2201      	movs	r2, #1
 80017de:	69fb      	ldr	r3, [r7, #28]
 80017e0:	fa02 f303 	lsl.w	r3, r2, r3
 80017e4:	43db      	mvns	r3, r3
 80017e6:	69ba      	ldr	r2, [r7, #24]
 80017e8:	4013      	ands	r3, r2
 80017ea:	61bb      	str	r3, [r7, #24]
 80017ec:	683b      	ldr	r3, [r7, #0]
 80017ee:	685b      	ldr	r3, [r3, #4]
 80017f0:	091b      	lsrs	r3, r3, #4
 80017f2:	f003 0201 	and.w	r2, r3, #1
 80017f6:	69fb      	ldr	r3, [r7, #28]
 80017f8:	fa02 f303 	lsl.w	r3, r2, r3
 80017fc:	69ba      	ldr	r2, [r7, #24]
 80017fe:	4313      	orrs	r3, r2
 8001800:	61bb      	str	r3, [r7, #24]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	69ba      	ldr	r2, [r7, #24]
 8001806:	605a      	str	r2, [r3, #4]
 8001808:	683b      	ldr	r3, [r7, #0]
 800180a:	685b      	ldr	r3, [r3, #4]
 800180c:	f003 0303 	and.w	r3, r3, #3
 8001810:	2b03      	cmp	r3, #3
 8001812:	d017      	beq.n	8001844 <HAL_GPIO_Init+0xf0>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	68db      	ldr	r3, [r3, #12]
 8001818:	61bb      	str	r3, [r7, #24]
 800181a:	69fb      	ldr	r3, [r7, #28]
 800181c:	005b      	lsls	r3, r3, #1
 800181e:	2203      	movs	r2, #3
 8001820:	fa02 f303 	lsl.w	r3, r2, r3
 8001824:	43db      	mvns	r3, r3
 8001826:	69ba      	ldr	r2, [r7, #24]
 8001828:	4013      	ands	r3, r2
 800182a:	61bb      	str	r3, [r7, #24]
 800182c:	683b      	ldr	r3, [r7, #0]
 800182e:	689a      	ldr	r2, [r3, #8]
 8001830:	69fb      	ldr	r3, [r7, #28]
 8001832:	005b      	lsls	r3, r3, #1
 8001834:	fa02 f303 	lsl.w	r3, r2, r3
 8001838:	69ba      	ldr	r2, [r7, #24]
 800183a:	4313      	orrs	r3, r2
 800183c:	61bb      	str	r3, [r7, #24]
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	69ba      	ldr	r2, [r7, #24]
 8001842:	60da      	str	r2, [r3, #12]
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	685b      	ldr	r3, [r3, #4]
 8001848:	f003 0303 	and.w	r3, r3, #3
 800184c:	2b02      	cmp	r3, #2
 800184e:	d123      	bne.n	8001898 <HAL_GPIO_Init+0x144>
 8001850:	69fb      	ldr	r3, [r7, #28]
 8001852:	08da      	lsrs	r2, r3, #3
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	3208      	adds	r2, #8
 8001858:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800185c:	61bb      	str	r3, [r7, #24]
 800185e:	69fb      	ldr	r3, [r7, #28]
 8001860:	f003 0307 	and.w	r3, r3, #7
 8001864:	009b      	lsls	r3, r3, #2
 8001866:	220f      	movs	r2, #15
 8001868:	fa02 f303 	lsl.w	r3, r2, r3
 800186c:	43db      	mvns	r3, r3
 800186e:	69ba      	ldr	r2, [r7, #24]
 8001870:	4013      	ands	r3, r2
 8001872:	61bb      	str	r3, [r7, #24]
 8001874:	683b      	ldr	r3, [r7, #0]
 8001876:	691a      	ldr	r2, [r3, #16]
 8001878:	69fb      	ldr	r3, [r7, #28]
 800187a:	f003 0307 	and.w	r3, r3, #7
 800187e:	009b      	lsls	r3, r3, #2
 8001880:	fa02 f303 	lsl.w	r3, r2, r3
 8001884:	69ba      	ldr	r2, [r7, #24]
 8001886:	4313      	orrs	r3, r2
 8001888:	61bb      	str	r3, [r7, #24]
 800188a:	69fb      	ldr	r3, [r7, #28]
 800188c:	08da      	lsrs	r2, r3, #3
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	3208      	adds	r2, #8
 8001892:	69b9      	ldr	r1, [r7, #24]
 8001894:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	61bb      	str	r3, [r7, #24]
 800189e:	69fb      	ldr	r3, [r7, #28]
 80018a0:	005b      	lsls	r3, r3, #1
 80018a2:	2203      	movs	r2, #3
 80018a4:	fa02 f303 	lsl.w	r3, r2, r3
 80018a8:	43db      	mvns	r3, r3
 80018aa:	69ba      	ldr	r2, [r7, #24]
 80018ac:	4013      	ands	r3, r2
 80018ae:	61bb      	str	r3, [r7, #24]
 80018b0:	683b      	ldr	r3, [r7, #0]
 80018b2:	685b      	ldr	r3, [r3, #4]
 80018b4:	f003 0203 	and.w	r2, r3, #3
 80018b8:	69fb      	ldr	r3, [r7, #28]
 80018ba:	005b      	lsls	r3, r3, #1
 80018bc:	fa02 f303 	lsl.w	r3, r2, r3
 80018c0:	69ba      	ldr	r2, [r7, #24]
 80018c2:	4313      	orrs	r3, r2
 80018c4:	61bb      	str	r3, [r7, #24]
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	69ba      	ldr	r2, [r7, #24]
 80018ca:	601a      	str	r2, [r3, #0]
 80018cc:	683b      	ldr	r3, [r7, #0]
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	f000 80a2 	beq.w	8001a1e <HAL_GPIO_Init+0x2ca>
 80018da:	2300      	movs	r3, #0
 80018dc:	60fb      	str	r3, [r7, #12]
 80018de:	4b57      	ldr	r3, [pc, #348]	@ (8001a3c <HAL_GPIO_Init+0x2e8>)
 80018e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018e2:	4a56      	ldr	r2, [pc, #344]	@ (8001a3c <HAL_GPIO_Init+0x2e8>)
 80018e4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80018e8:	6453      	str	r3, [r2, #68]	@ 0x44
 80018ea:	4b54      	ldr	r3, [pc, #336]	@ (8001a3c <HAL_GPIO_Init+0x2e8>)
 80018ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018ee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80018f2:	60fb      	str	r3, [r7, #12]
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	4a52      	ldr	r2, [pc, #328]	@ (8001a40 <HAL_GPIO_Init+0x2ec>)
 80018f8:	69fb      	ldr	r3, [r7, #28]
 80018fa:	089b      	lsrs	r3, r3, #2
 80018fc:	3302      	adds	r3, #2
 80018fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001902:	61bb      	str	r3, [r7, #24]
 8001904:	69fb      	ldr	r3, [r7, #28]
 8001906:	f003 0303 	and.w	r3, r3, #3
 800190a:	009b      	lsls	r3, r3, #2
 800190c:	220f      	movs	r2, #15
 800190e:	fa02 f303 	lsl.w	r3, r2, r3
 8001912:	43db      	mvns	r3, r3
 8001914:	69ba      	ldr	r2, [r7, #24]
 8001916:	4013      	ands	r3, r2
 8001918:	61bb      	str	r3, [r7, #24]
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	4a49      	ldr	r2, [pc, #292]	@ (8001a44 <HAL_GPIO_Init+0x2f0>)
 800191e:	4293      	cmp	r3, r2
 8001920:	d019      	beq.n	8001956 <HAL_GPIO_Init+0x202>
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	4a48      	ldr	r2, [pc, #288]	@ (8001a48 <HAL_GPIO_Init+0x2f4>)
 8001926:	4293      	cmp	r3, r2
 8001928:	d013      	beq.n	8001952 <HAL_GPIO_Init+0x1fe>
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	4a47      	ldr	r2, [pc, #284]	@ (8001a4c <HAL_GPIO_Init+0x2f8>)
 800192e:	4293      	cmp	r3, r2
 8001930:	d00d      	beq.n	800194e <HAL_GPIO_Init+0x1fa>
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	4a46      	ldr	r2, [pc, #280]	@ (8001a50 <HAL_GPIO_Init+0x2fc>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d007      	beq.n	800194a <HAL_GPIO_Init+0x1f6>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	4a45      	ldr	r2, [pc, #276]	@ (8001a54 <HAL_GPIO_Init+0x300>)
 800193e:	4293      	cmp	r3, r2
 8001940:	d101      	bne.n	8001946 <HAL_GPIO_Init+0x1f2>
 8001942:	2304      	movs	r3, #4
 8001944:	e008      	b.n	8001958 <HAL_GPIO_Init+0x204>
 8001946:	2307      	movs	r3, #7
 8001948:	e006      	b.n	8001958 <HAL_GPIO_Init+0x204>
 800194a:	2303      	movs	r3, #3
 800194c:	e004      	b.n	8001958 <HAL_GPIO_Init+0x204>
 800194e:	2302      	movs	r3, #2
 8001950:	e002      	b.n	8001958 <HAL_GPIO_Init+0x204>
 8001952:	2301      	movs	r3, #1
 8001954:	e000      	b.n	8001958 <HAL_GPIO_Init+0x204>
 8001956:	2300      	movs	r3, #0
 8001958:	69fa      	ldr	r2, [r7, #28]
 800195a:	f002 0203 	and.w	r2, r2, #3
 800195e:	0092      	lsls	r2, r2, #2
 8001960:	4093      	lsls	r3, r2
 8001962:	69ba      	ldr	r2, [r7, #24]
 8001964:	4313      	orrs	r3, r2
 8001966:	61bb      	str	r3, [r7, #24]
 8001968:	4935      	ldr	r1, [pc, #212]	@ (8001a40 <HAL_GPIO_Init+0x2ec>)
 800196a:	69fb      	ldr	r3, [r7, #28]
 800196c:	089b      	lsrs	r3, r3, #2
 800196e:	3302      	adds	r3, #2
 8001970:	69ba      	ldr	r2, [r7, #24]
 8001972:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001976:	4b38      	ldr	r3, [pc, #224]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 8001978:	689b      	ldr	r3, [r3, #8]
 800197a:	61bb      	str	r3, [r7, #24]
 800197c:	693b      	ldr	r3, [r7, #16]
 800197e:	43db      	mvns	r3, r3
 8001980:	69ba      	ldr	r2, [r7, #24]
 8001982:	4013      	ands	r3, r2
 8001984:	61bb      	str	r3, [r7, #24]
 8001986:	683b      	ldr	r3, [r7, #0]
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800198e:	2b00      	cmp	r3, #0
 8001990:	d003      	beq.n	800199a <HAL_GPIO_Init+0x246>
 8001992:	69ba      	ldr	r2, [r7, #24]
 8001994:	693b      	ldr	r3, [r7, #16]
 8001996:	4313      	orrs	r3, r2
 8001998:	61bb      	str	r3, [r7, #24]
 800199a:	4a2f      	ldr	r2, [pc, #188]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 800199c:	69bb      	ldr	r3, [r7, #24]
 800199e:	6093      	str	r3, [r2, #8]
 80019a0:	4b2d      	ldr	r3, [pc, #180]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80019a2:	68db      	ldr	r3, [r3, #12]
 80019a4:	61bb      	str	r3, [r7, #24]
 80019a6:	693b      	ldr	r3, [r7, #16]
 80019a8:	43db      	mvns	r3, r3
 80019aa:	69ba      	ldr	r2, [r7, #24]
 80019ac:	4013      	ands	r3, r2
 80019ae:	61bb      	str	r3, [r7, #24]
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	685b      	ldr	r3, [r3, #4]
 80019b4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d003      	beq.n	80019c4 <HAL_GPIO_Init+0x270>
 80019bc:	69ba      	ldr	r2, [r7, #24]
 80019be:	693b      	ldr	r3, [r7, #16]
 80019c0:	4313      	orrs	r3, r2
 80019c2:	61bb      	str	r3, [r7, #24]
 80019c4:	4a24      	ldr	r2, [pc, #144]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80019c6:	69bb      	ldr	r3, [r7, #24]
 80019c8:	60d3      	str	r3, [r2, #12]
 80019ca:	4b23      	ldr	r3, [pc, #140]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80019cc:	685b      	ldr	r3, [r3, #4]
 80019ce:	61bb      	str	r3, [r7, #24]
 80019d0:	693b      	ldr	r3, [r7, #16]
 80019d2:	43db      	mvns	r3, r3
 80019d4:	69ba      	ldr	r2, [r7, #24]
 80019d6:	4013      	ands	r3, r2
 80019d8:	61bb      	str	r3, [r7, #24]
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	685b      	ldr	r3, [r3, #4]
 80019de:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d003      	beq.n	80019ee <HAL_GPIO_Init+0x29a>
 80019e6:	69ba      	ldr	r2, [r7, #24]
 80019e8:	693b      	ldr	r3, [r7, #16]
 80019ea:	4313      	orrs	r3, r2
 80019ec:	61bb      	str	r3, [r7, #24]
 80019ee:	4a1a      	ldr	r2, [pc, #104]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80019f0:	69bb      	ldr	r3, [r7, #24]
 80019f2:	6053      	str	r3, [r2, #4]
 80019f4:	4b18      	ldr	r3, [pc, #96]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	61bb      	str	r3, [r7, #24]
 80019fa:	693b      	ldr	r3, [r7, #16]
 80019fc:	43db      	mvns	r3, r3
 80019fe:	69ba      	ldr	r2, [r7, #24]
 8001a00:	4013      	ands	r3, r2
 8001a02:	61bb      	str	r3, [r7, #24]
 8001a04:	683b      	ldr	r3, [r7, #0]
 8001a06:	685b      	ldr	r3, [r3, #4]
 8001a08:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	d003      	beq.n	8001a18 <HAL_GPIO_Init+0x2c4>
 8001a10:	69ba      	ldr	r2, [r7, #24]
 8001a12:	693b      	ldr	r3, [r7, #16]
 8001a14:	4313      	orrs	r3, r2
 8001a16:	61bb      	str	r3, [r7, #24]
 8001a18:	4a0f      	ldr	r2, [pc, #60]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 8001a1a:	69bb      	ldr	r3, [r7, #24]
 8001a1c:	6013      	str	r3, [r2, #0]
 8001a1e:	69fb      	ldr	r3, [r7, #28]
 8001a20:	3301      	adds	r3, #1
 8001a22:	61fb      	str	r3, [r7, #28]
 8001a24:	69fb      	ldr	r3, [r7, #28]
 8001a26:	2b0f      	cmp	r3, #15
 8001a28:	f67f aea2 	bls.w	8001770 <HAL_GPIO_Init+0x1c>
 8001a2c:	bf00      	nop
 8001a2e:	bf00      	nop
 8001a30:	3724      	adds	r7, #36	@ 0x24
 8001a32:	46bd      	mov	sp, r7
 8001a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a38:	4770      	bx	lr
 8001a3a:	bf00      	nop
 8001a3c:	40023800 	.word	0x40023800
 8001a40:	40013800 	.word	0x40013800
 8001a44:	40020000 	.word	0x40020000
 8001a48:	40020400 	.word	0x40020400
 8001a4c:	40020800 	.word	0x40020800
 8001a50:	40020c00 	.word	0x40020c00
 8001a54:	40021000 	.word	0x40021000
 8001a58:	40013c00 	.word	0x40013c00

08001a5c <HAL_GPIO_WritePin>:
 8001a5c:	b480      	push	{r7}
 8001a5e:	b083      	sub	sp, #12
 8001a60:	af00      	add	r7, sp, #0
 8001a62:	6078      	str	r0, [r7, #4]
 8001a64:	460b      	mov	r3, r1
 8001a66:	807b      	strh	r3, [r7, #2]
 8001a68:	4613      	mov	r3, r2
 8001a6a:	707b      	strb	r3, [r7, #1]
 8001a6c:	787b      	ldrb	r3, [r7, #1]
 8001a6e:	2b00      	cmp	r3, #0
 8001a70:	d003      	beq.n	8001a7a <HAL_GPIO_WritePin+0x1e>
 8001a72:	887a      	ldrh	r2, [r7, #2]
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	619a      	str	r2, [r3, #24]
 8001a78:	e003      	b.n	8001a82 <HAL_GPIO_WritePin+0x26>
 8001a7a:	887b      	ldrh	r3, [r7, #2]
 8001a7c:	041a      	lsls	r2, r3, #16
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	619a      	str	r2, [r3, #24]
 8001a82:	bf00      	nop
 8001a84:	370c      	adds	r7, #12
 8001a86:	46bd      	mov	sp, r7
 8001a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a8c:	4770      	bx	lr
	...

08001a90 <HAL_RCC_OscConfig>:
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b086      	sub	sp, #24
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	d101      	bne.n	8001aa2 <HAL_RCC_OscConfig+0x12>
 8001a9e:	2301      	movs	r3, #1
 8001aa0:	e267      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	f003 0301 	and.w	r3, r3, #1
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d075      	beq.n	8001b9a <HAL_RCC_OscConfig+0x10a>
 8001aae:	4b88      	ldr	r3, [pc, #544]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001ab0:	689b      	ldr	r3, [r3, #8]
 8001ab2:	f003 030c 	and.w	r3, r3, #12
 8001ab6:	2b04      	cmp	r3, #4
 8001ab8:	d00c      	beq.n	8001ad4 <HAL_RCC_OscConfig+0x44>
 8001aba:	4b85      	ldr	r3, [pc, #532]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001abc:	689b      	ldr	r3, [r3, #8]
 8001abe:	f003 030c 	and.w	r3, r3, #12
 8001ac2:	2b08      	cmp	r3, #8
 8001ac4:	d112      	bne.n	8001aec <HAL_RCC_OscConfig+0x5c>
 8001ac6:	4b82      	ldr	r3, [pc, #520]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001ac8:	685b      	ldr	r3, [r3, #4]
 8001aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001ace:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8001ad2:	d10b      	bne.n	8001aec <HAL_RCC_OscConfig+0x5c>
 8001ad4:	4b7e      	ldr	r3, [pc, #504]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d05b      	beq.n	8001b98 <HAL_RCC_OscConfig+0x108>
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	685b      	ldr	r3, [r3, #4]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d157      	bne.n	8001b98 <HAL_RCC_OscConfig+0x108>
 8001ae8:	2301      	movs	r3, #1
 8001aea:	e242      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	685b      	ldr	r3, [r3, #4]
 8001af0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001af4:	d106      	bne.n	8001b04 <HAL_RCC_OscConfig+0x74>
 8001af6:	4b76      	ldr	r3, [pc, #472]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	4a75      	ldr	r2, [pc, #468]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001afc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001b00:	6013      	str	r3, [r2, #0]
 8001b02:	e01d      	b.n	8001b40 <HAL_RCC_OscConfig+0xb0>
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	685b      	ldr	r3, [r3, #4]
 8001b08:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001b0c:	d10c      	bne.n	8001b28 <HAL_RCC_OscConfig+0x98>
 8001b0e:	4b70      	ldr	r3, [pc, #448]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	4a6f      	ldr	r2, [pc, #444]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b14:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001b18:	6013      	str	r3, [r2, #0]
 8001b1a:	4b6d      	ldr	r3, [pc, #436]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	4a6c      	ldr	r2, [pc, #432]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b20:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001b24:	6013      	str	r3, [r2, #0]
 8001b26:	e00b      	b.n	8001b40 <HAL_RCC_OscConfig+0xb0>
 8001b28:	4b69      	ldr	r3, [pc, #420]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	4a68      	ldr	r2, [pc, #416]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b2e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001b32:	6013      	str	r3, [r2, #0]
 8001b34:	4b66      	ldr	r3, [pc, #408]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4a65      	ldr	r2, [pc, #404]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b3a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001b3e:	6013      	str	r3, [r2, #0]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	685b      	ldr	r3, [r3, #4]
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d013      	beq.n	8001b70 <HAL_RCC_OscConfig+0xe0>
 8001b48:	f7ff fc54 	bl	80013f4 <HAL_GetTick>
 8001b4c:	6138      	str	r0, [r7, #16]
 8001b4e:	e008      	b.n	8001b62 <HAL_RCC_OscConfig+0xd2>
 8001b50:	f7ff fc50 	bl	80013f4 <HAL_GetTick>
 8001b54:	4602      	mov	r2, r0
 8001b56:	693b      	ldr	r3, [r7, #16]
 8001b58:	1ad3      	subs	r3, r2, r3
 8001b5a:	2b64      	cmp	r3, #100	@ 0x64
 8001b5c:	d901      	bls.n	8001b62 <HAL_RCC_OscConfig+0xd2>
 8001b5e:	2303      	movs	r3, #3
 8001b60:	e207      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001b62:	4b5b      	ldr	r3, [pc, #364]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b6a:	2b00      	cmp	r3, #0
 8001b6c:	d0f0      	beq.n	8001b50 <HAL_RCC_OscConfig+0xc0>
 8001b6e:	e014      	b.n	8001b9a <HAL_RCC_OscConfig+0x10a>
 8001b70:	f7ff fc40 	bl	80013f4 <HAL_GetTick>
 8001b74:	6138      	str	r0, [r7, #16]
 8001b76:	e008      	b.n	8001b8a <HAL_RCC_OscConfig+0xfa>
 8001b78:	f7ff fc3c 	bl	80013f4 <HAL_GetTick>
 8001b7c:	4602      	mov	r2, r0
 8001b7e:	693b      	ldr	r3, [r7, #16]
 8001b80:	1ad3      	subs	r3, r2, r3
 8001b82:	2b64      	cmp	r3, #100	@ 0x64
 8001b84:	d901      	bls.n	8001b8a <HAL_RCC_OscConfig+0xfa>
 8001b86:	2303      	movs	r3, #3
 8001b88:	e1f3      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001b8a:	4b51      	ldr	r3, [pc, #324]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	d1f0      	bne.n	8001b78 <HAL_RCC_OscConfig+0xe8>
 8001b96:	e000      	b.n	8001b9a <HAL_RCC_OscConfig+0x10a>
 8001b98:	bf00      	nop
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f003 0302 	and.w	r3, r3, #2
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d063      	beq.n	8001c6e <HAL_RCC_OscConfig+0x1de>
 8001ba6:	4b4a      	ldr	r3, [pc, #296]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001ba8:	689b      	ldr	r3, [r3, #8]
 8001baa:	f003 030c 	and.w	r3, r3, #12
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d00b      	beq.n	8001bca <HAL_RCC_OscConfig+0x13a>
 8001bb2:	4b47      	ldr	r3, [pc, #284]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001bb4:	689b      	ldr	r3, [r3, #8]
 8001bb6:	f003 030c 	and.w	r3, r3, #12
 8001bba:	2b08      	cmp	r3, #8
 8001bbc:	d11c      	bne.n	8001bf8 <HAL_RCC_OscConfig+0x168>
 8001bbe:	4b44      	ldr	r3, [pc, #272]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001bc0:	685b      	ldr	r3, [r3, #4]
 8001bc2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d116      	bne.n	8001bf8 <HAL_RCC_OscConfig+0x168>
 8001bca:	4b41      	ldr	r3, [pc, #260]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	f003 0302 	and.w	r3, r3, #2
 8001bd2:	2b00      	cmp	r3, #0
 8001bd4:	d005      	beq.n	8001be2 <HAL_RCC_OscConfig+0x152>
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	68db      	ldr	r3, [r3, #12]
 8001bda:	2b01      	cmp	r3, #1
 8001bdc:	d001      	beq.n	8001be2 <HAL_RCC_OscConfig+0x152>
 8001bde:	2301      	movs	r3, #1
 8001be0:	e1c7      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001be2:	4b3b      	ldr	r3, [pc, #236]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	691b      	ldr	r3, [r3, #16]
 8001bee:	00db      	lsls	r3, r3, #3
 8001bf0:	4937      	ldr	r1, [pc, #220]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001bf2:	4313      	orrs	r3, r2
 8001bf4:	600b      	str	r3, [r1, #0]
 8001bf6:	e03a      	b.n	8001c6e <HAL_RCC_OscConfig+0x1de>
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	68db      	ldr	r3, [r3, #12]
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	d020      	beq.n	8001c42 <HAL_RCC_OscConfig+0x1b2>
 8001c00:	4b34      	ldr	r3, [pc, #208]	@ (8001cd4 <HAL_RCC_OscConfig+0x244>)
 8001c02:	2201      	movs	r2, #1
 8001c04:	601a      	str	r2, [r3, #0]
 8001c06:	f7ff fbf5 	bl	80013f4 <HAL_GetTick>
 8001c0a:	6138      	str	r0, [r7, #16]
 8001c0c:	e008      	b.n	8001c20 <HAL_RCC_OscConfig+0x190>
 8001c0e:	f7ff fbf1 	bl	80013f4 <HAL_GetTick>
 8001c12:	4602      	mov	r2, r0
 8001c14:	693b      	ldr	r3, [r7, #16]
 8001c16:	1ad3      	subs	r3, r2, r3
 8001c18:	2b02      	cmp	r3, #2
 8001c1a:	d901      	bls.n	8001c20 <HAL_RCC_OscConfig+0x190>
 8001c1c:	2303      	movs	r3, #3
 8001c1e:	e1a8      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001c20:	4b2b      	ldr	r3, [pc, #172]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	f003 0302 	and.w	r3, r3, #2
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	d0f0      	beq.n	8001c0e <HAL_RCC_OscConfig+0x17e>
 8001c2c:	4b28      	ldr	r3, [pc, #160]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	691b      	ldr	r3, [r3, #16]
 8001c38:	00db      	lsls	r3, r3, #3
 8001c3a:	4925      	ldr	r1, [pc, #148]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001c3c:	4313      	orrs	r3, r2
 8001c3e:	600b      	str	r3, [r1, #0]
 8001c40:	e015      	b.n	8001c6e <HAL_RCC_OscConfig+0x1de>
 8001c42:	4b24      	ldr	r3, [pc, #144]	@ (8001cd4 <HAL_RCC_OscConfig+0x244>)
 8001c44:	2200      	movs	r2, #0
 8001c46:	601a      	str	r2, [r3, #0]
 8001c48:	f7ff fbd4 	bl	80013f4 <HAL_GetTick>
 8001c4c:	6138      	str	r0, [r7, #16]
 8001c4e:	e008      	b.n	8001c62 <HAL_RCC_OscConfig+0x1d2>
 8001c50:	f7ff fbd0 	bl	80013f4 <HAL_GetTick>
 8001c54:	4602      	mov	r2, r0
 8001c56:	693b      	ldr	r3, [r7, #16]
 8001c58:	1ad3      	subs	r3, r2, r3
 8001c5a:	2b02      	cmp	r3, #2
 8001c5c:	d901      	bls.n	8001c62 <HAL_RCC_OscConfig+0x1d2>
 8001c5e:	2303      	movs	r3, #3
 8001c60:	e187      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001c62:	4b1b      	ldr	r3, [pc, #108]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	f003 0302 	and.w	r3, r3, #2
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d1f0      	bne.n	8001c50 <HAL_RCC_OscConfig+0x1c0>
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	f003 0308 	and.w	r3, r3, #8
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d036      	beq.n	8001ce8 <HAL_RCC_OscConfig+0x258>
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	695b      	ldr	r3, [r3, #20]
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	d016      	beq.n	8001cb0 <HAL_RCC_OscConfig+0x220>
 8001c82:	4b15      	ldr	r3, [pc, #84]	@ (8001cd8 <HAL_RCC_OscConfig+0x248>)
 8001c84:	2201      	movs	r2, #1
 8001c86:	601a      	str	r2, [r3, #0]
 8001c88:	f7ff fbb4 	bl	80013f4 <HAL_GetTick>
 8001c8c:	6138      	str	r0, [r7, #16]
 8001c8e:	e008      	b.n	8001ca2 <HAL_RCC_OscConfig+0x212>
 8001c90:	f7ff fbb0 	bl	80013f4 <HAL_GetTick>
 8001c94:	4602      	mov	r2, r0
 8001c96:	693b      	ldr	r3, [r7, #16]
 8001c98:	1ad3      	subs	r3, r2, r3
 8001c9a:	2b02      	cmp	r3, #2
 8001c9c:	d901      	bls.n	8001ca2 <HAL_RCC_OscConfig+0x212>
 8001c9e:	2303      	movs	r3, #3
 8001ca0:	e167      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001ca2:	4b0b      	ldr	r3, [pc, #44]	@ (8001cd0 <HAL_RCC_OscConfig+0x240>)
 8001ca4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ca6:	f003 0302 	and.w	r3, r3, #2
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	d0f0      	beq.n	8001c90 <HAL_RCC_OscConfig+0x200>
 8001cae:	e01b      	b.n	8001ce8 <HAL_RCC_OscConfig+0x258>
 8001cb0:	4b09      	ldr	r3, [pc, #36]	@ (8001cd8 <HAL_RCC_OscConfig+0x248>)
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	601a      	str	r2, [r3, #0]
 8001cb6:	f7ff fb9d 	bl	80013f4 <HAL_GetTick>
 8001cba:	6138      	str	r0, [r7, #16]
 8001cbc:	e00e      	b.n	8001cdc <HAL_RCC_OscConfig+0x24c>
 8001cbe:	f7ff fb99 	bl	80013f4 <HAL_GetTick>
 8001cc2:	4602      	mov	r2, r0
 8001cc4:	693b      	ldr	r3, [r7, #16]
 8001cc6:	1ad3      	subs	r3, r2, r3
 8001cc8:	2b02      	cmp	r3, #2
 8001cca:	d907      	bls.n	8001cdc <HAL_RCC_OscConfig+0x24c>
 8001ccc:	2303      	movs	r3, #3
 8001cce:	e150      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001cd0:	40023800 	.word	0x40023800
 8001cd4:	42470000 	.word	0x42470000
 8001cd8:	42470e80 	.word	0x42470e80
 8001cdc:	4b88      	ldr	r3, [pc, #544]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001cde:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001ce0:	f003 0302 	and.w	r3, r3, #2
 8001ce4:	2b00      	cmp	r3, #0
 8001ce6:	d1ea      	bne.n	8001cbe <HAL_RCC_OscConfig+0x22e>
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	f003 0304 	and.w	r3, r3, #4
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	f000 8097 	beq.w	8001e24 <HAL_RCC_OscConfig+0x394>
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	75fb      	strb	r3, [r7, #23]
 8001cfa:	4b81      	ldr	r3, [pc, #516]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001cfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001cfe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d10f      	bne.n	8001d26 <HAL_RCC_OscConfig+0x296>
 8001d06:	2300      	movs	r3, #0
 8001d08:	60bb      	str	r3, [r7, #8]
 8001d0a:	4b7d      	ldr	r3, [pc, #500]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d0e:	4a7c      	ldr	r2, [pc, #496]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d10:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001d14:	6413      	str	r3, [r2, #64]	@ 0x40
 8001d16:	4b7a      	ldr	r3, [pc, #488]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d1a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d1e:	60bb      	str	r3, [r7, #8]
 8001d20:	68bb      	ldr	r3, [r7, #8]
 8001d22:	2301      	movs	r3, #1
 8001d24:	75fb      	strb	r3, [r7, #23]
 8001d26:	4b77      	ldr	r3, [pc, #476]	@ (8001f04 <HAL_RCC_OscConfig+0x474>)
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d118      	bne.n	8001d64 <HAL_RCC_OscConfig+0x2d4>
 8001d32:	4b74      	ldr	r3, [pc, #464]	@ (8001f04 <HAL_RCC_OscConfig+0x474>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	4a73      	ldr	r2, [pc, #460]	@ (8001f04 <HAL_RCC_OscConfig+0x474>)
 8001d38:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001d3c:	6013      	str	r3, [r2, #0]
 8001d3e:	f7ff fb59 	bl	80013f4 <HAL_GetTick>
 8001d42:	6138      	str	r0, [r7, #16]
 8001d44:	e008      	b.n	8001d58 <HAL_RCC_OscConfig+0x2c8>
 8001d46:	f7ff fb55 	bl	80013f4 <HAL_GetTick>
 8001d4a:	4602      	mov	r2, r0
 8001d4c:	693b      	ldr	r3, [r7, #16]
 8001d4e:	1ad3      	subs	r3, r2, r3
 8001d50:	2b02      	cmp	r3, #2
 8001d52:	d901      	bls.n	8001d58 <HAL_RCC_OscConfig+0x2c8>
 8001d54:	2303      	movs	r3, #3
 8001d56:	e10c      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001d58:	4b6a      	ldr	r3, [pc, #424]	@ (8001f04 <HAL_RCC_OscConfig+0x474>)
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	d0f0      	beq.n	8001d46 <HAL_RCC_OscConfig+0x2b6>
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	689b      	ldr	r3, [r3, #8]
 8001d68:	2b01      	cmp	r3, #1
 8001d6a:	d106      	bne.n	8001d7a <HAL_RCC_OscConfig+0x2ea>
 8001d6c:	4b64      	ldr	r3, [pc, #400]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d6e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d70:	4a63      	ldr	r2, [pc, #396]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d72:	f043 0301 	orr.w	r3, r3, #1
 8001d76:	6713      	str	r3, [r2, #112]	@ 0x70
 8001d78:	e01c      	b.n	8001db4 <HAL_RCC_OscConfig+0x324>
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	689b      	ldr	r3, [r3, #8]
 8001d7e:	2b05      	cmp	r3, #5
 8001d80:	d10c      	bne.n	8001d9c <HAL_RCC_OscConfig+0x30c>
 8001d82:	4b5f      	ldr	r3, [pc, #380]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d84:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d86:	4a5e      	ldr	r2, [pc, #376]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d88:	f043 0304 	orr.w	r3, r3, #4
 8001d8c:	6713      	str	r3, [r2, #112]	@ 0x70
 8001d8e:	4b5c      	ldr	r3, [pc, #368]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d90:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d92:	4a5b      	ldr	r2, [pc, #364]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d94:	f043 0301 	orr.w	r3, r3, #1
 8001d98:	6713      	str	r3, [r2, #112]	@ 0x70
 8001d9a:	e00b      	b.n	8001db4 <HAL_RCC_OscConfig+0x324>
 8001d9c:	4b58      	ldr	r3, [pc, #352]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001d9e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001da0:	4a57      	ldr	r2, [pc, #348]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001da2:	f023 0301 	bic.w	r3, r3, #1
 8001da6:	6713      	str	r3, [r2, #112]	@ 0x70
 8001da8:	4b55      	ldr	r3, [pc, #340]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001daa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001dac:	4a54      	ldr	r2, [pc, #336]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001dae:	f023 0304 	bic.w	r3, r3, #4
 8001db2:	6713      	str	r3, [r2, #112]	@ 0x70
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	689b      	ldr	r3, [r3, #8]
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d015      	beq.n	8001de8 <HAL_RCC_OscConfig+0x358>
 8001dbc:	f7ff fb1a 	bl	80013f4 <HAL_GetTick>
 8001dc0:	6138      	str	r0, [r7, #16]
 8001dc2:	e00a      	b.n	8001dda <HAL_RCC_OscConfig+0x34a>
 8001dc4:	f7ff fb16 	bl	80013f4 <HAL_GetTick>
 8001dc8:	4602      	mov	r2, r0
 8001dca:	693b      	ldr	r3, [r7, #16]
 8001dcc:	1ad3      	subs	r3, r2, r3
 8001dce:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001dd2:	4293      	cmp	r3, r2
 8001dd4:	d901      	bls.n	8001dda <HAL_RCC_OscConfig+0x34a>
 8001dd6:	2303      	movs	r3, #3
 8001dd8:	e0cb      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001dda:	4b49      	ldr	r3, [pc, #292]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001ddc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001dde:	f003 0302 	and.w	r3, r3, #2
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d0ee      	beq.n	8001dc4 <HAL_RCC_OscConfig+0x334>
 8001de6:	e014      	b.n	8001e12 <HAL_RCC_OscConfig+0x382>
 8001de8:	f7ff fb04 	bl	80013f4 <HAL_GetTick>
 8001dec:	6138      	str	r0, [r7, #16]
 8001dee:	e00a      	b.n	8001e06 <HAL_RCC_OscConfig+0x376>
 8001df0:	f7ff fb00 	bl	80013f4 <HAL_GetTick>
 8001df4:	4602      	mov	r2, r0
 8001df6:	693b      	ldr	r3, [r7, #16]
 8001df8:	1ad3      	subs	r3, r2, r3
 8001dfa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001dfe:	4293      	cmp	r3, r2
 8001e00:	d901      	bls.n	8001e06 <HAL_RCC_OscConfig+0x376>
 8001e02:	2303      	movs	r3, #3
 8001e04:	e0b5      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001e06:	4b3e      	ldr	r3, [pc, #248]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e08:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001e0a:	f003 0302 	and.w	r3, r3, #2
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	d1ee      	bne.n	8001df0 <HAL_RCC_OscConfig+0x360>
 8001e12:	7dfb      	ldrb	r3, [r7, #23]
 8001e14:	2b01      	cmp	r3, #1
 8001e16:	d105      	bne.n	8001e24 <HAL_RCC_OscConfig+0x394>
 8001e18:	4b39      	ldr	r3, [pc, #228]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e1c:	4a38      	ldr	r2, [pc, #224]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e1e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001e22:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	699b      	ldr	r3, [r3, #24]
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	f000 80a1 	beq.w	8001f70 <HAL_RCC_OscConfig+0x4e0>
 8001e2e:	4b34      	ldr	r3, [pc, #208]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e30:	689b      	ldr	r3, [r3, #8]
 8001e32:	f003 030c 	and.w	r3, r3, #12
 8001e36:	2b08      	cmp	r3, #8
 8001e38:	d05c      	beq.n	8001ef4 <HAL_RCC_OscConfig+0x464>
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	699b      	ldr	r3, [r3, #24]
 8001e3e:	2b02      	cmp	r3, #2
 8001e40:	d141      	bne.n	8001ec6 <HAL_RCC_OscConfig+0x436>
 8001e42:	4b31      	ldr	r3, [pc, #196]	@ (8001f08 <HAL_RCC_OscConfig+0x478>)
 8001e44:	2200      	movs	r2, #0
 8001e46:	601a      	str	r2, [r3, #0]
 8001e48:	f7ff fad4 	bl	80013f4 <HAL_GetTick>
 8001e4c:	6138      	str	r0, [r7, #16]
 8001e4e:	e008      	b.n	8001e62 <HAL_RCC_OscConfig+0x3d2>
 8001e50:	f7ff fad0 	bl	80013f4 <HAL_GetTick>
 8001e54:	4602      	mov	r2, r0
 8001e56:	693b      	ldr	r3, [r7, #16]
 8001e58:	1ad3      	subs	r3, r2, r3
 8001e5a:	2b02      	cmp	r3, #2
 8001e5c:	d901      	bls.n	8001e62 <HAL_RCC_OscConfig+0x3d2>
 8001e5e:	2303      	movs	r3, #3
 8001e60:	e087      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001e62:	4b27      	ldr	r3, [pc, #156]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d1f0      	bne.n	8001e50 <HAL_RCC_OscConfig+0x3c0>
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	69da      	ldr	r2, [r3, #28]
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	6a1b      	ldr	r3, [r3, #32]
 8001e76:	431a      	orrs	r2, r3
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e7c:	019b      	lsls	r3, r3, #6
 8001e7e:	431a      	orrs	r2, r3
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001e84:	085b      	lsrs	r3, r3, #1
 8001e86:	3b01      	subs	r3, #1
 8001e88:	041b      	lsls	r3, r3, #16
 8001e8a:	431a      	orrs	r2, r3
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e90:	061b      	lsls	r3, r3, #24
 8001e92:	491b      	ldr	r1, [pc, #108]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001e94:	4313      	orrs	r3, r2
 8001e96:	604b      	str	r3, [r1, #4]
 8001e98:	4b1b      	ldr	r3, [pc, #108]	@ (8001f08 <HAL_RCC_OscConfig+0x478>)
 8001e9a:	2201      	movs	r2, #1
 8001e9c:	601a      	str	r2, [r3, #0]
 8001e9e:	f7ff faa9 	bl	80013f4 <HAL_GetTick>
 8001ea2:	6138      	str	r0, [r7, #16]
 8001ea4:	e008      	b.n	8001eb8 <HAL_RCC_OscConfig+0x428>
 8001ea6:	f7ff faa5 	bl	80013f4 <HAL_GetTick>
 8001eaa:	4602      	mov	r2, r0
 8001eac:	693b      	ldr	r3, [r7, #16]
 8001eae:	1ad3      	subs	r3, r2, r3
 8001eb0:	2b02      	cmp	r3, #2
 8001eb2:	d901      	bls.n	8001eb8 <HAL_RCC_OscConfig+0x428>
 8001eb4:	2303      	movs	r3, #3
 8001eb6:	e05c      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001eb8:	4b11      	ldr	r3, [pc, #68]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d0f0      	beq.n	8001ea6 <HAL_RCC_OscConfig+0x416>
 8001ec4:	e054      	b.n	8001f70 <HAL_RCC_OscConfig+0x4e0>
 8001ec6:	4b10      	ldr	r3, [pc, #64]	@ (8001f08 <HAL_RCC_OscConfig+0x478>)
 8001ec8:	2200      	movs	r2, #0
 8001eca:	601a      	str	r2, [r3, #0]
 8001ecc:	f7ff fa92 	bl	80013f4 <HAL_GetTick>
 8001ed0:	6138      	str	r0, [r7, #16]
 8001ed2:	e008      	b.n	8001ee6 <HAL_RCC_OscConfig+0x456>
 8001ed4:	f7ff fa8e 	bl	80013f4 <HAL_GetTick>
 8001ed8:	4602      	mov	r2, r0
 8001eda:	693b      	ldr	r3, [r7, #16]
 8001edc:	1ad3      	subs	r3, r2, r3
 8001ede:	2b02      	cmp	r3, #2
 8001ee0:	d901      	bls.n	8001ee6 <HAL_RCC_OscConfig+0x456>
 8001ee2:	2303      	movs	r3, #3
 8001ee4:	e045      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001ee6:	4b06      	ldr	r3, [pc, #24]	@ (8001f00 <HAL_RCC_OscConfig+0x470>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d1f0      	bne.n	8001ed4 <HAL_RCC_OscConfig+0x444>
 8001ef2:	e03d      	b.n	8001f70 <HAL_RCC_OscConfig+0x4e0>
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	699b      	ldr	r3, [r3, #24]
 8001ef8:	2b01      	cmp	r3, #1
 8001efa:	d107      	bne.n	8001f0c <HAL_RCC_OscConfig+0x47c>
 8001efc:	2301      	movs	r3, #1
 8001efe:	e038      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001f00:	40023800 	.word	0x40023800
 8001f04:	40007000 	.word	0x40007000
 8001f08:	42470060 	.word	0x42470060
 8001f0c:	4b1b      	ldr	r3, [pc, #108]	@ (8001f7c <HAL_RCC_OscConfig+0x4ec>)
 8001f0e:	685b      	ldr	r3, [r3, #4]
 8001f10:	60fb      	str	r3, [r7, #12]
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	699b      	ldr	r3, [r3, #24]
 8001f16:	2b01      	cmp	r3, #1
 8001f18:	d028      	beq.n	8001f6c <HAL_RCC_OscConfig+0x4dc>
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	69db      	ldr	r3, [r3, #28]
 8001f24:	429a      	cmp	r2, r3
 8001f26:	d121      	bne.n	8001f6c <HAL_RCC_OscConfig+0x4dc>
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	6a1b      	ldr	r3, [r3, #32]
 8001f32:	429a      	cmp	r2, r3
 8001f34:	d11a      	bne.n	8001f6c <HAL_RCC_OscConfig+0x4dc>
 8001f36:	68fa      	ldr	r2, [r7, #12]
 8001f38:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8001f3c:	4013      	ands	r3, r2
 8001f3e:	687a      	ldr	r2, [r7, #4]
 8001f40:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8001f42:	0192      	lsls	r2, r2, #6
 8001f44:	4293      	cmp	r3, r2
 8001f46:	d111      	bne.n	8001f6c <HAL_RCC_OscConfig+0x4dc>
 8001f48:	68fb      	ldr	r3, [r7, #12]
 8001f4a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001f52:	085b      	lsrs	r3, r3, #1
 8001f54:	3b01      	subs	r3, #1
 8001f56:	041b      	lsls	r3, r3, #16
 8001f58:	429a      	cmp	r2, r3
 8001f5a:	d107      	bne.n	8001f6c <HAL_RCC_OscConfig+0x4dc>
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f66:	061b      	lsls	r3, r3, #24
 8001f68:	429a      	cmp	r2, r3
 8001f6a:	d001      	beq.n	8001f70 <HAL_RCC_OscConfig+0x4e0>
 8001f6c:	2301      	movs	r3, #1
 8001f6e:	e000      	b.n	8001f72 <HAL_RCC_OscConfig+0x4e2>
 8001f70:	2300      	movs	r3, #0
 8001f72:	4618      	mov	r0, r3
 8001f74:	3718      	adds	r7, #24
 8001f76:	46bd      	mov	sp, r7
 8001f78:	bd80      	pop	{r7, pc}
 8001f7a:	bf00      	nop
 8001f7c:	40023800 	.word	0x40023800

08001f80 <HAL_RCC_ClockConfig>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b084      	sub	sp, #16
 8001f84:	af00      	add	r7, sp, #0
 8001f86:	6078      	str	r0, [r7, #4]
 8001f88:	6039      	str	r1, [r7, #0]
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d101      	bne.n	8001f94 <HAL_RCC_ClockConfig+0x14>
 8001f90:	2301      	movs	r3, #1
 8001f92:	e0cc      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 8001f94:	4b68      	ldr	r3, [pc, #416]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	f003 0307 	and.w	r3, r3, #7
 8001f9c:	683a      	ldr	r2, [r7, #0]
 8001f9e:	429a      	cmp	r2, r3
 8001fa0:	d90c      	bls.n	8001fbc <HAL_RCC_ClockConfig+0x3c>
 8001fa2:	4b65      	ldr	r3, [pc, #404]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 8001fa4:	683a      	ldr	r2, [r7, #0]
 8001fa6:	b2d2      	uxtb	r2, r2
 8001fa8:	701a      	strb	r2, [r3, #0]
 8001faa:	4b63      	ldr	r3, [pc, #396]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	f003 0307 	and.w	r3, r3, #7
 8001fb2:	683a      	ldr	r2, [r7, #0]
 8001fb4:	429a      	cmp	r2, r3
 8001fb6:	d001      	beq.n	8001fbc <HAL_RCC_ClockConfig+0x3c>
 8001fb8:	2301      	movs	r3, #1
 8001fba:	e0b8      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	f003 0302 	and.w	r3, r3, #2
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d020      	beq.n	800200a <HAL_RCC_ClockConfig+0x8a>
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	f003 0304 	and.w	r3, r3, #4
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d005      	beq.n	8001fe0 <HAL_RCC_ClockConfig+0x60>
 8001fd4:	4b59      	ldr	r3, [pc, #356]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8001fd6:	689b      	ldr	r3, [r3, #8]
 8001fd8:	4a58      	ldr	r2, [pc, #352]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8001fda:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8001fde:	6093      	str	r3, [r2, #8]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	f003 0308 	and.w	r3, r3, #8
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d005      	beq.n	8001ff8 <HAL_RCC_ClockConfig+0x78>
 8001fec:	4b53      	ldr	r3, [pc, #332]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8001fee:	689b      	ldr	r3, [r3, #8]
 8001ff0:	4a52      	ldr	r2, [pc, #328]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8001ff2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8001ff6:	6093      	str	r3, [r2, #8]
 8001ff8:	4b50      	ldr	r3, [pc, #320]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8001ffa:	689b      	ldr	r3, [r3, #8]
 8001ffc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	689b      	ldr	r3, [r3, #8]
 8002004:	494d      	ldr	r1, [pc, #308]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002006:	4313      	orrs	r3, r2
 8002008:	608b      	str	r3, [r1, #8]
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f003 0301 	and.w	r3, r3, #1
 8002012:	2b00      	cmp	r3, #0
 8002014:	d044      	beq.n	80020a0 <HAL_RCC_ClockConfig+0x120>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	685b      	ldr	r3, [r3, #4]
 800201a:	2b01      	cmp	r3, #1
 800201c:	d107      	bne.n	800202e <HAL_RCC_ClockConfig+0xae>
 800201e:	4b47      	ldr	r3, [pc, #284]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002026:	2b00      	cmp	r3, #0
 8002028:	d119      	bne.n	800205e <HAL_RCC_ClockConfig+0xde>
 800202a:	2301      	movs	r3, #1
 800202c:	e07f      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	685b      	ldr	r3, [r3, #4]
 8002032:	2b02      	cmp	r3, #2
 8002034:	d003      	beq.n	800203e <HAL_RCC_ClockConfig+0xbe>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	685b      	ldr	r3, [r3, #4]
 800203a:	2b03      	cmp	r3, #3
 800203c:	d107      	bne.n	800204e <HAL_RCC_ClockConfig+0xce>
 800203e:	4b3f      	ldr	r3, [pc, #252]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002046:	2b00      	cmp	r3, #0
 8002048:	d109      	bne.n	800205e <HAL_RCC_ClockConfig+0xde>
 800204a:	2301      	movs	r3, #1
 800204c:	e06f      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 800204e:	4b3b      	ldr	r3, [pc, #236]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	f003 0302 	and.w	r3, r3, #2
 8002056:	2b00      	cmp	r3, #0
 8002058:	d101      	bne.n	800205e <HAL_RCC_ClockConfig+0xde>
 800205a:	2301      	movs	r3, #1
 800205c:	e067      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 800205e:	4b37      	ldr	r3, [pc, #220]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002060:	689b      	ldr	r3, [r3, #8]
 8002062:	f023 0203 	bic.w	r2, r3, #3
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	685b      	ldr	r3, [r3, #4]
 800206a:	4934      	ldr	r1, [pc, #208]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 800206c:	4313      	orrs	r3, r2
 800206e:	608b      	str	r3, [r1, #8]
 8002070:	f7ff f9c0 	bl	80013f4 <HAL_GetTick>
 8002074:	60f8      	str	r0, [r7, #12]
 8002076:	e00a      	b.n	800208e <HAL_RCC_ClockConfig+0x10e>
 8002078:	f7ff f9bc 	bl	80013f4 <HAL_GetTick>
 800207c:	4602      	mov	r2, r0
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	1ad3      	subs	r3, r2, r3
 8002082:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002086:	4293      	cmp	r3, r2
 8002088:	d901      	bls.n	800208e <HAL_RCC_ClockConfig+0x10e>
 800208a:	2303      	movs	r3, #3
 800208c:	e04f      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 800208e:	4b2b      	ldr	r3, [pc, #172]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002090:	689b      	ldr	r3, [r3, #8]
 8002092:	f003 020c 	and.w	r2, r3, #12
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	685b      	ldr	r3, [r3, #4]
 800209a:	009b      	lsls	r3, r3, #2
 800209c:	429a      	cmp	r2, r3
 800209e:	d1eb      	bne.n	8002078 <HAL_RCC_ClockConfig+0xf8>
 80020a0:	4b25      	ldr	r3, [pc, #148]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	f003 0307 	and.w	r3, r3, #7
 80020a8:	683a      	ldr	r2, [r7, #0]
 80020aa:	429a      	cmp	r2, r3
 80020ac:	d20c      	bcs.n	80020c8 <HAL_RCC_ClockConfig+0x148>
 80020ae:	4b22      	ldr	r3, [pc, #136]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 80020b0:	683a      	ldr	r2, [r7, #0]
 80020b2:	b2d2      	uxtb	r2, r2
 80020b4:	701a      	strb	r2, [r3, #0]
 80020b6:	4b20      	ldr	r3, [pc, #128]	@ (8002138 <HAL_RCC_ClockConfig+0x1b8>)
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f003 0307 	and.w	r3, r3, #7
 80020be:	683a      	ldr	r2, [r7, #0]
 80020c0:	429a      	cmp	r2, r3
 80020c2:	d001      	beq.n	80020c8 <HAL_RCC_ClockConfig+0x148>
 80020c4:	2301      	movs	r3, #1
 80020c6:	e032      	b.n	800212e <HAL_RCC_ClockConfig+0x1ae>
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	f003 0304 	and.w	r3, r3, #4
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d008      	beq.n	80020e6 <HAL_RCC_ClockConfig+0x166>
 80020d4:	4b19      	ldr	r3, [pc, #100]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 80020d6:	689b      	ldr	r3, [r3, #8]
 80020d8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	68db      	ldr	r3, [r3, #12]
 80020e0:	4916      	ldr	r1, [pc, #88]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 80020e2:	4313      	orrs	r3, r2
 80020e4:	608b      	str	r3, [r1, #8]
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	f003 0308 	and.w	r3, r3, #8
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d009      	beq.n	8002106 <HAL_RCC_ClockConfig+0x186>
 80020f2:	4b12      	ldr	r3, [pc, #72]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 80020f4:	689b      	ldr	r3, [r3, #8]
 80020f6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	691b      	ldr	r3, [r3, #16]
 80020fe:	00db      	lsls	r3, r3, #3
 8002100:	490e      	ldr	r1, [pc, #56]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 8002102:	4313      	orrs	r3, r2
 8002104:	608b      	str	r3, [r1, #8]
 8002106:	f000 f821 	bl	800214c <HAL_RCC_GetSysClockFreq>
 800210a:	4602      	mov	r2, r0
 800210c:	4b0b      	ldr	r3, [pc, #44]	@ (800213c <HAL_RCC_ClockConfig+0x1bc>)
 800210e:	689b      	ldr	r3, [r3, #8]
 8002110:	091b      	lsrs	r3, r3, #4
 8002112:	f003 030f 	and.w	r3, r3, #15
 8002116:	490a      	ldr	r1, [pc, #40]	@ (8002140 <HAL_RCC_ClockConfig+0x1c0>)
 8002118:	5ccb      	ldrb	r3, [r1, r3]
 800211a:	fa22 f303 	lsr.w	r3, r2, r3
 800211e:	4a09      	ldr	r2, [pc, #36]	@ (8002144 <HAL_RCC_ClockConfig+0x1c4>)
 8002120:	6013      	str	r3, [r2, #0]
 8002122:	4b09      	ldr	r3, [pc, #36]	@ (8002148 <HAL_RCC_ClockConfig+0x1c8>)
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	4618      	mov	r0, r3
 8002128:	f7ff f920 	bl	800136c <HAL_InitTick>
 800212c:	2300      	movs	r3, #0
 800212e:	4618      	mov	r0, r3
 8002130:	3710      	adds	r7, #16
 8002132:	46bd      	mov	sp, r7
 8002134:	bd80      	pop	{r7, pc}
 8002136:	bf00      	nop
 8002138:	40023c00 	.word	0x40023c00
 800213c:	40023800 	.word	0x40023800
 8002140:	080040f4 	.word	0x080040f4
 8002144:	20000000 	.word	0x20000000
 8002148:	20000004 	.word	0x20000004

0800214c <HAL_RCC_GetSysClockFreq>:
 800214c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002150:	b090      	sub	sp, #64	@ 0x40
 8002152:	af00      	add	r7, sp, #0
 8002154:	2300      	movs	r3, #0
 8002156:	637b      	str	r3, [r7, #52]	@ 0x34
 8002158:	2300      	movs	r3, #0
 800215a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800215c:	2300      	movs	r3, #0
 800215e:	633b      	str	r3, [r7, #48]	@ 0x30
 8002160:	2300      	movs	r3, #0
 8002162:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002164:	4b59      	ldr	r3, [pc, #356]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 8002166:	689b      	ldr	r3, [r3, #8]
 8002168:	f003 030c 	and.w	r3, r3, #12
 800216c:	2b08      	cmp	r3, #8
 800216e:	d00d      	beq.n	800218c <HAL_RCC_GetSysClockFreq+0x40>
 8002170:	2b08      	cmp	r3, #8
 8002172:	f200 80a1 	bhi.w	80022b8 <HAL_RCC_GetSysClockFreq+0x16c>
 8002176:	2b00      	cmp	r3, #0
 8002178:	d002      	beq.n	8002180 <HAL_RCC_GetSysClockFreq+0x34>
 800217a:	2b04      	cmp	r3, #4
 800217c:	d003      	beq.n	8002186 <HAL_RCC_GetSysClockFreq+0x3a>
 800217e:	e09b      	b.n	80022b8 <HAL_RCC_GetSysClockFreq+0x16c>
 8002180:	4b53      	ldr	r3, [pc, #332]	@ (80022d0 <HAL_RCC_GetSysClockFreq+0x184>)
 8002182:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002184:	e09b      	b.n	80022be <HAL_RCC_GetSysClockFreq+0x172>
 8002186:	4b53      	ldr	r3, [pc, #332]	@ (80022d4 <HAL_RCC_GetSysClockFreq+0x188>)
 8002188:	63bb      	str	r3, [r7, #56]	@ 0x38
 800218a:	e098      	b.n	80022be <HAL_RCC_GetSysClockFreq+0x172>
 800218c:	4b4f      	ldr	r3, [pc, #316]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 800218e:	685b      	ldr	r3, [r3, #4]
 8002190:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002194:	637b      	str	r3, [r7, #52]	@ 0x34
 8002196:	4b4d      	ldr	r3, [pc, #308]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 8002198:	685b      	ldr	r3, [r3, #4]
 800219a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800219e:	2b00      	cmp	r3, #0
 80021a0:	d028      	beq.n	80021f4 <HAL_RCC_GetSysClockFreq+0xa8>
 80021a2:	4b4a      	ldr	r3, [pc, #296]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 80021a4:	685b      	ldr	r3, [r3, #4]
 80021a6:	099b      	lsrs	r3, r3, #6
 80021a8:	2200      	movs	r2, #0
 80021aa:	623b      	str	r3, [r7, #32]
 80021ac:	627a      	str	r2, [r7, #36]	@ 0x24
 80021ae:	6a3b      	ldr	r3, [r7, #32]
 80021b0:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80021b4:	2100      	movs	r1, #0
 80021b6:	4b47      	ldr	r3, [pc, #284]	@ (80022d4 <HAL_RCC_GetSysClockFreq+0x188>)
 80021b8:	fb03 f201 	mul.w	r2, r3, r1
 80021bc:	2300      	movs	r3, #0
 80021be:	fb00 f303 	mul.w	r3, r0, r3
 80021c2:	4413      	add	r3, r2
 80021c4:	4a43      	ldr	r2, [pc, #268]	@ (80022d4 <HAL_RCC_GetSysClockFreq+0x188>)
 80021c6:	fba0 1202 	umull	r1, r2, r0, r2
 80021ca:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80021cc:	460a      	mov	r2, r1
 80021ce:	62ba      	str	r2, [r7, #40]	@ 0x28
 80021d0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80021d2:	4413      	add	r3, r2
 80021d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80021d6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80021d8:	2200      	movs	r2, #0
 80021da:	61bb      	str	r3, [r7, #24]
 80021dc:	61fa      	str	r2, [r7, #28]
 80021de:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80021e2:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80021e6:	f7fd ffff 	bl	80001e8 <__aeabi_uldivmod>
 80021ea:	4602      	mov	r2, r0
 80021ec:	460b      	mov	r3, r1
 80021ee:	4613      	mov	r3, r2
 80021f0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80021f2:	e053      	b.n	800229c <HAL_RCC_GetSysClockFreq+0x150>
 80021f4:	4b35      	ldr	r3, [pc, #212]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 80021f6:	685b      	ldr	r3, [r3, #4]
 80021f8:	099b      	lsrs	r3, r3, #6
 80021fa:	2200      	movs	r2, #0
 80021fc:	613b      	str	r3, [r7, #16]
 80021fe:	617a      	str	r2, [r7, #20]
 8002200:	693b      	ldr	r3, [r7, #16]
 8002202:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8002206:	f04f 0b00 	mov.w	fp, #0
 800220a:	4652      	mov	r2, sl
 800220c:	465b      	mov	r3, fp
 800220e:	f04f 0000 	mov.w	r0, #0
 8002212:	f04f 0100 	mov.w	r1, #0
 8002216:	0159      	lsls	r1, r3, #5
 8002218:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800221c:	0150      	lsls	r0, r2, #5
 800221e:	4602      	mov	r2, r0
 8002220:	460b      	mov	r3, r1
 8002222:	ebb2 080a 	subs.w	r8, r2, sl
 8002226:	eb63 090b 	sbc.w	r9, r3, fp
 800222a:	f04f 0200 	mov.w	r2, #0
 800222e:	f04f 0300 	mov.w	r3, #0
 8002232:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8002236:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800223a:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800223e:	ebb2 0408 	subs.w	r4, r2, r8
 8002242:	eb63 0509 	sbc.w	r5, r3, r9
 8002246:	f04f 0200 	mov.w	r2, #0
 800224a:	f04f 0300 	mov.w	r3, #0
 800224e:	00eb      	lsls	r3, r5, #3
 8002250:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002254:	00e2      	lsls	r2, r4, #3
 8002256:	4614      	mov	r4, r2
 8002258:	461d      	mov	r5, r3
 800225a:	eb14 030a 	adds.w	r3, r4, sl
 800225e:	603b      	str	r3, [r7, #0]
 8002260:	eb45 030b 	adc.w	r3, r5, fp
 8002264:	607b      	str	r3, [r7, #4]
 8002266:	f04f 0200 	mov.w	r2, #0
 800226a:	f04f 0300 	mov.w	r3, #0
 800226e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002272:	4629      	mov	r1, r5
 8002274:	028b      	lsls	r3, r1, #10
 8002276:	4621      	mov	r1, r4
 8002278:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800227c:	4621      	mov	r1, r4
 800227e:	028a      	lsls	r2, r1, #10
 8002280:	4610      	mov	r0, r2
 8002282:	4619      	mov	r1, r3
 8002284:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002286:	2200      	movs	r2, #0
 8002288:	60bb      	str	r3, [r7, #8]
 800228a:	60fa      	str	r2, [r7, #12]
 800228c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002290:	f7fd ffaa 	bl	80001e8 <__aeabi_uldivmod>
 8002294:	4602      	mov	r2, r0
 8002296:	460b      	mov	r3, r1
 8002298:	4613      	mov	r3, r2
 800229a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800229c:	4b0b      	ldr	r3, [pc, #44]	@ (80022cc <HAL_RCC_GetSysClockFreq+0x180>)
 800229e:	685b      	ldr	r3, [r3, #4]
 80022a0:	0c1b      	lsrs	r3, r3, #16
 80022a2:	f003 0303 	and.w	r3, r3, #3
 80022a6:	3301      	adds	r3, #1
 80022a8:	005b      	lsls	r3, r3, #1
 80022aa:	633b      	str	r3, [r7, #48]	@ 0x30
 80022ac:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80022ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80022b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80022b4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80022b6:	e002      	b.n	80022be <HAL_RCC_GetSysClockFreq+0x172>
 80022b8:	4b05      	ldr	r3, [pc, #20]	@ (80022d0 <HAL_RCC_GetSysClockFreq+0x184>)
 80022ba:	63bb      	str	r3, [r7, #56]	@ 0x38
 80022bc:	bf00      	nop
 80022be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80022c0:	4618      	mov	r0, r3
 80022c2:	3740      	adds	r7, #64	@ 0x40
 80022c4:	46bd      	mov	sp, r7
 80022c6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80022ca:	bf00      	nop
 80022cc:	40023800 	.word	0x40023800
 80022d0:	00f42400 	.word	0x00f42400
 80022d4:	017d7840 	.word	0x017d7840

080022d8 <HAL_RCC_GetHCLKFreq>:
 80022d8:	b480      	push	{r7}
 80022da:	af00      	add	r7, sp, #0
 80022dc:	4b03      	ldr	r3, [pc, #12]	@ (80022ec <HAL_RCC_GetHCLKFreq+0x14>)
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	4618      	mov	r0, r3
 80022e2:	46bd      	mov	sp, r7
 80022e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e8:	4770      	bx	lr
 80022ea:	bf00      	nop
 80022ec:	20000000 	.word	0x20000000

080022f0 <HAL_RCC_GetPCLK1Freq>:
 80022f0:	b580      	push	{r7, lr}
 80022f2:	af00      	add	r7, sp, #0
 80022f4:	f7ff fff0 	bl	80022d8 <HAL_RCC_GetHCLKFreq>
 80022f8:	4602      	mov	r2, r0
 80022fa:	4b05      	ldr	r3, [pc, #20]	@ (8002310 <HAL_RCC_GetPCLK1Freq+0x20>)
 80022fc:	689b      	ldr	r3, [r3, #8]
 80022fe:	0a9b      	lsrs	r3, r3, #10
 8002300:	f003 0307 	and.w	r3, r3, #7
 8002304:	4903      	ldr	r1, [pc, #12]	@ (8002314 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002306:	5ccb      	ldrb	r3, [r1, r3]
 8002308:	fa22 f303 	lsr.w	r3, r2, r3
 800230c:	4618      	mov	r0, r3
 800230e:	bd80      	pop	{r7, pc}
 8002310:	40023800 	.word	0x40023800
 8002314:	08004104 	.word	0x08004104

08002318 <HAL_RCC_GetPCLK2Freq>:
 8002318:	b580      	push	{r7, lr}
 800231a:	af00      	add	r7, sp, #0
 800231c:	f7ff ffdc 	bl	80022d8 <HAL_RCC_GetHCLKFreq>
 8002320:	4602      	mov	r2, r0
 8002322:	4b05      	ldr	r3, [pc, #20]	@ (8002338 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002324:	689b      	ldr	r3, [r3, #8]
 8002326:	0b5b      	lsrs	r3, r3, #13
 8002328:	f003 0307 	and.w	r3, r3, #7
 800232c:	4903      	ldr	r1, [pc, #12]	@ (800233c <HAL_RCC_GetPCLK2Freq+0x24>)
 800232e:	5ccb      	ldrb	r3, [r1, r3]
 8002330:	fa22 f303 	lsr.w	r3, r2, r3
 8002334:	4618      	mov	r0, r3
 8002336:	bd80      	pop	{r7, pc}
 8002338:	40023800 	.word	0x40023800
 800233c:	08004104 	.word	0x08004104

08002340 <HAL_TIM_OC_Init>:
 8002340:	b580      	push	{r7, lr}
 8002342:	b082      	sub	sp, #8
 8002344:	af00      	add	r7, sp, #0
 8002346:	6078      	str	r0, [r7, #4]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	2b00      	cmp	r3, #0
 800234c:	d101      	bne.n	8002352 <HAL_TIM_OC_Init+0x12>
 800234e:	2301      	movs	r3, #1
 8002350:	e041      	b.n	80023d6 <HAL_TIM_OC_Init+0x96>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002358:	b2db      	uxtb	r3, r3
 800235a:	2b00      	cmp	r3, #0
 800235c:	d106      	bne.n	800236c <HAL_TIM_OC_Init+0x2c>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	2200      	movs	r2, #0
 8002362:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002366:	6878      	ldr	r0, [r7, #4]
 8002368:	f7fe fee8 	bl	800113c <HAL_TIM_OC_MspInit>
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	2202      	movs	r2, #2
 8002370:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681a      	ldr	r2, [r3, #0]
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	3304      	adds	r3, #4
 800237c:	4619      	mov	r1, r3
 800237e:	4610      	mov	r0, r2
 8002380:	f000 f9ac 	bl	80026dc <TIM_Base_SetConfig>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	2201      	movs	r2, #1
 8002388:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	2201      	movs	r2, #1
 8002390:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	2201      	movs	r2, #1
 8002398:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	2201      	movs	r2, #1
 80023a0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	2201      	movs	r2, #1
 80023a8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	2201      	movs	r2, #1
 80023b0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	2201      	movs	r2, #1
 80023b8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	2201      	movs	r2, #1
 80023c0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	2201      	movs	r2, #1
 80023c8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	2201      	movs	r2, #1
 80023d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80023d4:	2300      	movs	r3, #0
 80023d6:	4618      	mov	r0, r3
 80023d8:	3708      	adds	r7, #8
 80023da:	46bd      	mov	sp, r7
 80023dc:	bd80      	pop	{r7, pc}

080023de <HAL_TIM_IRQHandler>:
 80023de:	b580      	push	{r7, lr}
 80023e0:	b084      	sub	sp, #16
 80023e2:	af00      	add	r7, sp, #0
 80023e4:	6078      	str	r0, [r7, #4]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	68db      	ldr	r3, [r3, #12]
 80023ec:	60fb      	str	r3, [r7, #12]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	691b      	ldr	r3, [r3, #16]
 80023f4:	60bb      	str	r3, [r7, #8]
 80023f6:	68bb      	ldr	r3, [r7, #8]
 80023f8:	f003 0302 	and.w	r3, r3, #2
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d020      	beq.n	8002442 <HAL_TIM_IRQHandler+0x64>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f003 0302 	and.w	r3, r3, #2
 8002406:	2b00      	cmp	r3, #0
 8002408:	d01b      	beq.n	8002442 <HAL_TIM_IRQHandler+0x64>
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f06f 0202 	mvn.w	r2, #2
 8002412:	611a      	str	r2, [r3, #16]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	2201      	movs	r2, #1
 8002418:	771a      	strb	r2, [r3, #28]
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	699b      	ldr	r3, [r3, #24]
 8002420:	f003 0303 	and.w	r3, r3, #3
 8002424:	2b00      	cmp	r3, #0
 8002426:	d003      	beq.n	8002430 <HAL_TIM_IRQHandler+0x52>
 8002428:	6878      	ldr	r0, [r7, #4]
 800242a:	f000 f939 	bl	80026a0 <HAL_TIM_IC_CaptureCallback>
 800242e:	e005      	b.n	800243c <HAL_TIM_IRQHandler+0x5e>
 8002430:	6878      	ldr	r0, [r7, #4]
 8002432:	f000 f92b 	bl	800268c <HAL_TIM_OC_DelayElapsedCallback>
 8002436:	6878      	ldr	r0, [r7, #4]
 8002438:	f000 f93c 	bl	80026b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2200      	movs	r2, #0
 8002440:	771a      	strb	r2, [r3, #28]
 8002442:	68bb      	ldr	r3, [r7, #8]
 8002444:	f003 0304 	and.w	r3, r3, #4
 8002448:	2b00      	cmp	r3, #0
 800244a:	d020      	beq.n	800248e <HAL_TIM_IRQHandler+0xb0>
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	f003 0304 	and.w	r3, r3, #4
 8002452:	2b00      	cmp	r3, #0
 8002454:	d01b      	beq.n	800248e <HAL_TIM_IRQHandler+0xb0>
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	f06f 0204 	mvn.w	r2, #4
 800245e:	611a      	str	r2, [r3, #16]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	2202      	movs	r2, #2
 8002464:	771a      	strb	r2, [r3, #28]
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	699b      	ldr	r3, [r3, #24]
 800246c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002470:	2b00      	cmp	r3, #0
 8002472:	d003      	beq.n	800247c <HAL_TIM_IRQHandler+0x9e>
 8002474:	6878      	ldr	r0, [r7, #4]
 8002476:	f000 f913 	bl	80026a0 <HAL_TIM_IC_CaptureCallback>
 800247a:	e005      	b.n	8002488 <HAL_TIM_IRQHandler+0xaa>
 800247c:	6878      	ldr	r0, [r7, #4]
 800247e:	f000 f905 	bl	800268c <HAL_TIM_OC_DelayElapsedCallback>
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f000 f916 	bl	80026b4 <HAL_TIM_PWM_PulseFinishedCallback>
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	2200      	movs	r2, #0
 800248c:	771a      	strb	r2, [r3, #28]
 800248e:	68bb      	ldr	r3, [r7, #8]
 8002490:	f003 0308 	and.w	r3, r3, #8
 8002494:	2b00      	cmp	r3, #0
 8002496:	d020      	beq.n	80024da <HAL_TIM_IRQHandler+0xfc>
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	f003 0308 	and.w	r3, r3, #8
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d01b      	beq.n	80024da <HAL_TIM_IRQHandler+0xfc>
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	681b      	ldr	r3, [r3, #0]
 80024a6:	f06f 0208 	mvn.w	r2, #8
 80024aa:	611a      	str	r2, [r3, #16]
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	2204      	movs	r2, #4
 80024b0:	771a      	strb	r2, [r3, #28]
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	69db      	ldr	r3, [r3, #28]
 80024b8:	f003 0303 	and.w	r3, r3, #3
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d003      	beq.n	80024c8 <HAL_TIM_IRQHandler+0xea>
 80024c0:	6878      	ldr	r0, [r7, #4]
 80024c2:	f000 f8ed 	bl	80026a0 <HAL_TIM_IC_CaptureCallback>
 80024c6:	e005      	b.n	80024d4 <HAL_TIM_IRQHandler+0xf6>
 80024c8:	6878      	ldr	r0, [r7, #4]
 80024ca:	f000 f8df 	bl	800268c <HAL_TIM_OC_DelayElapsedCallback>
 80024ce:	6878      	ldr	r0, [r7, #4]
 80024d0:	f000 f8f0 	bl	80026b4 <HAL_TIM_PWM_PulseFinishedCallback>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	2200      	movs	r2, #0
 80024d8:	771a      	strb	r2, [r3, #28]
 80024da:	68bb      	ldr	r3, [r7, #8]
 80024dc:	f003 0310 	and.w	r3, r3, #16
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d020      	beq.n	8002526 <HAL_TIM_IRQHandler+0x148>
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	f003 0310 	and.w	r3, r3, #16
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d01b      	beq.n	8002526 <HAL_TIM_IRQHandler+0x148>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	f06f 0210 	mvn.w	r2, #16
 80024f6:	611a      	str	r2, [r3, #16]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	2208      	movs	r2, #8
 80024fc:	771a      	strb	r2, [r3, #28]
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	69db      	ldr	r3, [r3, #28]
 8002504:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002508:	2b00      	cmp	r3, #0
 800250a:	d003      	beq.n	8002514 <HAL_TIM_IRQHandler+0x136>
 800250c:	6878      	ldr	r0, [r7, #4]
 800250e:	f000 f8c7 	bl	80026a0 <HAL_TIM_IC_CaptureCallback>
 8002512:	e005      	b.n	8002520 <HAL_TIM_IRQHandler+0x142>
 8002514:	6878      	ldr	r0, [r7, #4]
 8002516:	f000 f8b9 	bl	800268c <HAL_TIM_OC_DelayElapsedCallback>
 800251a:	6878      	ldr	r0, [r7, #4]
 800251c:	f000 f8ca 	bl	80026b4 <HAL_TIM_PWM_PulseFinishedCallback>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	2200      	movs	r2, #0
 8002524:	771a      	strb	r2, [r3, #28]
 8002526:	68bb      	ldr	r3, [r7, #8]
 8002528:	f003 0301 	and.w	r3, r3, #1
 800252c:	2b00      	cmp	r3, #0
 800252e:	d00c      	beq.n	800254a <HAL_TIM_IRQHandler+0x16c>
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	f003 0301 	and.w	r3, r3, #1
 8002536:	2b00      	cmp	r3, #0
 8002538:	d007      	beq.n	800254a <HAL_TIM_IRQHandler+0x16c>
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	f06f 0201 	mvn.w	r2, #1
 8002542:	611a      	str	r2, [r3, #16]
 8002544:	6878      	ldr	r0, [r7, #4]
 8002546:	f000 f897 	bl	8002678 <HAL_TIM_PeriodElapsedCallback>
 800254a:	68bb      	ldr	r3, [r7, #8]
 800254c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002550:	2b00      	cmp	r3, #0
 8002552:	d00c      	beq.n	800256e <HAL_TIM_IRQHandler+0x190>
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800255a:	2b00      	cmp	r3, #0
 800255c:	d007      	beq.n	800256e <HAL_TIM_IRQHandler+0x190>
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8002566:	611a      	str	r2, [r3, #16]
 8002568:	6878      	ldr	r0, [r7, #4]
 800256a:	f000 fb47 	bl	8002bfc <HAL_TIMEx_BreakCallback>
 800256e:	68bb      	ldr	r3, [r7, #8]
 8002570:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002574:	2b00      	cmp	r3, #0
 8002576:	d00c      	beq.n	8002592 <HAL_TIM_IRQHandler+0x1b4>
 8002578:	68fb      	ldr	r3, [r7, #12]
 800257a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800257e:	2b00      	cmp	r3, #0
 8002580:	d007      	beq.n	8002592 <HAL_TIM_IRQHandler+0x1b4>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800258a:	611a      	str	r2, [r3, #16]
 800258c:	6878      	ldr	r0, [r7, #4]
 800258e:	f000 f89b 	bl	80026c8 <HAL_TIM_TriggerCallback>
 8002592:	68bb      	ldr	r3, [r7, #8]
 8002594:	f003 0320 	and.w	r3, r3, #32
 8002598:	2b00      	cmp	r3, #0
 800259a:	d00c      	beq.n	80025b6 <HAL_TIM_IRQHandler+0x1d8>
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	f003 0320 	and.w	r3, r3, #32
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	d007      	beq.n	80025b6 <HAL_TIM_IRQHandler+0x1d8>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f06f 0220 	mvn.w	r2, #32
 80025ae:	611a      	str	r2, [r3, #16]
 80025b0:	6878      	ldr	r0, [r7, #4]
 80025b2:	f000 fb19 	bl	8002be8 <HAL_TIMEx_CommutCallback>
 80025b6:	bf00      	nop
 80025b8:	3710      	adds	r7, #16
 80025ba:	46bd      	mov	sp, r7
 80025bc:	bd80      	pop	{r7, pc}
	...

080025c0 <HAL_TIM_OC_ConfigChannel>:
 80025c0:	b580      	push	{r7, lr}
 80025c2:	b086      	sub	sp, #24
 80025c4:	af00      	add	r7, sp, #0
 80025c6:	60f8      	str	r0, [r7, #12]
 80025c8:	60b9      	str	r1, [r7, #8]
 80025ca:	607a      	str	r2, [r7, #4]
 80025cc:	2300      	movs	r3, #0
 80025ce:	75fb      	strb	r3, [r7, #23]
 80025d0:	68fb      	ldr	r3, [r7, #12]
 80025d2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80025d6:	2b01      	cmp	r3, #1
 80025d8:	d101      	bne.n	80025de <HAL_TIM_OC_ConfigChannel+0x1e>
 80025da:	2302      	movs	r3, #2
 80025dc:	e048      	b.n	8002670 <HAL_TIM_OC_ConfigChannel+0xb0>
 80025de:	68fb      	ldr	r3, [r7, #12]
 80025e0:	2201      	movs	r2, #1
 80025e2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	2b0c      	cmp	r3, #12
 80025ea:	d839      	bhi.n	8002660 <HAL_TIM_OC_ConfigChannel+0xa0>
 80025ec:	a201      	add	r2, pc, #4	@ (adr r2, 80025f4 <HAL_TIM_OC_ConfigChannel+0x34>)
 80025ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80025f2:	bf00      	nop
 80025f4:	08002629 	.word	0x08002629
 80025f8:	08002661 	.word	0x08002661
 80025fc:	08002661 	.word	0x08002661
 8002600:	08002661 	.word	0x08002661
 8002604:	08002637 	.word	0x08002637
 8002608:	08002661 	.word	0x08002661
 800260c:	08002661 	.word	0x08002661
 8002610:	08002661 	.word	0x08002661
 8002614:	08002645 	.word	0x08002645
 8002618:	08002661 	.word	0x08002661
 800261c:	08002661 	.word	0x08002661
 8002620:	08002661 	.word	0x08002661
 8002624:	08002653 	.word	0x08002653
 8002628:	68fb      	ldr	r3, [r7, #12]
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	68b9      	ldr	r1, [r7, #8]
 800262e:	4618      	mov	r0, r3
 8002630:	f000 f8e0 	bl	80027f4 <TIM_OC1_SetConfig>
 8002634:	e017      	b.n	8002666 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002636:	68fb      	ldr	r3, [r7, #12]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	68b9      	ldr	r1, [r7, #8]
 800263c:	4618      	mov	r0, r3
 800263e:	f000 f93f 	bl	80028c0 <TIM_OC2_SetConfig>
 8002642:	e010      	b.n	8002666 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002644:	68fb      	ldr	r3, [r7, #12]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	68b9      	ldr	r1, [r7, #8]
 800264a:	4618      	mov	r0, r3
 800264c:	f000 f9a4 	bl	8002998 <TIM_OC3_SetConfig>
 8002650:	e009      	b.n	8002666 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002652:	68fb      	ldr	r3, [r7, #12]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	68b9      	ldr	r1, [r7, #8]
 8002658:	4618      	mov	r0, r3
 800265a:	f000 fa07 	bl	8002a6c <TIM_OC4_SetConfig>
 800265e:	e002      	b.n	8002666 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002660:	2301      	movs	r3, #1
 8002662:	75fb      	strb	r3, [r7, #23]
 8002664:	bf00      	nop
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	2200      	movs	r2, #0
 800266a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800266e:	7dfb      	ldrb	r3, [r7, #23]
 8002670:	4618      	mov	r0, r3
 8002672:	3718      	adds	r7, #24
 8002674:	46bd      	mov	sp, r7
 8002676:	bd80      	pop	{r7, pc}

08002678 <HAL_TIM_PeriodElapsedCallback>:
 8002678:	b480      	push	{r7}
 800267a:	b083      	sub	sp, #12
 800267c:	af00      	add	r7, sp, #0
 800267e:	6078      	str	r0, [r7, #4]
 8002680:	bf00      	nop
 8002682:	370c      	adds	r7, #12
 8002684:	46bd      	mov	sp, r7
 8002686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800268a:	4770      	bx	lr

0800268c <HAL_TIM_OC_DelayElapsedCallback>:
 800268c:	b480      	push	{r7}
 800268e:	b083      	sub	sp, #12
 8002690:	af00      	add	r7, sp, #0
 8002692:	6078      	str	r0, [r7, #4]
 8002694:	bf00      	nop
 8002696:	370c      	adds	r7, #12
 8002698:	46bd      	mov	sp, r7
 800269a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800269e:	4770      	bx	lr

080026a0 <HAL_TIM_IC_CaptureCallback>:
 80026a0:	b480      	push	{r7}
 80026a2:	b083      	sub	sp, #12
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	6078      	str	r0, [r7, #4]
 80026a8:	bf00      	nop
 80026aa:	370c      	adds	r7, #12
 80026ac:	46bd      	mov	sp, r7
 80026ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b2:	4770      	bx	lr

080026b4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80026b4:	b480      	push	{r7}
 80026b6:	b083      	sub	sp, #12
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	6078      	str	r0, [r7, #4]
 80026bc:	bf00      	nop
 80026be:	370c      	adds	r7, #12
 80026c0:	46bd      	mov	sp, r7
 80026c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c6:	4770      	bx	lr

080026c8 <HAL_TIM_TriggerCallback>:
 80026c8:	b480      	push	{r7}
 80026ca:	b083      	sub	sp, #12
 80026cc:	af00      	add	r7, sp, #0
 80026ce:	6078      	str	r0, [r7, #4]
 80026d0:	bf00      	nop
 80026d2:	370c      	adds	r7, #12
 80026d4:	46bd      	mov	sp, r7
 80026d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026da:	4770      	bx	lr

080026dc <TIM_Base_SetConfig>:
 80026dc:	b480      	push	{r7}
 80026de:	b085      	sub	sp, #20
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
 80026e4:	6039      	str	r1, [r7, #0]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	60fb      	str	r3, [r7, #12]
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	4a3a      	ldr	r2, [pc, #232]	@ (80027d8 <TIM_Base_SetConfig+0xfc>)
 80026f0:	4293      	cmp	r3, r2
 80026f2:	d00f      	beq.n	8002714 <TIM_Base_SetConfig+0x38>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80026fa:	d00b      	beq.n	8002714 <TIM_Base_SetConfig+0x38>
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	4a37      	ldr	r2, [pc, #220]	@ (80027dc <TIM_Base_SetConfig+0x100>)
 8002700:	4293      	cmp	r3, r2
 8002702:	d007      	beq.n	8002714 <TIM_Base_SetConfig+0x38>
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	4a36      	ldr	r2, [pc, #216]	@ (80027e0 <TIM_Base_SetConfig+0x104>)
 8002708:	4293      	cmp	r3, r2
 800270a:	d003      	beq.n	8002714 <TIM_Base_SetConfig+0x38>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	4a35      	ldr	r2, [pc, #212]	@ (80027e4 <TIM_Base_SetConfig+0x108>)
 8002710:	4293      	cmp	r3, r2
 8002712:	d108      	bne.n	8002726 <TIM_Base_SetConfig+0x4a>
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800271a:	60fb      	str	r3, [r7, #12]
 800271c:	683b      	ldr	r3, [r7, #0]
 800271e:	685b      	ldr	r3, [r3, #4]
 8002720:	68fa      	ldr	r2, [r7, #12]
 8002722:	4313      	orrs	r3, r2
 8002724:	60fb      	str	r3, [r7, #12]
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	4a2b      	ldr	r2, [pc, #172]	@ (80027d8 <TIM_Base_SetConfig+0xfc>)
 800272a:	4293      	cmp	r3, r2
 800272c:	d01b      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002734:	d017      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	4a28      	ldr	r2, [pc, #160]	@ (80027dc <TIM_Base_SetConfig+0x100>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d013      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4a27      	ldr	r2, [pc, #156]	@ (80027e0 <TIM_Base_SetConfig+0x104>)
 8002742:	4293      	cmp	r3, r2
 8002744:	d00f      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	4a26      	ldr	r2, [pc, #152]	@ (80027e4 <TIM_Base_SetConfig+0x108>)
 800274a:	4293      	cmp	r3, r2
 800274c:	d00b      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	4a25      	ldr	r2, [pc, #148]	@ (80027e8 <TIM_Base_SetConfig+0x10c>)
 8002752:	4293      	cmp	r3, r2
 8002754:	d007      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	4a24      	ldr	r2, [pc, #144]	@ (80027ec <TIM_Base_SetConfig+0x110>)
 800275a:	4293      	cmp	r3, r2
 800275c:	d003      	beq.n	8002766 <TIM_Base_SetConfig+0x8a>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	4a23      	ldr	r2, [pc, #140]	@ (80027f0 <TIM_Base_SetConfig+0x114>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d108      	bne.n	8002778 <TIM_Base_SetConfig+0x9c>
 8002766:	68fb      	ldr	r3, [r7, #12]
 8002768:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800276c:	60fb      	str	r3, [r7, #12]
 800276e:	683b      	ldr	r3, [r7, #0]
 8002770:	68db      	ldr	r3, [r3, #12]
 8002772:	68fa      	ldr	r2, [r7, #12]
 8002774:	4313      	orrs	r3, r2
 8002776:	60fb      	str	r3, [r7, #12]
 8002778:	68fb      	ldr	r3, [r7, #12]
 800277a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800277e:	683b      	ldr	r3, [r7, #0]
 8002780:	695b      	ldr	r3, [r3, #20]
 8002782:	4313      	orrs	r3, r2
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	68fa      	ldr	r2, [r7, #12]
 800278a:	601a      	str	r2, [r3, #0]
 800278c:	683b      	ldr	r3, [r7, #0]
 800278e:	689a      	ldr	r2, [r3, #8]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	681a      	ldr	r2, [r3, #0]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	629a      	str	r2, [r3, #40]	@ 0x28
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	4a0e      	ldr	r2, [pc, #56]	@ (80027d8 <TIM_Base_SetConfig+0xfc>)
 80027a0:	4293      	cmp	r3, r2
 80027a2:	d103      	bne.n	80027ac <TIM_Base_SetConfig+0xd0>
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	691a      	ldr	r2, [r3, #16]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	631a      	str	r2, [r3, #48]	@ 0x30
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	2201      	movs	r2, #1
 80027b0:	615a      	str	r2, [r3, #20]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	691b      	ldr	r3, [r3, #16]
 80027b6:	f003 0301 	and.w	r3, r3, #1
 80027ba:	2b01      	cmp	r3, #1
 80027bc:	d105      	bne.n	80027ca <TIM_Base_SetConfig+0xee>
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	691b      	ldr	r3, [r3, #16]
 80027c2:	f023 0201 	bic.w	r2, r3, #1
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	611a      	str	r2, [r3, #16]
 80027ca:	bf00      	nop
 80027cc:	3714      	adds	r7, #20
 80027ce:	46bd      	mov	sp, r7
 80027d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d4:	4770      	bx	lr
 80027d6:	bf00      	nop
 80027d8:	40010000 	.word	0x40010000
 80027dc:	40000400 	.word	0x40000400
 80027e0:	40000800 	.word	0x40000800
 80027e4:	40000c00 	.word	0x40000c00
 80027e8:	40014000 	.word	0x40014000
 80027ec:	40014400 	.word	0x40014400
 80027f0:	40014800 	.word	0x40014800

080027f4 <TIM_OC1_SetConfig>:
 80027f4:	b480      	push	{r7}
 80027f6:	b087      	sub	sp, #28
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	6039      	str	r1, [r7, #0]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	6a1b      	ldr	r3, [r3, #32]
 8002802:	617b      	str	r3, [r7, #20]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	6a1b      	ldr	r3, [r3, #32]
 8002808:	f023 0201 	bic.w	r2, r3, #1
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	621a      	str	r2, [r3, #32]
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	685b      	ldr	r3, [r3, #4]
 8002814:	613b      	str	r3, [r7, #16]
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	699b      	ldr	r3, [r3, #24]
 800281a:	60fb      	str	r3, [r7, #12]
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002822:	60fb      	str	r3, [r7, #12]
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	f023 0303 	bic.w	r3, r3, #3
 800282a:	60fb      	str	r3, [r7, #12]
 800282c:	683b      	ldr	r3, [r7, #0]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	68fa      	ldr	r2, [r7, #12]
 8002832:	4313      	orrs	r3, r2
 8002834:	60fb      	str	r3, [r7, #12]
 8002836:	697b      	ldr	r3, [r7, #20]
 8002838:	f023 0302 	bic.w	r3, r3, #2
 800283c:	617b      	str	r3, [r7, #20]
 800283e:	683b      	ldr	r3, [r7, #0]
 8002840:	689b      	ldr	r3, [r3, #8]
 8002842:	697a      	ldr	r2, [r7, #20]
 8002844:	4313      	orrs	r3, r2
 8002846:	617b      	str	r3, [r7, #20]
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	4a1c      	ldr	r2, [pc, #112]	@ (80028bc <TIM_OC1_SetConfig+0xc8>)
 800284c:	4293      	cmp	r3, r2
 800284e:	d10c      	bne.n	800286a <TIM_OC1_SetConfig+0x76>
 8002850:	697b      	ldr	r3, [r7, #20]
 8002852:	f023 0308 	bic.w	r3, r3, #8
 8002856:	617b      	str	r3, [r7, #20]
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	68db      	ldr	r3, [r3, #12]
 800285c:	697a      	ldr	r2, [r7, #20]
 800285e:	4313      	orrs	r3, r2
 8002860:	617b      	str	r3, [r7, #20]
 8002862:	697b      	ldr	r3, [r7, #20]
 8002864:	f023 0304 	bic.w	r3, r3, #4
 8002868:	617b      	str	r3, [r7, #20]
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	4a13      	ldr	r2, [pc, #76]	@ (80028bc <TIM_OC1_SetConfig+0xc8>)
 800286e:	4293      	cmp	r3, r2
 8002870:	d111      	bne.n	8002896 <TIM_OC1_SetConfig+0xa2>
 8002872:	693b      	ldr	r3, [r7, #16]
 8002874:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002878:	613b      	str	r3, [r7, #16]
 800287a:	693b      	ldr	r3, [r7, #16]
 800287c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002880:	613b      	str	r3, [r7, #16]
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	695b      	ldr	r3, [r3, #20]
 8002886:	693a      	ldr	r2, [r7, #16]
 8002888:	4313      	orrs	r3, r2
 800288a:	613b      	str	r3, [r7, #16]
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	699b      	ldr	r3, [r3, #24]
 8002890:	693a      	ldr	r2, [r7, #16]
 8002892:	4313      	orrs	r3, r2
 8002894:	613b      	str	r3, [r7, #16]
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	693a      	ldr	r2, [r7, #16]
 800289a:	605a      	str	r2, [r3, #4]
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	68fa      	ldr	r2, [r7, #12]
 80028a0:	619a      	str	r2, [r3, #24]
 80028a2:	683b      	ldr	r3, [r7, #0]
 80028a4:	685a      	ldr	r2, [r3, #4]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	635a      	str	r2, [r3, #52]	@ 0x34
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	697a      	ldr	r2, [r7, #20]
 80028ae:	621a      	str	r2, [r3, #32]
 80028b0:	bf00      	nop
 80028b2:	371c      	adds	r7, #28
 80028b4:	46bd      	mov	sp, r7
 80028b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ba:	4770      	bx	lr
 80028bc:	40010000 	.word	0x40010000

080028c0 <TIM_OC2_SetConfig>:
 80028c0:	b480      	push	{r7}
 80028c2:	b087      	sub	sp, #28
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	6039      	str	r1, [r7, #0]
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	6a1b      	ldr	r3, [r3, #32]
 80028ce:	617b      	str	r3, [r7, #20]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	6a1b      	ldr	r3, [r3, #32]
 80028d4:	f023 0210 	bic.w	r2, r3, #16
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	621a      	str	r2, [r3, #32]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	685b      	ldr	r3, [r3, #4]
 80028e0:	613b      	str	r3, [r7, #16]
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	699b      	ldr	r3, [r3, #24]
 80028e6:	60fb      	str	r3, [r7, #12]
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80028ee:	60fb      	str	r3, [r7, #12]
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80028f6:	60fb      	str	r3, [r7, #12]
 80028f8:	683b      	ldr	r3, [r7, #0]
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	021b      	lsls	r3, r3, #8
 80028fe:	68fa      	ldr	r2, [r7, #12]
 8002900:	4313      	orrs	r3, r2
 8002902:	60fb      	str	r3, [r7, #12]
 8002904:	697b      	ldr	r3, [r7, #20]
 8002906:	f023 0320 	bic.w	r3, r3, #32
 800290a:	617b      	str	r3, [r7, #20]
 800290c:	683b      	ldr	r3, [r7, #0]
 800290e:	689b      	ldr	r3, [r3, #8]
 8002910:	011b      	lsls	r3, r3, #4
 8002912:	697a      	ldr	r2, [r7, #20]
 8002914:	4313      	orrs	r3, r2
 8002916:	617b      	str	r3, [r7, #20]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	4a1e      	ldr	r2, [pc, #120]	@ (8002994 <TIM_OC2_SetConfig+0xd4>)
 800291c:	4293      	cmp	r3, r2
 800291e:	d10d      	bne.n	800293c <TIM_OC2_SetConfig+0x7c>
 8002920:	697b      	ldr	r3, [r7, #20]
 8002922:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002926:	617b      	str	r3, [r7, #20]
 8002928:	683b      	ldr	r3, [r7, #0]
 800292a:	68db      	ldr	r3, [r3, #12]
 800292c:	011b      	lsls	r3, r3, #4
 800292e:	697a      	ldr	r2, [r7, #20]
 8002930:	4313      	orrs	r3, r2
 8002932:	617b      	str	r3, [r7, #20]
 8002934:	697b      	ldr	r3, [r7, #20]
 8002936:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800293a:	617b      	str	r3, [r7, #20]
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	4a15      	ldr	r2, [pc, #84]	@ (8002994 <TIM_OC2_SetConfig+0xd4>)
 8002940:	4293      	cmp	r3, r2
 8002942:	d113      	bne.n	800296c <TIM_OC2_SetConfig+0xac>
 8002944:	693b      	ldr	r3, [r7, #16]
 8002946:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800294a:	613b      	str	r3, [r7, #16]
 800294c:	693b      	ldr	r3, [r7, #16]
 800294e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8002952:	613b      	str	r3, [r7, #16]
 8002954:	683b      	ldr	r3, [r7, #0]
 8002956:	695b      	ldr	r3, [r3, #20]
 8002958:	009b      	lsls	r3, r3, #2
 800295a:	693a      	ldr	r2, [r7, #16]
 800295c:	4313      	orrs	r3, r2
 800295e:	613b      	str	r3, [r7, #16]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	699b      	ldr	r3, [r3, #24]
 8002964:	009b      	lsls	r3, r3, #2
 8002966:	693a      	ldr	r2, [r7, #16]
 8002968:	4313      	orrs	r3, r2
 800296a:	613b      	str	r3, [r7, #16]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	693a      	ldr	r2, [r7, #16]
 8002970:	605a      	str	r2, [r3, #4]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	68fa      	ldr	r2, [r7, #12]
 8002976:	619a      	str	r2, [r3, #24]
 8002978:	683b      	ldr	r3, [r7, #0]
 800297a:	685a      	ldr	r2, [r3, #4]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	639a      	str	r2, [r3, #56]	@ 0x38
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	697a      	ldr	r2, [r7, #20]
 8002984:	621a      	str	r2, [r3, #32]
 8002986:	bf00      	nop
 8002988:	371c      	adds	r7, #28
 800298a:	46bd      	mov	sp, r7
 800298c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002990:	4770      	bx	lr
 8002992:	bf00      	nop
 8002994:	40010000 	.word	0x40010000

08002998 <TIM_OC3_SetConfig>:
 8002998:	b480      	push	{r7}
 800299a:	b087      	sub	sp, #28
 800299c:	af00      	add	r7, sp, #0
 800299e:	6078      	str	r0, [r7, #4]
 80029a0:	6039      	str	r1, [r7, #0]
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6a1b      	ldr	r3, [r3, #32]
 80029a6:	617b      	str	r3, [r7, #20]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	6a1b      	ldr	r3, [r3, #32]
 80029ac:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	621a      	str	r2, [r3, #32]
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	685b      	ldr	r3, [r3, #4]
 80029b8:	613b      	str	r3, [r7, #16]
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	69db      	ldr	r3, [r3, #28]
 80029be:	60fb      	str	r3, [r7, #12]
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80029c6:	60fb      	str	r3, [r7, #12]
 80029c8:	68fb      	ldr	r3, [r7, #12]
 80029ca:	f023 0303 	bic.w	r3, r3, #3
 80029ce:	60fb      	str	r3, [r7, #12]
 80029d0:	683b      	ldr	r3, [r7, #0]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	68fa      	ldr	r2, [r7, #12]
 80029d6:	4313      	orrs	r3, r2
 80029d8:	60fb      	str	r3, [r7, #12]
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80029e0:	617b      	str	r3, [r7, #20]
 80029e2:	683b      	ldr	r3, [r7, #0]
 80029e4:	689b      	ldr	r3, [r3, #8]
 80029e6:	021b      	lsls	r3, r3, #8
 80029e8:	697a      	ldr	r2, [r7, #20]
 80029ea:	4313      	orrs	r3, r2
 80029ec:	617b      	str	r3, [r7, #20]
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	4a1d      	ldr	r2, [pc, #116]	@ (8002a68 <TIM_OC3_SetConfig+0xd0>)
 80029f2:	4293      	cmp	r3, r2
 80029f4:	d10d      	bne.n	8002a12 <TIM_OC3_SetConfig+0x7a>
 80029f6:	697b      	ldr	r3, [r7, #20]
 80029f8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80029fc:	617b      	str	r3, [r7, #20]
 80029fe:	683b      	ldr	r3, [r7, #0]
 8002a00:	68db      	ldr	r3, [r3, #12]
 8002a02:	021b      	lsls	r3, r3, #8
 8002a04:	697a      	ldr	r2, [r7, #20]
 8002a06:	4313      	orrs	r3, r2
 8002a08:	617b      	str	r3, [r7, #20]
 8002a0a:	697b      	ldr	r3, [r7, #20]
 8002a0c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002a10:	617b      	str	r3, [r7, #20]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	4a14      	ldr	r2, [pc, #80]	@ (8002a68 <TIM_OC3_SetConfig+0xd0>)
 8002a16:	4293      	cmp	r3, r2
 8002a18:	d113      	bne.n	8002a42 <TIM_OC3_SetConfig+0xaa>
 8002a1a:	693b      	ldr	r3, [r7, #16]
 8002a1c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002a20:	613b      	str	r3, [r7, #16]
 8002a22:	693b      	ldr	r3, [r7, #16]
 8002a24:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8002a28:	613b      	str	r3, [r7, #16]
 8002a2a:	683b      	ldr	r3, [r7, #0]
 8002a2c:	695b      	ldr	r3, [r3, #20]
 8002a2e:	011b      	lsls	r3, r3, #4
 8002a30:	693a      	ldr	r2, [r7, #16]
 8002a32:	4313      	orrs	r3, r2
 8002a34:	613b      	str	r3, [r7, #16]
 8002a36:	683b      	ldr	r3, [r7, #0]
 8002a38:	699b      	ldr	r3, [r3, #24]
 8002a3a:	011b      	lsls	r3, r3, #4
 8002a3c:	693a      	ldr	r2, [r7, #16]
 8002a3e:	4313      	orrs	r3, r2
 8002a40:	613b      	str	r3, [r7, #16]
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	693a      	ldr	r2, [r7, #16]
 8002a46:	605a      	str	r2, [r3, #4]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	68fa      	ldr	r2, [r7, #12]
 8002a4c:	61da      	str	r2, [r3, #28]
 8002a4e:	683b      	ldr	r3, [r7, #0]
 8002a50:	685a      	ldr	r2, [r3, #4]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	697a      	ldr	r2, [r7, #20]
 8002a5a:	621a      	str	r2, [r3, #32]
 8002a5c:	bf00      	nop
 8002a5e:	371c      	adds	r7, #28
 8002a60:	46bd      	mov	sp, r7
 8002a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a66:	4770      	bx	lr
 8002a68:	40010000 	.word	0x40010000

08002a6c <TIM_OC4_SetConfig>:
 8002a6c:	b480      	push	{r7}
 8002a6e:	b087      	sub	sp, #28
 8002a70:	af00      	add	r7, sp, #0
 8002a72:	6078      	str	r0, [r7, #4]
 8002a74:	6039      	str	r1, [r7, #0]
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	6a1b      	ldr	r3, [r3, #32]
 8002a7a:	613b      	str	r3, [r7, #16]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	6a1b      	ldr	r3, [r3, #32]
 8002a80:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	621a      	str	r2, [r3, #32]
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	685b      	ldr	r3, [r3, #4]
 8002a8c:	617b      	str	r3, [r7, #20]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	69db      	ldr	r3, [r3, #28]
 8002a92:	60fb      	str	r3, [r7, #12]
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002a9a:	60fb      	str	r3, [r7, #12]
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002aa2:	60fb      	str	r3, [r7, #12]
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	021b      	lsls	r3, r3, #8
 8002aaa:	68fa      	ldr	r2, [r7, #12]
 8002aac:	4313      	orrs	r3, r2
 8002aae:	60fb      	str	r3, [r7, #12]
 8002ab0:	693b      	ldr	r3, [r7, #16]
 8002ab2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8002ab6:	613b      	str	r3, [r7, #16]
 8002ab8:	683b      	ldr	r3, [r7, #0]
 8002aba:	689b      	ldr	r3, [r3, #8]
 8002abc:	031b      	lsls	r3, r3, #12
 8002abe:	693a      	ldr	r2, [r7, #16]
 8002ac0:	4313      	orrs	r3, r2
 8002ac2:	613b      	str	r3, [r7, #16]
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	4a10      	ldr	r2, [pc, #64]	@ (8002b08 <TIM_OC4_SetConfig+0x9c>)
 8002ac8:	4293      	cmp	r3, r2
 8002aca:	d109      	bne.n	8002ae0 <TIM_OC4_SetConfig+0x74>
 8002acc:	697b      	ldr	r3, [r7, #20]
 8002ace:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002ad2:	617b      	str	r3, [r7, #20]
 8002ad4:	683b      	ldr	r3, [r7, #0]
 8002ad6:	695b      	ldr	r3, [r3, #20]
 8002ad8:	019b      	lsls	r3, r3, #6
 8002ada:	697a      	ldr	r2, [r7, #20]
 8002adc:	4313      	orrs	r3, r2
 8002ade:	617b      	str	r3, [r7, #20]
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	697a      	ldr	r2, [r7, #20]
 8002ae4:	605a      	str	r2, [r3, #4]
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	68fa      	ldr	r2, [r7, #12]
 8002aea:	61da      	str	r2, [r3, #28]
 8002aec:	683b      	ldr	r3, [r7, #0]
 8002aee:	685a      	ldr	r2, [r3, #4]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	641a      	str	r2, [r3, #64]	@ 0x40
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	693a      	ldr	r2, [r7, #16]
 8002af8:	621a      	str	r2, [r3, #32]
 8002afa:	bf00      	nop
 8002afc:	371c      	adds	r7, #28
 8002afe:	46bd      	mov	sp, r7
 8002b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b04:	4770      	bx	lr
 8002b06:	bf00      	nop
 8002b08:	40010000 	.word	0x40010000

08002b0c <HAL_TIMEx_MasterConfigSynchronization>:
 8002b0c:	b480      	push	{r7}
 8002b0e:	b085      	sub	sp, #20
 8002b10:	af00      	add	r7, sp, #0
 8002b12:	6078      	str	r0, [r7, #4]
 8002b14:	6039      	str	r1, [r7, #0]
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b1c:	2b01      	cmp	r3, #1
 8002b1e:	d101      	bne.n	8002b24 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002b20:	2302      	movs	r3, #2
 8002b22:	e050      	b.n	8002bc6 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	2201      	movs	r2, #1
 8002b28:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	2202      	movs	r2, #2
 8002b30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	685b      	ldr	r3, [r3, #4]
 8002b3a:	60fb      	str	r3, [r7, #12]
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	689b      	ldr	r3, [r3, #8]
 8002b42:	60bb      	str	r3, [r7, #8]
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002b4a:	60fb      	str	r3, [r7, #12]
 8002b4c:	683b      	ldr	r3, [r7, #0]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	68fa      	ldr	r2, [r7, #12]
 8002b52:	4313      	orrs	r3, r2
 8002b54:	60fb      	str	r3, [r7, #12]
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	68fa      	ldr	r2, [r7, #12]
 8002b5c:	605a      	str	r2, [r3, #4]
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	4a1c      	ldr	r2, [pc, #112]	@ (8002bd4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8002b64:	4293      	cmp	r3, r2
 8002b66:	d018      	beq.n	8002b9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002b70:	d013      	beq.n	8002b9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	4a18      	ldr	r2, [pc, #96]	@ (8002bd8 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8002b78:	4293      	cmp	r3, r2
 8002b7a:	d00e      	beq.n	8002b9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	4a16      	ldr	r2, [pc, #88]	@ (8002bdc <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8002b82:	4293      	cmp	r3, r2
 8002b84:	d009      	beq.n	8002b9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	4a15      	ldr	r2, [pc, #84]	@ (8002be0 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8002b8c:	4293      	cmp	r3, r2
 8002b8e:	d004      	beq.n	8002b9a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	4a13      	ldr	r2, [pc, #76]	@ (8002be4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8002b96:	4293      	cmp	r3, r2
 8002b98:	d10c      	bne.n	8002bb4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8002b9a:	68bb      	ldr	r3, [r7, #8]
 8002b9c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002ba0:	60bb      	str	r3, [r7, #8]
 8002ba2:	683b      	ldr	r3, [r7, #0]
 8002ba4:	685b      	ldr	r3, [r3, #4]
 8002ba6:	68ba      	ldr	r2, [r7, #8]
 8002ba8:	4313      	orrs	r3, r2
 8002baa:	60bb      	str	r3, [r7, #8]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	68ba      	ldr	r2, [r7, #8]
 8002bb2:	609a      	str	r2, [r3, #8]
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	2201      	movs	r2, #1
 8002bb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	2200      	movs	r2, #0
 8002bc0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	3714      	adds	r7, #20
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd0:	4770      	bx	lr
 8002bd2:	bf00      	nop
 8002bd4:	40010000 	.word	0x40010000
 8002bd8:	40000400 	.word	0x40000400
 8002bdc:	40000800 	.word	0x40000800
 8002be0:	40000c00 	.word	0x40000c00
 8002be4:	40014000 	.word	0x40014000

08002be8 <HAL_TIMEx_CommutCallback>:
 8002be8:	b480      	push	{r7}
 8002bea:	b083      	sub	sp, #12
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	6078      	str	r0, [r7, #4]
 8002bf0:	bf00      	nop
 8002bf2:	370c      	adds	r7, #12
 8002bf4:	46bd      	mov	sp, r7
 8002bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bfa:	4770      	bx	lr

08002bfc <HAL_TIMEx_BreakCallback>:
 8002bfc:	b480      	push	{r7}
 8002bfe:	b083      	sub	sp, #12
 8002c00:	af00      	add	r7, sp, #0
 8002c02:	6078      	str	r0, [r7, #4]
 8002c04:	bf00      	nop
 8002c06:	370c      	adds	r7, #12
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c0e:	4770      	bx	lr

08002c10 <HAL_UART_Init>:
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b082      	sub	sp, #8
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d101      	bne.n	8002c22 <HAL_UART_Init+0x12>
 8002c1e:	2301      	movs	r3, #1
 8002c20:	e042      	b.n	8002ca8 <HAL_UART_Init+0x98>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002c28:	b2db      	uxtb	r3, r3
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d106      	bne.n	8002c3c <HAL_UART_Init+0x2c>
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	2200      	movs	r2, #0
 8002c32:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002c36:	6878      	ldr	r0, [r7, #4]
 8002c38:	f7fe faa6 	bl	8001188 <HAL_UART_MspInit>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	2224      	movs	r2, #36	@ 0x24
 8002c40:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	68da      	ldr	r2, [r3, #12]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002c52:	60da      	str	r2, [r3, #12]
 8002c54:	6878      	ldr	r0, [r7, #4]
 8002c56:	f000 fde9 	bl	800382c <UART_SetConfig>
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	691a      	ldr	r2, [r3, #16]
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002c68:	611a      	str	r2, [r3, #16]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	695a      	ldr	r2, [r3, #20]
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002c78:	615a      	str	r2, [r3, #20]
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	68da      	ldr	r2, [r3, #12]
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002c88:	60da      	str	r2, [r3, #12]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	2200      	movs	r2, #0
 8002c8e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	2220      	movs	r2, #32
 8002c94:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2220      	movs	r2, #32
 8002c9c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	2200      	movs	r2, #0
 8002ca4:	635a      	str	r2, [r3, #52]	@ 0x34
 8002ca6:	2300      	movs	r3, #0
 8002ca8:	4618      	mov	r0, r3
 8002caa:	3708      	adds	r7, #8
 8002cac:	46bd      	mov	sp, r7
 8002cae:	bd80      	pop	{r7, pc}

08002cb0 <HAL_UART_Transmit>:
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b08a      	sub	sp, #40	@ 0x28
 8002cb4:	af02      	add	r7, sp, #8
 8002cb6:	60f8      	str	r0, [r7, #12]
 8002cb8:	60b9      	str	r1, [r7, #8]
 8002cba:	603b      	str	r3, [r7, #0]
 8002cbc:	4613      	mov	r3, r2
 8002cbe:	80fb      	strh	r3, [r7, #6]
 8002cc0:	2300      	movs	r3, #0
 8002cc2:	617b      	str	r3, [r7, #20]
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002cca:	b2db      	uxtb	r3, r3
 8002ccc:	2b20      	cmp	r3, #32
 8002cce:	d175      	bne.n	8002dbc <HAL_UART_Transmit+0x10c>
 8002cd0:	68bb      	ldr	r3, [r7, #8]
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d002      	beq.n	8002cdc <HAL_UART_Transmit+0x2c>
 8002cd6:	88fb      	ldrh	r3, [r7, #6]
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d101      	bne.n	8002ce0 <HAL_UART_Transmit+0x30>
 8002cdc:	2301      	movs	r3, #1
 8002cde:	e06e      	b.n	8002dbe <HAL_UART_Transmit+0x10e>
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ce6:	68fb      	ldr	r3, [r7, #12]
 8002ce8:	2221      	movs	r2, #33	@ 0x21
 8002cea:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002cee:	f7fe fb81 	bl	80013f4 <HAL_GetTick>
 8002cf2:	6178      	str	r0, [r7, #20]
 8002cf4:	68fb      	ldr	r3, [r7, #12]
 8002cf6:	88fa      	ldrh	r2, [r7, #6]
 8002cf8:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	88fa      	ldrh	r2, [r7, #6]
 8002cfe:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	689b      	ldr	r3, [r3, #8]
 8002d04:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002d08:	d108      	bne.n	8002d1c <HAL_UART_Transmit+0x6c>
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	691b      	ldr	r3, [r3, #16]
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d104      	bne.n	8002d1c <HAL_UART_Transmit+0x6c>
 8002d12:	2300      	movs	r3, #0
 8002d14:	61fb      	str	r3, [r7, #28]
 8002d16:	68bb      	ldr	r3, [r7, #8]
 8002d18:	61bb      	str	r3, [r7, #24]
 8002d1a:	e003      	b.n	8002d24 <HAL_UART_Transmit+0x74>
 8002d1c:	68bb      	ldr	r3, [r7, #8]
 8002d1e:	61fb      	str	r3, [r7, #28]
 8002d20:	2300      	movs	r3, #0
 8002d22:	61bb      	str	r3, [r7, #24]
 8002d24:	e02e      	b.n	8002d84 <HAL_UART_Transmit+0xd4>
 8002d26:	683b      	ldr	r3, [r7, #0]
 8002d28:	9300      	str	r3, [sp, #0]
 8002d2a:	697b      	ldr	r3, [r7, #20]
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	2180      	movs	r1, #128	@ 0x80
 8002d30:	68f8      	ldr	r0, [r7, #12]
 8002d32:	f000 fb4b 	bl	80033cc <UART_WaitOnFlagUntilTimeout>
 8002d36:	4603      	mov	r3, r0
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	d005      	beq.n	8002d48 <HAL_UART_Transmit+0x98>
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	2220      	movs	r2, #32
 8002d40:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002d44:	2303      	movs	r3, #3
 8002d46:	e03a      	b.n	8002dbe <HAL_UART_Transmit+0x10e>
 8002d48:	69fb      	ldr	r3, [r7, #28]
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d10b      	bne.n	8002d66 <HAL_UART_Transmit+0xb6>
 8002d4e:	69bb      	ldr	r3, [r7, #24]
 8002d50:	881b      	ldrh	r3, [r3, #0]
 8002d52:	461a      	mov	r2, r3
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002d5c:	605a      	str	r2, [r3, #4]
 8002d5e:	69bb      	ldr	r3, [r7, #24]
 8002d60:	3302      	adds	r3, #2
 8002d62:	61bb      	str	r3, [r7, #24]
 8002d64:	e007      	b.n	8002d76 <HAL_UART_Transmit+0xc6>
 8002d66:	69fb      	ldr	r3, [r7, #28]
 8002d68:	781a      	ldrb	r2, [r3, #0]
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	605a      	str	r2, [r3, #4]
 8002d70:	69fb      	ldr	r3, [r7, #28]
 8002d72:	3301      	adds	r3, #1
 8002d74:	61fb      	str	r3, [r7, #28]
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002d7a:	b29b      	uxth	r3, r3
 8002d7c:	3b01      	subs	r3, #1
 8002d7e:	b29a      	uxth	r2, r3
 8002d80:	68fb      	ldr	r3, [r7, #12]
 8002d82:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002d88:	b29b      	uxth	r3, r3
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d1cb      	bne.n	8002d26 <HAL_UART_Transmit+0x76>
 8002d8e:	683b      	ldr	r3, [r7, #0]
 8002d90:	9300      	str	r3, [sp, #0]
 8002d92:	697b      	ldr	r3, [r7, #20]
 8002d94:	2200      	movs	r2, #0
 8002d96:	2140      	movs	r1, #64	@ 0x40
 8002d98:	68f8      	ldr	r0, [r7, #12]
 8002d9a:	f000 fb17 	bl	80033cc <UART_WaitOnFlagUntilTimeout>
 8002d9e:	4603      	mov	r3, r0
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d005      	beq.n	8002db0 <HAL_UART_Transmit+0x100>
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	2220      	movs	r2, #32
 8002da8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002dac:	2303      	movs	r3, #3
 8002dae:	e006      	b.n	8002dbe <HAL_UART_Transmit+0x10e>
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	2220      	movs	r2, #32
 8002db4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002db8:	2300      	movs	r3, #0
 8002dba:	e000      	b.n	8002dbe <HAL_UART_Transmit+0x10e>
 8002dbc:	2302      	movs	r3, #2
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	3720      	adds	r7, #32
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}

08002dc6 <HAL_UART_Transmit_IT>:
 8002dc6:	b480      	push	{r7}
 8002dc8:	b085      	sub	sp, #20
 8002dca:	af00      	add	r7, sp, #0
 8002dcc:	60f8      	str	r0, [r7, #12]
 8002dce:	60b9      	str	r1, [r7, #8]
 8002dd0:	4613      	mov	r3, r2
 8002dd2:	80fb      	strh	r3, [r7, #6]
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002dda:	b2db      	uxtb	r3, r3
 8002ddc:	2b20      	cmp	r3, #32
 8002dde:	d121      	bne.n	8002e24 <HAL_UART_Transmit_IT+0x5e>
 8002de0:	68bb      	ldr	r3, [r7, #8]
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	d002      	beq.n	8002dec <HAL_UART_Transmit_IT+0x26>
 8002de6:	88fb      	ldrh	r3, [r7, #6]
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	d101      	bne.n	8002df0 <HAL_UART_Transmit_IT+0x2a>
 8002dec:	2301      	movs	r3, #1
 8002dee:	e01a      	b.n	8002e26 <HAL_UART_Transmit_IT+0x60>
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	68ba      	ldr	r2, [r7, #8]
 8002df4:	621a      	str	r2, [r3, #32]
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	88fa      	ldrh	r2, [r7, #6]
 8002dfa:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002dfc:	68fb      	ldr	r3, [r7, #12]
 8002dfe:	88fa      	ldrh	r2, [r7, #6]
 8002e00:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	2200      	movs	r2, #0
 8002e06:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	2221      	movs	r2, #33	@ 0x21
 8002e0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	68da      	ldr	r2, [r3, #12]
 8002e16:	68fb      	ldr	r3, [r7, #12]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002e1e:	60da      	str	r2, [r3, #12]
 8002e20:	2300      	movs	r3, #0
 8002e22:	e000      	b.n	8002e26 <HAL_UART_Transmit_IT+0x60>
 8002e24:	2302      	movs	r3, #2
 8002e26:	4618      	mov	r0, r3
 8002e28:	3714      	adds	r7, #20
 8002e2a:	46bd      	mov	sp, r7
 8002e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e30:	4770      	bx	lr

08002e32 <HAL_UART_Receive_IT>:
 8002e32:	b580      	push	{r7, lr}
 8002e34:	b084      	sub	sp, #16
 8002e36:	af00      	add	r7, sp, #0
 8002e38:	60f8      	str	r0, [r7, #12]
 8002e3a:	60b9      	str	r1, [r7, #8]
 8002e3c:	4613      	mov	r3, r2
 8002e3e:	80fb      	strh	r3, [r7, #6]
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002e46:	b2db      	uxtb	r3, r3
 8002e48:	2b20      	cmp	r3, #32
 8002e4a:	d112      	bne.n	8002e72 <HAL_UART_Receive_IT+0x40>
 8002e4c:	68bb      	ldr	r3, [r7, #8]
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d002      	beq.n	8002e58 <HAL_UART_Receive_IT+0x26>
 8002e52:	88fb      	ldrh	r3, [r7, #6]
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d101      	bne.n	8002e5c <HAL_UART_Receive_IT+0x2a>
 8002e58:	2301      	movs	r3, #1
 8002e5a:	e00b      	b.n	8002e74 <HAL_UART_Receive_IT+0x42>
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	2200      	movs	r2, #0
 8002e60:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e62:	88fb      	ldrh	r3, [r7, #6]
 8002e64:	461a      	mov	r2, r3
 8002e66:	68b9      	ldr	r1, [r7, #8]
 8002e68:	68f8      	ldr	r0, [r7, #12]
 8002e6a:	f000 fb08 	bl	800347e <UART_Start_Receive_IT>
 8002e6e:	4603      	mov	r3, r0
 8002e70:	e000      	b.n	8002e74 <HAL_UART_Receive_IT+0x42>
 8002e72:	2302      	movs	r3, #2
 8002e74:	4618      	mov	r0, r3
 8002e76:	3710      	adds	r7, #16
 8002e78:	46bd      	mov	sp, r7
 8002e7a:	bd80      	pop	{r7, pc}

08002e7c <HAL_UART_IRQHandler>:
 8002e7c:	b580      	push	{r7, lr}
 8002e7e:	b0ba      	sub	sp, #232	@ 0xe8
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	68db      	ldr	r3, [r3, #12]
 8002e94:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	695b      	ldr	r3, [r3, #20]
 8002e9e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8002ea2:	2300      	movs	r3, #0
 8002ea4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002ea8:	2300      	movs	r3, #0
 8002eaa:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8002eae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002eb2:	f003 030f 	and.w	r3, r3, #15
 8002eb6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002eba:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d10f      	bne.n	8002ee2 <HAL_UART_IRQHandler+0x66>
 8002ec2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002ec6:	f003 0320 	and.w	r3, r3, #32
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d009      	beq.n	8002ee2 <HAL_UART_IRQHandler+0x66>
 8002ece:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002ed2:	f003 0320 	and.w	r3, r3, #32
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d003      	beq.n	8002ee2 <HAL_UART_IRQHandler+0x66>
 8002eda:	6878      	ldr	r0, [r7, #4]
 8002edc:	f000 fbe8 	bl	80036b0 <UART_Receive_IT>
 8002ee0:	e25b      	b.n	800339a <HAL_UART_IRQHandler+0x51e>
 8002ee2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	f000 80de 	beq.w	80030a8 <HAL_UART_IRQHandler+0x22c>
 8002eec:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002ef0:	f003 0301 	and.w	r3, r3, #1
 8002ef4:	2b00      	cmp	r3, #0
 8002ef6:	d106      	bne.n	8002f06 <HAL_UART_IRQHandler+0x8a>
 8002ef8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002efc:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	f000 80d1 	beq.w	80030a8 <HAL_UART_IRQHandler+0x22c>
 8002f06:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f0a:	f003 0301 	and.w	r3, r3, #1
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d00b      	beq.n	8002f2a <HAL_UART_IRQHandler+0xae>
 8002f12:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002f16:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d005      	beq.n	8002f2a <HAL_UART_IRQHandler+0xae>
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f22:	f043 0201 	orr.w	r2, r3, #1
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f2a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f2e:	f003 0304 	and.w	r3, r3, #4
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d00b      	beq.n	8002f4e <HAL_UART_IRQHandler+0xd2>
 8002f36:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f3a:	f003 0301 	and.w	r3, r3, #1
 8002f3e:	2b00      	cmp	r3, #0
 8002f40:	d005      	beq.n	8002f4e <HAL_UART_IRQHandler+0xd2>
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f46:	f043 0202 	orr.w	r2, r3, #2
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f4e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f52:	f003 0302 	and.w	r3, r3, #2
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d00b      	beq.n	8002f72 <HAL_UART_IRQHandler+0xf6>
 8002f5a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f5e:	f003 0301 	and.w	r3, r3, #1
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d005      	beq.n	8002f72 <HAL_UART_IRQHandler+0xf6>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f6a:	f043 0204 	orr.w	r2, r3, #4
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f72:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f76:	f003 0308 	and.w	r3, r3, #8
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d011      	beq.n	8002fa2 <HAL_UART_IRQHandler+0x126>
 8002f7e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002f82:	f003 0320 	and.w	r3, r3, #32
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d105      	bne.n	8002f96 <HAL_UART_IRQHandler+0x11a>
 8002f8a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f8e:	f003 0301 	and.w	r3, r3, #1
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d005      	beq.n	8002fa2 <HAL_UART_IRQHandler+0x126>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f9a:	f043 0208 	orr.w	r2, r3, #8
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	645a      	str	r2, [r3, #68]	@ 0x44
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	f000 81f2 	beq.w	8003390 <HAL_UART_IRQHandler+0x514>
 8002fac:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002fb0:	f003 0320 	and.w	r3, r3, #32
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d008      	beq.n	8002fca <HAL_UART_IRQHandler+0x14e>
 8002fb8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002fbc:	f003 0320 	and.w	r3, r3, #32
 8002fc0:	2b00      	cmp	r3, #0
 8002fc2:	d002      	beq.n	8002fca <HAL_UART_IRQHandler+0x14e>
 8002fc4:	6878      	ldr	r0, [r7, #4]
 8002fc6:	f000 fb73 	bl	80036b0 <UART_Receive_IT>
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	695b      	ldr	r3, [r3, #20]
 8002fd0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002fd4:	2b40      	cmp	r3, #64	@ 0x40
 8002fd6:	bf0c      	ite	eq
 8002fd8:	2301      	moveq	r3, #1
 8002fda:	2300      	movne	r3, #0
 8002fdc:	b2db      	uxtb	r3, r3
 8002fde:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fe6:	f003 0308 	and.w	r3, r3, #8
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d103      	bne.n	8002ff6 <HAL_UART_IRQHandler+0x17a>
 8002fee:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d04f      	beq.n	8003096 <HAL_UART_IRQHandler+0x21a>
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	f000 fa7b 	bl	80034f2 <UART_EndRxTransfer>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	695b      	ldr	r3, [r3, #20]
 8003002:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003006:	2b40      	cmp	r3, #64	@ 0x40
 8003008:	d141      	bne.n	800308e <HAL_UART_IRQHandler+0x212>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	3314      	adds	r3, #20
 8003010:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003014:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003018:	e853 3f00 	ldrex	r3, [r3]
 800301c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003020:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003024:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003028:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	3314      	adds	r3, #20
 8003032:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8003036:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800303a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800303e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003042:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8003046:	e841 2300 	strex	r3, r2, [r1]
 800304a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800304e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003052:	2b00      	cmp	r3, #0
 8003054:	d1d9      	bne.n	800300a <HAL_UART_IRQHandler+0x18e>
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800305a:	2b00      	cmp	r3, #0
 800305c:	d013      	beq.n	8003086 <HAL_UART_IRQHandler+0x20a>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003062:	4a7e      	ldr	r2, [pc, #504]	@ (800325c <HAL_UART_IRQHandler+0x3e0>)
 8003064:	651a      	str	r2, [r3, #80]	@ 0x50
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800306a:	4618      	mov	r0, r3
 800306c:	f7fe fb4f 	bl	800170e <HAL_DMA_Abort_IT>
 8003070:	4603      	mov	r3, r0
 8003072:	2b00      	cmp	r3, #0
 8003074:	d016      	beq.n	80030a4 <HAL_UART_IRQHandler+0x228>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800307a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800307c:	687a      	ldr	r2, [r7, #4]
 800307e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003080:	4610      	mov	r0, r2
 8003082:	4798      	blx	r3
 8003084:	e00e      	b.n	80030a4 <HAL_UART_IRQHandler+0x228>
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f000 f98a 	bl	80033a0 <HAL_UART_ErrorCallback>
 800308c:	e00a      	b.n	80030a4 <HAL_UART_IRQHandler+0x228>
 800308e:	6878      	ldr	r0, [r7, #4]
 8003090:	f000 f986 	bl	80033a0 <HAL_UART_ErrorCallback>
 8003094:	e006      	b.n	80030a4 <HAL_UART_IRQHandler+0x228>
 8003096:	6878      	ldr	r0, [r7, #4]
 8003098:	f000 f982 	bl	80033a0 <HAL_UART_ErrorCallback>
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	2200      	movs	r2, #0
 80030a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80030a2:	e175      	b.n	8003390 <HAL_UART_IRQHandler+0x514>
 80030a4:	bf00      	nop
 80030a6:	e173      	b.n	8003390 <HAL_UART_IRQHandler+0x514>
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ac:	2b01      	cmp	r3, #1
 80030ae:	f040 814f 	bne.w	8003350 <HAL_UART_IRQHandler+0x4d4>
 80030b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80030b6:	f003 0310 	and.w	r3, r3, #16
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	f000 8148 	beq.w	8003350 <HAL_UART_IRQHandler+0x4d4>
 80030c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80030c4:	f003 0310 	and.w	r3, r3, #16
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	f000 8141 	beq.w	8003350 <HAL_UART_IRQHandler+0x4d4>
 80030ce:	2300      	movs	r3, #0
 80030d0:	60bb      	str	r3, [r7, #8]
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	60bb      	str	r3, [r7, #8]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	685b      	ldr	r3, [r3, #4]
 80030e0:	60bb      	str	r3, [r7, #8]
 80030e2:	68bb      	ldr	r3, [r7, #8]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	695b      	ldr	r3, [r3, #20]
 80030ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80030ee:	2b40      	cmp	r3, #64	@ 0x40
 80030f0:	f040 80b6 	bne.w	8003260 <HAL_UART_IRQHandler+0x3e4>
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	685b      	ldr	r3, [r3, #4]
 80030fc:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8003100:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8003104:	2b00      	cmp	r3, #0
 8003106:	f000 8145 	beq.w	8003394 <HAL_UART_IRQHandler+0x518>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800310e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8003112:	429a      	cmp	r2, r3
 8003114:	f080 813e 	bcs.w	8003394 <HAL_UART_IRQHandler+0x518>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800311e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003124:	69db      	ldr	r3, [r3, #28]
 8003126:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800312a:	f000 8088 	beq.w	800323e <HAL_UART_IRQHandler+0x3c2>
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	330c      	adds	r3, #12
 8003134:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003138:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800313c:	e853 3f00 	ldrex	r3, [r3]
 8003140:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003144:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003148:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800314c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	330c      	adds	r3, #12
 8003156:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800315a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800315e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003162:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8003166:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800316a:	e841 2300 	strex	r3, r2, [r1]
 800316e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003172:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003176:	2b00      	cmp	r3, #0
 8003178:	d1d9      	bne.n	800312e <HAL_UART_IRQHandler+0x2b2>
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	3314      	adds	r3, #20
 8003180:	677b      	str	r3, [r7, #116]	@ 0x74
 8003182:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003184:	e853 3f00 	ldrex	r3, [r3]
 8003188:	673b      	str	r3, [r7, #112]	@ 0x70
 800318a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800318c:	f023 0301 	bic.w	r3, r3, #1
 8003190:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	3314      	adds	r3, #20
 800319a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800319e:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80031a2:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80031a4:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80031a6:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80031aa:	e841 2300 	strex	r3, r2, [r1]
 80031ae:	67bb      	str	r3, [r7, #120]	@ 0x78
 80031b0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80031b2:	2b00      	cmp	r3, #0
 80031b4:	d1e1      	bne.n	800317a <HAL_UART_IRQHandler+0x2fe>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	3314      	adds	r3, #20
 80031bc:	663b      	str	r3, [r7, #96]	@ 0x60
 80031be:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80031c0:	e853 3f00 	ldrex	r3, [r3]
 80031c4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80031c6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80031c8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80031cc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	3314      	adds	r3, #20
 80031d6:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80031da:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80031dc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80031de:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80031e0:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80031e2:	e841 2300 	strex	r3, r2, [r1]
 80031e6:	667b      	str	r3, [r7, #100]	@ 0x64
 80031e8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d1e3      	bne.n	80031b6 <HAL_UART_IRQHandler+0x33a>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	2220      	movs	r2, #32
 80031f2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	2200      	movs	r2, #0
 80031fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	330c      	adds	r3, #12
 8003202:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003204:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003206:	e853 3f00 	ldrex	r3, [r3]
 800320a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800320c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800320e:	f023 0310 	bic.w	r3, r3, #16
 8003212:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	330c      	adds	r3, #12
 800321c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8003220:	65ba      	str	r2, [r7, #88]	@ 0x58
 8003222:	657b      	str	r3, [r7, #84]	@ 0x54
 8003224:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003226:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003228:	e841 2300 	strex	r3, r2, [r1]
 800322c:	653b      	str	r3, [r7, #80]	@ 0x50
 800322e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003230:	2b00      	cmp	r3, #0
 8003232:	d1e3      	bne.n	80031fc <HAL_UART_IRQHandler+0x380>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003238:	4618      	mov	r0, r3
 800323a:	f7fe f9f8 	bl	800162e <HAL_DMA_Abort>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	2202      	movs	r2, #2
 8003242:	635a      	str	r2, [r3, #52]	@ 0x34
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800324c:	b29b      	uxth	r3, r3
 800324e:	1ad3      	subs	r3, r2, r3
 8003250:	b29b      	uxth	r3, r3
 8003252:	4619      	mov	r1, r3
 8003254:	6878      	ldr	r0, [r7, #4]
 8003256:	f000 f8ad 	bl	80033b4 <HAL_UARTEx_RxEventCallback>
 800325a:	e09b      	b.n	8003394 <HAL_UART_IRQHandler+0x518>
 800325c:	080035b9 	.word	0x080035b9
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003268:	b29b      	uxth	r3, r3
 800326a:	1ad3      	subs	r3, r2, r3
 800326c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003274:	b29b      	uxth	r3, r3
 8003276:	2b00      	cmp	r3, #0
 8003278:	f000 808e 	beq.w	8003398 <HAL_UART_IRQHandler+0x51c>
 800327c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003280:	2b00      	cmp	r3, #0
 8003282:	f000 8089 	beq.w	8003398 <HAL_UART_IRQHandler+0x51c>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	330c      	adds	r3, #12
 800328c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800328e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003290:	e853 3f00 	ldrex	r3, [r3]
 8003294:	637b      	str	r3, [r7, #52]	@ 0x34
 8003296:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003298:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800329c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	330c      	adds	r3, #12
 80032a6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80032aa:	647a      	str	r2, [r7, #68]	@ 0x44
 80032ac:	643b      	str	r3, [r7, #64]	@ 0x40
 80032ae:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80032b0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80032b2:	e841 2300 	strex	r3, r2, [r1]
 80032b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80032b8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d1e3      	bne.n	8003286 <HAL_UART_IRQHandler+0x40a>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	3314      	adds	r3, #20
 80032c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80032c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80032c8:	e853 3f00 	ldrex	r3, [r3]
 80032cc:	623b      	str	r3, [r7, #32]
 80032ce:	6a3b      	ldr	r3, [r7, #32]
 80032d0:	f023 0301 	bic.w	r3, r3, #1
 80032d4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	3314      	adds	r3, #20
 80032de:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80032e2:	633a      	str	r2, [r7, #48]	@ 0x30
 80032e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80032e6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80032e8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80032ea:	e841 2300 	strex	r3, r2, [r1]
 80032ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 80032f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d1e3      	bne.n	80032be <HAL_UART_IRQHandler+0x442>
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	2220      	movs	r2, #32
 80032fa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	2200      	movs	r2, #0
 8003302:	631a      	str	r2, [r3, #48]	@ 0x30
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	330c      	adds	r3, #12
 800330a:	613b      	str	r3, [r7, #16]
 800330c:	693b      	ldr	r3, [r7, #16]
 800330e:	e853 3f00 	ldrex	r3, [r3]
 8003312:	60fb      	str	r3, [r7, #12]
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	f023 0310 	bic.w	r3, r3, #16
 800331a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	330c      	adds	r3, #12
 8003324:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8003328:	61fa      	str	r2, [r7, #28]
 800332a:	61bb      	str	r3, [r7, #24]
 800332c:	69b9      	ldr	r1, [r7, #24]
 800332e:	69fa      	ldr	r2, [r7, #28]
 8003330:	e841 2300 	strex	r3, r2, [r1]
 8003334:	617b      	str	r3, [r7, #20]
 8003336:	697b      	ldr	r3, [r7, #20]
 8003338:	2b00      	cmp	r3, #0
 800333a:	d1e3      	bne.n	8003304 <HAL_UART_IRQHandler+0x488>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	2202      	movs	r2, #2
 8003340:	635a      	str	r2, [r3, #52]	@ 0x34
 8003342:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003346:	4619      	mov	r1, r3
 8003348:	6878      	ldr	r0, [r7, #4]
 800334a:	f000 f833 	bl	80033b4 <HAL_UARTEx_RxEventCallback>
 800334e:	e023      	b.n	8003398 <HAL_UART_IRQHandler+0x51c>
 8003350:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003354:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003358:	2b00      	cmp	r3, #0
 800335a:	d009      	beq.n	8003370 <HAL_UART_IRQHandler+0x4f4>
 800335c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003360:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003364:	2b00      	cmp	r3, #0
 8003366:	d003      	beq.n	8003370 <HAL_UART_IRQHandler+0x4f4>
 8003368:	6878      	ldr	r0, [r7, #4]
 800336a:	f000 f939 	bl	80035e0 <UART_Transmit_IT>
 800336e:	e014      	b.n	800339a <HAL_UART_IRQHandler+0x51e>
 8003370:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003374:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003378:	2b00      	cmp	r3, #0
 800337a:	d00e      	beq.n	800339a <HAL_UART_IRQHandler+0x51e>
 800337c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003380:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003384:	2b00      	cmp	r3, #0
 8003386:	d008      	beq.n	800339a <HAL_UART_IRQHandler+0x51e>
 8003388:	6878      	ldr	r0, [r7, #4]
 800338a:	f000 f979 	bl	8003680 <UART_EndTransmit_IT>
 800338e:	e004      	b.n	800339a <HAL_UART_IRQHandler+0x51e>
 8003390:	bf00      	nop
 8003392:	e002      	b.n	800339a <HAL_UART_IRQHandler+0x51e>
 8003394:	bf00      	nop
 8003396:	e000      	b.n	800339a <HAL_UART_IRQHandler+0x51e>
 8003398:	bf00      	nop
 800339a:	37e8      	adds	r7, #232	@ 0xe8
 800339c:	46bd      	mov	sp, r7
 800339e:	bd80      	pop	{r7, pc}

080033a0 <HAL_UART_ErrorCallback>:
 80033a0:	b480      	push	{r7}
 80033a2:	b083      	sub	sp, #12
 80033a4:	af00      	add	r7, sp, #0
 80033a6:	6078      	str	r0, [r7, #4]
 80033a8:	bf00      	nop
 80033aa:	370c      	adds	r7, #12
 80033ac:	46bd      	mov	sp, r7
 80033ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033b2:	4770      	bx	lr

080033b4 <HAL_UARTEx_RxEventCallback>:
 80033b4:	b480      	push	{r7}
 80033b6:	b083      	sub	sp, #12
 80033b8:	af00      	add	r7, sp, #0
 80033ba:	6078      	str	r0, [r7, #4]
 80033bc:	460b      	mov	r3, r1
 80033be:	807b      	strh	r3, [r7, #2]
 80033c0:	bf00      	nop
 80033c2:	370c      	adds	r7, #12
 80033c4:	46bd      	mov	sp, r7
 80033c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ca:	4770      	bx	lr

080033cc <UART_WaitOnFlagUntilTimeout>:
 80033cc:	b580      	push	{r7, lr}
 80033ce:	b086      	sub	sp, #24
 80033d0:	af00      	add	r7, sp, #0
 80033d2:	60f8      	str	r0, [r7, #12]
 80033d4:	60b9      	str	r1, [r7, #8]
 80033d6:	603b      	str	r3, [r7, #0]
 80033d8:	4613      	mov	r3, r2
 80033da:	71fb      	strb	r3, [r7, #7]
 80033dc:	e03b      	b.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 80033de:	6a3b      	ldr	r3, [r7, #32]
 80033e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80033e4:	d037      	beq.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 80033e6:	f7fe f805 	bl	80013f4 <HAL_GetTick>
 80033ea:	4602      	mov	r2, r0
 80033ec:	683b      	ldr	r3, [r7, #0]
 80033ee:	1ad3      	subs	r3, r2, r3
 80033f0:	6a3a      	ldr	r2, [r7, #32]
 80033f2:	429a      	cmp	r2, r3
 80033f4:	d302      	bcc.n	80033fc <UART_WaitOnFlagUntilTimeout+0x30>
 80033f6:	6a3b      	ldr	r3, [r7, #32]
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	d101      	bne.n	8003400 <UART_WaitOnFlagUntilTimeout+0x34>
 80033fc:	2303      	movs	r3, #3
 80033fe:	e03a      	b.n	8003476 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	68db      	ldr	r3, [r3, #12]
 8003406:	f003 0304 	and.w	r3, r3, #4
 800340a:	2b00      	cmp	r3, #0
 800340c:	d023      	beq.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 800340e:	68bb      	ldr	r3, [r7, #8]
 8003410:	2b80      	cmp	r3, #128	@ 0x80
 8003412:	d020      	beq.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003414:	68bb      	ldr	r3, [r7, #8]
 8003416:	2b40      	cmp	r3, #64	@ 0x40
 8003418:	d01d      	beq.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	f003 0308 	and.w	r3, r3, #8
 8003424:	2b08      	cmp	r3, #8
 8003426:	d116      	bne.n	8003456 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003428:	2300      	movs	r3, #0
 800342a:	617b      	str	r3, [r7, #20]
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	617b      	str	r3, [r7, #20]
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	685b      	ldr	r3, [r3, #4]
 800343a:	617b      	str	r3, [r7, #20]
 800343c:	697b      	ldr	r3, [r7, #20]
 800343e:	68f8      	ldr	r0, [r7, #12]
 8003440:	f000 f857 	bl	80034f2 <UART_EndRxTransfer>
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	2208      	movs	r2, #8
 8003448:	645a      	str	r2, [r3, #68]	@ 0x44
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	2200      	movs	r2, #0
 800344e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003452:	2301      	movs	r3, #1
 8003454:	e00f      	b.n	8003476 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	681a      	ldr	r2, [r3, #0]
 800345c:	68bb      	ldr	r3, [r7, #8]
 800345e:	4013      	ands	r3, r2
 8003460:	68ba      	ldr	r2, [r7, #8]
 8003462:	429a      	cmp	r2, r3
 8003464:	bf0c      	ite	eq
 8003466:	2301      	moveq	r3, #1
 8003468:	2300      	movne	r3, #0
 800346a:	b2db      	uxtb	r3, r3
 800346c:	461a      	mov	r2, r3
 800346e:	79fb      	ldrb	r3, [r7, #7]
 8003470:	429a      	cmp	r2, r3
 8003472:	d0b4      	beq.n	80033de <UART_WaitOnFlagUntilTimeout+0x12>
 8003474:	2300      	movs	r3, #0
 8003476:	4618      	mov	r0, r3
 8003478:	3718      	adds	r7, #24
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}

0800347e <UART_Start_Receive_IT>:
 800347e:	b480      	push	{r7}
 8003480:	b085      	sub	sp, #20
 8003482:	af00      	add	r7, sp, #0
 8003484:	60f8      	str	r0, [r7, #12]
 8003486:	60b9      	str	r1, [r7, #8]
 8003488:	4613      	mov	r3, r2
 800348a:	80fb      	strh	r3, [r7, #6]
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	68ba      	ldr	r2, [r7, #8]
 8003490:	629a      	str	r2, [r3, #40]	@ 0x28
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	88fa      	ldrh	r2, [r7, #6]
 8003496:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	88fa      	ldrh	r2, [r7, #6]
 800349c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	2200      	movs	r2, #0
 80034a2:	645a      	str	r2, [r3, #68]	@ 0x44
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	2222      	movs	r2, #34	@ 0x22
 80034a8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	691b      	ldr	r3, [r3, #16]
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	d007      	beq.n	80034c4 <UART_Start_Receive_IT+0x46>
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	68da      	ldr	r2, [r3, #12]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80034c2:	60da      	str	r2, [r3, #12]
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	695a      	ldr	r2, [r3, #20]
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	f042 0201 	orr.w	r2, r2, #1
 80034d2:	615a      	str	r2, [r3, #20]
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	68da      	ldr	r2, [r3, #12]
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	f042 0220 	orr.w	r2, r2, #32
 80034e2:	60da      	str	r2, [r3, #12]
 80034e4:	2300      	movs	r3, #0
 80034e6:	4618      	mov	r0, r3
 80034e8:	3714      	adds	r7, #20
 80034ea:	46bd      	mov	sp, r7
 80034ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f0:	4770      	bx	lr

080034f2 <UART_EndRxTransfer>:
 80034f2:	b480      	push	{r7}
 80034f4:	b095      	sub	sp, #84	@ 0x54
 80034f6:	af00      	add	r7, sp, #0
 80034f8:	6078      	str	r0, [r7, #4]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	330c      	adds	r3, #12
 8003500:	637b      	str	r3, [r7, #52]	@ 0x34
 8003502:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003504:	e853 3f00 	ldrex	r3, [r3]
 8003508:	633b      	str	r3, [r7, #48]	@ 0x30
 800350a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800350c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003510:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	330c      	adds	r3, #12
 8003518:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800351a:	643a      	str	r2, [r7, #64]	@ 0x40
 800351c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800351e:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003520:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003522:	e841 2300 	strex	r3, r2, [r1]
 8003526:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003528:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800352a:	2b00      	cmp	r3, #0
 800352c:	d1e5      	bne.n	80034fa <UART_EndRxTransfer+0x8>
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	3314      	adds	r3, #20
 8003534:	623b      	str	r3, [r7, #32]
 8003536:	6a3b      	ldr	r3, [r7, #32]
 8003538:	e853 3f00 	ldrex	r3, [r3]
 800353c:	61fb      	str	r3, [r7, #28]
 800353e:	69fb      	ldr	r3, [r7, #28]
 8003540:	f023 0301 	bic.w	r3, r3, #1
 8003544:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	3314      	adds	r3, #20
 800354c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800354e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003550:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003552:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003554:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003556:	e841 2300 	strex	r3, r2, [r1]
 800355a:	627b      	str	r3, [r7, #36]	@ 0x24
 800355c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800355e:	2b00      	cmp	r3, #0
 8003560:	d1e5      	bne.n	800352e <UART_EndRxTransfer+0x3c>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003566:	2b01      	cmp	r3, #1
 8003568:	d119      	bne.n	800359e <UART_EndRxTransfer+0xac>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	330c      	adds	r3, #12
 8003570:	60fb      	str	r3, [r7, #12]
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	e853 3f00 	ldrex	r3, [r3]
 8003578:	60bb      	str	r3, [r7, #8]
 800357a:	68bb      	ldr	r3, [r7, #8]
 800357c:	f023 0310 	bic.w	r3, r3, #16
 8003580:	647b      	str	r3, [r7, #68]	@ 0x44
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	330c      	adds	r3, #12
 8003588:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800358a:	61ba      	str	r2, [r7, #24]
 800358c:	617b      	str	r3, [r7, #20]
 800358e:	6979      	ldr	r1, [r7, #20]
 8003590:	69ba      	ldr	r2, [r7, #24]
 8003592:	e841 2300 	strex	r3, r2, [r1]
 8003596:	613b      	str	r3, [r7, #16]
 8003598:	693b      	ldr	r3, [r7, #16]
 800359a:	2b00      	cmp	r3, #0
 800359c:	d1e5      	bne.n	800356a <UART_EndRxTransfer+0x78>
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	2220      	movs	r2, #32
 80035a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	2200      	movs	r2, #0
 80035aa:	631a      	str	r2, [r3, #48]	@ 0x30
 80035ac:	bf00      	nop
 80035ae:	3754      	adds	r7, #84	@ 0x54
 80035b0:	46bd      	mov	sp, r7
 80035b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035b6:	4770      	bx	lr

080035b8 <UART_DMAAbortOnError>:
 80035b8:	b580      	push	{r7, lr}
 80035ba:	b084      	sub	sp, #16
 80035bc:	af00      	add	r7, sp, #0
 80035be:	6078      	str	r0, [r7, #4]
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035c4:	60fb      	str	r3, [r7, #12]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	2200      	movs	r2, #0
 80035ca:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	2200      	movs	r2, #0
 80035d0:	84da      	strh	r2, [r3, #38]	@ 0x26
 80035d2:	68f8      	ldr	r0, [r7, #12]
 80035d4:	f7ff fee4 	bl	80033a0 <HAL_UART_ErrorCallback>
 80035d8:	bf00      	nop
 80035da:	3710      	adds	r7, #16
 80035dc:	46bd      	mov	sp, r7
 80035de:	bd80      	pop	{r7, pc}

080035e0 <UART_Transmit_IT>:
 80035e0:	b480      	push	{r7}
 80035e2:	b085      	sub	sp, #20
 80035e4:	af00      	add	r7, sp, #0
 80035e6:	6078      	str	r0, [r7, #4]
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80035ee:	b2db      	uxtb	r3, r3
 80035f0:	2b21      	cmp	r3, #33	@ 0x21
 80035f2:	d13e      	bne.n	8003672 <UART_Transmit_IT+0x92>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	689b      	ldr	r3, [r3, #8]
 80035f8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80035fc:	d114      	bne.n	8003628 <UART_Transmit_IT+0x48>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	691b      	ldr	r3, [r3, #16]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d110      	bne.n	8003628 <UART_Transmit_IT+0x48>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	6a1b      	ldr	r3, [r3, #32]
 800360a:	60fb      	str	r3, [r7, #12]
 800360c:	68fb      	ldr	r3, [r7, #12]
 800360e:	881b      	ldrh	r3, [r3, #0]
 8003610:	461a      	mov	r2, r3
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800361a:	605a      	str	r2, [r3, #4]
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	6a1b      	ldr	r3, [r3, #32]
 8003620:	1c9a      	adds	r2, r3, #2
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	621a      	str	r2, [r3, #32]
 8003626:	e008      	b.n	800363a <UART_Transmit_IT+0x5a>
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	6a1b      	ldr	r3, [r3, #32]
 800362c:	1c59      	adds	r1, r3, #1
 800362e:	687a      	ldr	r2, [r7, #4]
 8003630:	6211      	str	r1, [r2, #32]
 8003632:	781a      	ldrb	r2, [r3, #0]
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	605a      	str	r2, [r3, #4]
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800363e:	b29b      	uxth	r3, r3
 8003640:	3b01      	subs	r3, #1
 8003642:	b29b      	uxth	r3, r3
 8003644:	687a      	ldr	r2, [r7, #4]
 8003646:	4619      	mov	r1, r3
 8003648:	84d1      	strh	r1, [r2, #38]	@ 0x26
 800364a:	2b00      	cmp	r3, #0
 800364c:	d10f      	bne.n	800366e <UART_Transmit_IT+0x8e>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	68da      	ldr	r2, [r3, #12]
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800365c:	60da      	str	r2, [r3, #12]
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	68da      	ldr	r2, [r3, #12]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800366c:	60da      	str	r2, [r3, #12]
 800366e:	2300      	movs	r3, #0
 8003670:	e000      	b.n	8003674 <UART_Transmit_IT+0x94>
 8003672:	2302      	movs	r3, #2
 8003674:	4618      	mov	r0, r3
 8003676:	3714      	adds	r7, #20
 8003678:	46bd      	mov	sp, r7
 800367a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800367e:	4770      	bx	lr

08003680 <UART_EndTransmit_IT>:
 8003680:	b580      	push	{r7, lr}
 8003682:	b082      	sub	sp, #8
 8003684:	af00      	add	r7, sp, #0
 8003686:	6078      	str	r0, [r7, #4]
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	68da      	ldr	r2, [r3, #12]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003696:	60da      	str	r2, [r3, #12]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	2220      	movs	r2, #32
 800369c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80036a0:	6878      	ldr	r0, [r7, #4]
 80036a2:	f7fd f8f7 	bl	8000894 <HAL_UART_TxCpltCallback>
 80036a6:	2300      	movs	r3, #0
 80036a8:	4618      	mov	r0, r3
 80036aa:	3708      	adds	r7, #8
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}

080036b0 <UART_Receive_IT>:
 80036b0:	b580      	push	{r7, lr}
 80036b2:	b08c      	sub	sp, #48	@ 0x30
 80036b4:	af00      	add	r7, sp, #0
 80036b6:	6078      	str	r0, [r7, #4]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80036be:	b2db      	uxtb	r3, r3
 80036c0:	2b22      	cmp	r3, #34	@ 0x22
 80036c2:	f040 80ae 	bne.w	8003822 <UART_Receive_IT+0x172>
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	689b      	ldr	r3, [r3, #8]
 80036ca:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80036ce:	d117      	bne.n	8003700 <UART_Receive_IT+0x50>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	691b      	ldr	r3, [r3, #16]
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d113      	bne.n	8003700 <UART_Receive_IT+0x50>
 80036d8:	2300      	movs	r3, #0
 80036da:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036e0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	685b      	ldr	r3, [r3, #4]
 80036e8:	b29b      	uxth	r3, r3
 80036ea:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80036ee:	b29a      	uxth	r2, r3
 80036f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80036f2:	801a      	strh	r2, [r3, #0]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036f8:	1c9a      	adds	r2, r3, #2
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	629a      	str	r2, [r3, #40]	@ 0x28
 80036fe:	e026      	b.n	800374e <UART_Receive_IT+0x9e>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003704:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003706:	2300      	movs	r3, #0
 8003708:	62bb      	str	r3, [r7, #40]	@ 0x28
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	689b      	ldr	r3, [r3, #8]
 800370e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003712:	d007      	beq.n	8003724 <UART_Receive_IT+0x74>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	689b      	ldr	r3, [r3, #8]
 8003718:	2b00      	cmp	r3, #0
 800371a:	d10a      	bne.n	8003732 <UART_Receive_IT+0x82>
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	691b      	ldr	r3, [r3, #16]
 8003720:	2b00      	cmp	r3, #0
 8003722:	d106      	bne.n	8003732 <UART_Receive_IT+0x82>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	685b      	ldr	r3, [r3, #4]
 800372a:	b2da      	uxtb	r2, r3
 800372c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800372e:	701a      	strb	r2, [r3, #0]
 8003730:	e008      	b.n	8003744 <UART_Receive_IT+0x94>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	685b      	ldr	r3, [r3, #4]
 8003738:	b2db      	uxtb	r3, r3
 800373a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800373e:	b2da      	uxtb	r2, r3
 8003740:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003742:	701a      	strb	r2, [r3, #0]
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003748:	1c5a      	adds	r2, r3, #1
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	629a      	str	r2, [r3, #40]	@ 0x28
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003752:	b29b      	uxth	r3, r3
 8003754:	3b01      	subs	r3, #1
 8003756:	b29b      	uxth	r3, r3
 8003758:	687a      	ldr	r2, [r7, #4]
 800375a:	4619      	mov	r1, r3
 800375c:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800375e:	2b00      	cmp	r3, #0
 8003760:	d15d      	bne.n	800381e <UART_Receive_IT+0x16e>
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	68da      	ldr	r2, [r3, #12]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	f022 0220 	bic.w	r2, r2, #32
 8003770:	60da      	str	r2, [r3, #12]
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	68da      	ldr	r2, [r3, #12]
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003780:	60da      	str	r2, [r3, #12]
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	695a      	ldr	r2, [r3, #20]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f022 0201 	bic.w	r2, r2, #1
 8003790:	615a      	str	r2, [r3, #20]
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	2220      	movs	r2, #32
 8003796:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	2200      	movs	r2, #0
 800379e:	635a      	str	r2, [r3, #52]	@ 0x34
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037a4:	2b01      	cmp	r3, #1
 80037a6:	d135      	bne.n	8003814 <UART_Receive_IT+0x164>
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	2200      	movs	r2, #0
 80037ac:	631a      	str	r2, [r3, #48]	@ 0x30
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	330c      	adds	r3, #12
 80037b4:	617b      	str	r3, [r7, #20]
 80037b6:	697b      	ldr	r3, [r7, #20]
 80037b8:	e853 3f00 	ldrex	r3, [r3]
 80037bc:	613b      	str	r3, [r7, #16]
 80037be:	693b      	ldr	r3, [r7, #16]
 80037c0:	f023 0310 	bic.w	r3, r3, #16
 80037c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	330c      	adds	r3, #12
 80037cc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80037ce:	623a      	str	r2, [r7, #32]
 80037d0:	61fb      	str	r3, [r7, #28]
 80037d2:	69f9      	ldr	r1, [r7, #28]
 80037d4:	6a3a      	ldr	r2, [r7, #32]
 80037d6:	e841 2300 	strex	r3, r2, [r1]
 80037da:	61bb      	str	r3, [r7, #24]
 80037dc:	69bb      	ldr	r3, [r7, #24]
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d1e5      	bne.n	80037ae <UART_Receive_IT+0xfe>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f003 0310 	and.w	r3, r3, #16
 80037ec:	2b10      	cmp	r3, #16
 80037ee:	d10a      	bne.n	8003806 <UART_Receive_IT+0x156>
 80037f0:	2300      	movs	r3, #0
 80037f2:	60fb      	str	r3, [r7, #12]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	60fb      	str	r3, [r7, #12]
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	685b      	ldr	r3, [r3, #4]
 8003802:	60fb      	str	r3, [r7, #12]
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800380a:	4619      	mov	r1, r3
 800380c:	6878      	ldr	r0, [r7, #4]
 800380e:	f7ff fdd1 	bl	80033b4 <HAL_UARTEx_RxEventCallback>
 8003812:	e002      	b.n	800381a <UART_Receive_IT+0x16a>
 8003814:	6878      	ldr	r0, [r7, #4]
 8003816:	f7fd f9c7 	bl	8000ba8 <HAL_UART_RxCpltCallback>
 800381a:	2300      	movs	r3, #0
 800381c:	e002      	b.n	8003824 <UART_Receive_IT+0x174>
 800381e:	2300      	movs	r3, #0
 8003820:	e000      	b.n	8003824 <UART_Receive_IT+0x174>
 8003822:	2302      	movs	r3, #2
 8003824:	4618      	mov	r0, r3
 8003826:	3730      	adds	r7, #48	@ 0x30
 8003828:	46bd      	mov	sp, r7
 800382a:	bd80      	pop	{r7, pc}

0800382c <UART_SetConfig>:
 800382c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003830:	b0c0      	sub	sp, #256	@ 0x100
 8003832:	af00      	add	r7, sp, #0
 8003834:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003838:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	691b      	ldr	r3, [r3, #16]
 8003840:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003844:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003848:	68d9      	ldr	r1, [r3, #12]
 800384a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800384e:	681a      	ldr	r2, [r3, #0]
 8003850:	ea40 0301 	orr.w	r3, r0, r1
 8003854:	6113      	str	r3, [r2, #16]
 8003856:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800385a:	689a      	ldr	r2, [r3, #8]
 800385c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003860:	691b      	ldr	r3, [r3, #16]
 8003862:	431a      	orrs	r2, r3
 8003864:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003868:	695b      	ldr	r3, [r3, #20]
 800386a:	431a      	orrs	r2, r3
 800386c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003870:	69db      	ldr	r3, [r3, #28]
 8003872:	4313      	orrs	r3, r2
 8003874:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003878:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	68db      	ldr	r3, [r3, #12]
 8003880:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003884:	f021 010c 	bic.w	r1, r1, #12
 8003888:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800388c:	681a      	ldr	r2, [r3, #0]
 800388e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003892:	430b      	orrs	r3, r1
 8003894:	60d3      	str	r3, [r2, #12]
 8003896:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	695b      	ldr	r3, [r3, #20]
 800389e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80038a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038a6:	6999      	ldr	r1, [r3, #24]
 80038a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038ac:	681a      	ldr	r2, [r3, #0]
 80038ae:	ea40 0301 	orr.w	r3, r0, r1
 80038b2:	6153      	str	r3, [r2, #20]
 80038b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038b8:	681a      	ldr	r2, [r3, #0]
 80038ba:	4b8f      	ldr	r3, [pc, #572]	@ (8003af8 <UART_SetConfig+0x2cc>)
 80038bc:	429a      	cmp	r2, r3
 80038be:	d005      	beq.n	80038cc <UART_SetConfig+0xa0>
 80038c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038c4:	681a      	ldr	r2, [r3, #0]
 80038c6:	4b8d      	ldr	r3, [pc, #564]	@ (8003afc <UART_SetConfig+0x2d0>)
 80038c8:	429a      	cmp	r2, r3
 80038ca:	d104      	bne.n	80038d6 <UART_SetConfig+0xaa>
 80038cc:	f7fe fd24 	bl	8002318 <HAL_RCC_GetPCLK2Freq>
 80038d0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80038d4:	e003      	b.n	80038de <UART_SetConfig+0xb2>
 80038d6:	f7fe fd0b 	bl	80022f0 <HAL_RCC_GetPCLK1Freq>
 80038da:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80038de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038e2:	69db      	ldr	r3, [r3, #28]
 80038e4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80038e8:	f040 810c 	bne.w	8003b04 <UART_SetConfig+0x2d8>
 80038ec:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80038f0:	2200      	movs	r2, #0
 80038f2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80038f6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80038fa:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80038fe:	4622      	mov	r2, r4
 8003900:	462b      	mov	r3, r5
 8003902:	1891      	adds	r1, r2, r2
 8003904:	65b9      	str	r1, [r7, #88]	@ 0x58
 8003906:	415b      	adcs	r3, r3
 8003908:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800390a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800390e:	4621      	mov	r1, r4
 8003910:	eb12 0801 	adds.w	r8, r2, r1
 8003914:	4629      	mov	r1, r5
 8003916:	eb43 0901 	adc.w	r9, r3, r1
 800391a:	f04f 0200 	mov.w	r2, #0
 800391e:	f04f 0300 	mov.w	r3, #0
 8003922:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003926:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800392a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800392e:	4690      	mov	r8, r2
 8003930:	4699      	mov	r9, r3
 8003932:	4623      	mov	r3, r4
 8003934:	eb18 0303 	adds.w	r3, r8, r3
 8003938:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800393c:	462b      	mov	r3, r5
 800393e:	eb49 0303 	adc.w	r3, r9, r3
 8003942:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003946:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800394a:	685b      	ldr	r3, [r3, #4]
 800394c:	2200      	movs	r2, #0
 800394e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003952:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8003956:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800395a:	460b      	mov	r3, r1
 800395c:	18db      	adds	r3, r3, r3
 800395e:	653b      	str	r3, [r7, #80]	@ 0x50
 8003960:	4613      	mov	r3, r2
 8003962:	eb42 0303 	adc.w	r3, r2, r3
 8003966:	657b      	str	r3, [r7, #84]	@ 0x54
 8003968:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800396c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003970:	f7fc fc3a 	bl	80001e8 <__aeabi_uldivmod>
 8003974:	4602      	mov	r2, r0
 8003976:	460b      	mov	r3, r1
 8003978:	4b61      	ldr	r3, [pc, #388]	@ (8003b00 <UART_SetConfig+0x2d4>)
 800397a:	fba3 2302 	umull	r2, r3, r3, r2
 800397e:	095b      	lsrs	r3, r3, #5
 8003980:	011c      	lsls	r4, r3, #4
 8003982:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003986:	2200      	movs	r2, #0
 8003988:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800398c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8003990:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8003994:	4642      	mov	r2, r8
 8003996:	464b      	mov	r3, r9
 8003998:	1891      	adds	r1, r2, r2
 800399a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800399c:	415b      	adcs	r3, r3
 800399e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80039a0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80039a4:	4641      	mov	r1, r8
 80039a6:	eb12 0a01 	adds.w	sl, r2, r1
 80039aa:	4649      	mov	r1, r9
 80039ac:	eb43 0b01 	adc.w	fp, r3, r1
 80039b0:	f04f 0200 	mov.w	r2, #0
 80039b4:	f04f 0300 	mov.w	r3, #0
 80039b8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80039bc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80039c0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80039c4:	4692      	mov	sl, r2
 80039c6:	469b      	mov	fp, r3
 80039c8:	4643      	mov	r3, r8
 80039ca:	eb1a 0303 	adds.w	r3, sl, r3
 80039ce:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80039d2:	464b      	mov	r3, r9
 80039d4:	eb4b 0303 	adc.w	r3, fp, r3
 80039d8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80039dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80039e0:	685b      	ldr	r3, [r3, #4]
 80039e2:	2200      	movs	r2, #0
 80039e4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80039e8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80039ec:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80039f0:	460b      	mov	r3, r1
 80039f2:	18db      	adds	r3, r3, r3
 80039f4:	643b      	str	r3, [r7, #64]	@ 0x40
 80039f6:	4613      	mov	r3, r2
 80039f8:	eb42 0303 	adc.w	r3, r2, r3
 80039fc:	647b      	str	r3, [r7, #68]	@ 0x44
 80039fe:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8003a02:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8003a06:	f7fc fbef 	bl	80001e8 <__aeabi_uldivmod>
 8003a0a:	4602      	mov	r2, r0
 8003a0c:	460b      	mov	r3, r1
 8003a0e:	4611      	mov	r1, r2
 8003a10:	4b3b      	ldr	r3, [pc, #236]	@ (8003b00 <UART_SetConfig+0x2d4>)
 8003a12:	fba3 2301 	umull	r2, r3, r3, r1
 8003a16:	095b      	lsrs	r3, r3, #5
 8003a18:	2264      	movs	r2, #100	@ 0x64
 8003a1a:	fb02 f303 	mul.w	r3, r2, r3
 8003a1e:	1acb      	subs	r3, r1, r3
 8003a20:	00db      	lsls	r3, r3, #3
 8003a22:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8003a26:	4b36      	ldr	r3, [pc, #216]	@ (8003b00 <UART_SetConfig+0x2d4>)
 8003a28:	fba3 2302 	umull	r2, r3, r3, r2
 8003a2c:	095b      	lsrs	r3, r3, #5
 8003a2e:	005b      	lsls	r3, r3, #1
 8003a30:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003a34:	441c      	add	r4, r3
 8003a36:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003a3a:	2200      	movs	r2, #0
 8003a3c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003a40:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8003a44:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8003a48:	4642      	mov	r2, r8
 8003a4a:	464b      	mov	r3, r9
 8003a4c:	1891      	adds	r1, r2, r2
 8003a4e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003a50:	415b      	adcs	r3, r3
 8003a52:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003a54:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003a58:	4641      	mov	r1, r8
 8003a5a:	1851      	adds	r1, r2, r1
 8003a5c:	6339      	str	r1, [r7, #48]	@ 0x30
 8003a5e:	4649      	mov	r1, r9
 8003a60:	414b      	adcs	r3, r1
 8003a62:	637b      	str	r3, [r7, #52]	@ 0x34
 8003a64:	f04f 0200 	mov.w	r2, #0
 8003a68:	f04f 0300 	mov.w	r3, #0
 8003a6c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003a70:	4659      	mov	r1, fp
 8003a72:	00cb      	lsls	r3, r1, #3
 8003a74:	4651      	mov	r1, sl
 8003a76:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003a7a:	4651      	mov	r1, sl
 8003a7c:	00ca      	lsls	r2, r1, #3
 8003a7e:	4610      	mov	r0, r2
 8003a80:	4619      	mov	r1, r3
 8003a82:	4603      	mov	r3, r0
 8003a84:	4642      	mov	r2, r8
 8003a86:	189b      	adds	r3, r3, r2
 8003a88:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003a8c:	464b      	mov	r3, r9
 8003a8e:	460a      	mov	r2, r1
 8003a90:	eb42 0303 	adc.w	r3, r2, r3
 8003a94:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003a98:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003a9c:	685b      	ldr	r3, [r3, #4]
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003aa4:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8003aa8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8003aac:	460b      	mov	r3, r1
 8003aae:	18db      	adds	r3, r3, r3
 8003ab0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003ab2:	4613      	mov	r3, r2
 8003ab4:	eb42 0303 	adc.w	r3, r2, r3
 8003ab8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003aba:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003abe:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8003ac2:	f7fc fb91 	bl	80001e8 <__aeabi_uldivmod>
 8003ac6:	4602      	mov	r2, r0
 8003ac8:	460b      	mov	r3, r1
 8003aca:	4b0d      	ldr	r3, [pc, #52]	@ (8003b00 <UART_SetConfig+0x2d4>)
 8003acc:	fba3 1302 	umull	r1, r3, r3, r2
 8003ad0:	095b      	lsrs	r3, r3, #5
 8003ad2:	2164      	movs	r1, #100	@ 0x64
 8003ad4:	fb01 f303 	mul.w	r3, r1, r3
 8003ad8:	1ad3      	subs	r3, r2, r3
 8003ada:	00db      	lsls	r3, r3, #3
 8003adc:	3332      	adds	r3, #50	@ 0x32
 8003ade:	4a08      	ldr	r2, [pc, #32]	@ (8003b00 <UART_SetConfig+0x2d4>)
 8003ae0:	fba2 2303 	umull	r2, r3, r2, r3
 8003ae4:	095b      	lsrs	r3, r3, #5
 8003ae6:	f003 0207 	and.w	r2, r3, #7
 8003aea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	4422      	add	r2, r4
 8003af2:	609a      	str	r2, [r3, #8]
 8003af4:	e106      	b.n	8003d04 <UART_SetConfig+0x4d8>
 8003af6:	bf00      	nop
 8003af8:	40011000 	.word	0x40011000
 8003afc:	40011400 	.word	0x40011400
 8003b00:	51eb851f 	.word	0x51eb851f
 8003b04:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003b08:	2200      	movs	r2, #0
 8003b0a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003b0e:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8003b12:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8003b16:	4642      	mov	r2, r8
 8003b18:	464b      	mov	r3, r9
 8003b1a:	1891      	adds	r1, r2, r2
 8003b1c:	6239      	str	r1, [r7, #32]
 8003b1e:	415b      	adcs	r3, r3
 8003b20:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b22:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003b26:	4641      	mov	r1, r8
 8003b28:	1854      	adds	r4, r2, r1
 8003b2a:	4649      	mov	r1, r9
 8003b2c:	eb43 0501 	adc.w	r5, r3, r1
 8003b30:	f04f 0200 	mov.w	r2, #0
 8003b34:	f04f 0300 	mov.w	r3, #0
 8003b38:	00eb      	lsls	r3, r5, #3
 8003b3a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003b3e:	00e2      	lsls	r2, r4, #3
 8003b40:	4614      	mov	r4, r2
 8003b42:	461d      	mov	r5, r3
 8003b44:	4643      	mov	r3, r8
 8003b46:	18e3      	adds	r3, r4, r3
 8003b48:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003b4c:	464b      	mov	r3, r9
 8003b4e:	eb45 0303 	adc.w	r3, r5, r3
 8003b52:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003b56:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003b5a:	685b      	ldr	r3, [r3, #4]
 8003b5c:	2200      	movs	r2, #0
 8003b5e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003b62:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003b66:	f04f 0200 	mov.w	r2, #0
 8003b6a:	f04f 0300 	mov.w	r3, #0
 8003b6e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003b72:	4629      	mov	r1, r5
 8003b74:	008b      	lsls	r3, r1, #2
 8003b76:	4621      	mov	r1, r4
 8003b78:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003b7c:	4621      	mov	r1, r4
 8003b7e:	008a      	lsls	r2, r1, #2
 8003b80:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8003b84:	f7fc fb30 	bl	80001e8 <__aeabi_uldivmod>
 8003b88:	4602      	mov	r2, r0
 8003b8a:	460b      	mov	r3, r1
 8003b8c:	4b60      	ldr	r3, [pc, #384]	@ (8003d10 <UART_SetConfig+0x4e4>)
 8003b8e:	fba3 2302 	umull	r2, r3, r3, r2
 8003b92:	095b      	lsrs	r3, r3, #5
 8003b94:	011c      	lsls	r4, r3, #4
 8003b96:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003b9a:	2200      	movs	r2, #0
 8003b9c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003ba0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003ba4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8003ba8:	4642      	mov	r2, r8
 8003baa:	464b      	mov	r3, r9
 8003bac:	1891      	adds	r1, r2, r2
 8003bae:	61b9      	str	r1, [r7, #24]
 8003bb0:	415b      	adcs	r3, r3
 8003bb2:	61fb      	str	r3, [r7, #28]
 8003bb4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003bb8:	4641      	mov	r1, r8
 8003bba:	1851      	adds	r1, r2, r1
 8003bbc:	6139      	str	r1, [r7, #16]
 8003bbe:	4649      	mov	r1, r9
 8003bc0:	414b      	adcs	r3, r1
 8003bc2:	617b      	str	r3, [r7, #20]
 8003bc4:	f04f 0200 	mov.w	r2, #0
 8003bc8:	f04f 0300 	mov.w	r3, #0
 8003bcc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003bd0:	4659      	mov	r1, fp
 8003bd2:	00cb      	lsls	r3, r1, #3
 8003bd4:	4651      	mov	r1, sl
 8003bd6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003bda:	4651      	mov	r1, sl
 8003bdc:	00ca      	lsls	r2, r1, #3
 8003bde:	4610      	mov	r0, r2
 8003be0:	4619      	mov	r1, r3
 8003be2:	4603      	mov	r3, r0
 8003be4:	4642      	mov	r2, r8
 8003be6:	189b      	adds	r3, r3, r2
 8003be8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003bec:	464b      	mov	r3, r9
 8003bee:	460a      	mov	r2, r1
 8003bf0:	eb42 0303 	adc.w	r3, r2, r3
 8003bf4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003bf8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003bfc:	685b      	ldr	r3, [r3, #4]
 8003bfe:	2200      	movs	r2, #0
 8003c00:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c02:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8003c04:	f04f 0200 	mov.w	r2, #0
 8003c08:	f04f 0300 	mov.w	r3, #0
 8003c0c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003c10:	4649      	mov	r1, r9
 8003c12:	008b      	lsls	r3, r1, #2
 8003c14:	4641      	mov	r1, r8
 8003c16:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003c1a:	4641      	mov	r1, r8
 8003c1c:	008a      	lsls	r2, r1, #2
 8003c1e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8003c22:	f7fc fae1 	bl	80001e8 <__aeabi_uldivmod>
 8003c26:	4602      	mov	r2, r0
 8003c28:	460b      	mov	r3, r1
 8003c2a:	4611      	mov	r1, r2
 8003c2c:	4b38      	ldr	r3, [pc, #224]	@ (8003d10 <UART_SetConfig+0x4e4>)
 8003c2e:	fba3 2301 	umull	r2, r3, r3, r1
 8003c32:	095b      	lsrs	r3, r3, #5
 8003c34:	2264      	movs	r2, #100	@ 0x64
 8003c36:	fb02 f303 	mul.w	r3, r2, r3
 8003c3a:	1acb      	subs	r3, r1, r3
 8003c3c:	011b      	lsls	r3, r3, #4
 8003c3e:	3332      	adds	r3, #50	@ 0x32
 8003c40:	4a33      	ldr	r2, [pc, #204]	@ (8003d10 <UART_SetConfig+0x4e4>)
 8003c42:	fba2 2303 	umull	r2, r3, r2, r3
 8003c46:	095b      	lsrs	r3, r3, #5
 8003c48:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003c4c:	441c      	add	r4, r3
 8003c4e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003c52:	2200      	movs	r2, #0
 8003c54:	673b      	str	r3, [r7, #112]	@ 0x70
 8003c56:	677a      	str	r2, [r7, #116]	@ 0x74
 8003c58:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003c5c:	4642      	mov	r2, r8
 8003c5e:	464b      	mov	r3, r9
 8003c60:	1891      	adds	r1, r2, r2
 8003c62:	60b9      	str	r1, [r7, #8]
 8003c64:	415b      	adcs	r3, r3
 8003c66:	60fb      	str	r3, [r7, #12]
 8003c68:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003c6c:	4641      	mov	r1, r8
 8003c6e:	1851      	adds	r1, r2, r1
 8003c70:	6039      	str	r1, [r7, #0]
 8003c72:	4649      	mov	r1, r9
 8003c74:	414b      	adcs	r3, r1
 8003c76:	607b      	str	r3, [r7, #4]
 8003c78:	f04f 0200 	mov.w	r2, #0
 8003c7c:	f04f 0300 	mov.w	r3, #0
 8003c80:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003c84:	4659      	mov	r1, fp
 8003c86:	00cb      	lsls	r3, r1, #3
 8003c88:	4651      	mov	r1, sl
 8003c8a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003c8e:	4651      	mov	r1, sl
 8003c90:	00ca      	lsls	r2, r1, #3
 8003c92:	4610      	mov	r0, r2
 8003c94:	4619      	mov	r1, r3
 8003c96:	4603      	mov	r3, r0
 8003c98:	4642      	mov	r2, r8
 8003c9a:	189b      	adds	r3, r3, r2
 8003c9c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003c9e:	464b      	mov	r3, r9
 8003ca0:	460a      	mov	r2, r1
 8003ca2:	eb42 0303 	adc.w	r3, r2, r3
 8003ca6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003ca8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cac:	685b      	ldr	r3, [r3, #4]
 8003cae:	2200      	movs	r2, #0
 8003cb0:	663b      	str	r3, [r7, #96]	@ 0x60
 8003cb2:	667a      	str	r2, [r7, #100]	@ 0x64
 8003cb4:	f04f 0200 	mov.w	r2, #0
 8003cb8:	f04f 0300 	mov.w	r3, #0
 8003cbc:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8003cc0:	4649      	mov	r1, r9
 8003cc2:	008b      	lsls	r3, r1, #2
 8003cc4:	4641      	mov	r1, r8
 8003cc6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003cca:	4641      	mov	r1, r8
 8003ccc:	008a      	lsls	r2, r1, #2
 8003cce:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8003cd2:	f7fc fa89 	bl	80001e8 <__aeabi_uldivmod>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	460b      	mov	r3, r1
 8003cda:	4b0d      	ldr	r3, [pc, #52]	@ (8003d10 <UART_SetConfig+0x4e4>)
 8003cdc:	fba3 1302 	umull	r1, r3, r3, r2
 8003ce0:	095b      	lsrs	r3, r3, #5
 8003ce2:	2164      	movs	r1, #100	@ 0x64
 8003ce4:	fb01 f303 	mul.w	r3, r1, r3
 8003ce8:	1ad3      	subs	r3, r2, r3
 8003cea:	011b      	lsls	r3, r3, #4
 8003cec:	3332      	adds	r3, #50	@ 0x32
 8003cee:	4a08      	ldr	r2, [pc, #32]	@ (8003d10 <UART_SetConfig+0x4e4>)
 8003cf0:	fba2 2303 	umull	r2, r3, r2, r3
 8003cf4:	095b      	lsrs	r3, r3, #5
 8003cf6:	f003 020f 	and.w	r2, r3, #15
 8003cfa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	4422      	add	r2, r4
 8003d02:	609a      	str	r2, [r3, #8]
 8003d04:	bf00      	nop
 8003d06:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003d10:	51eb851f 	.word	0x51eb851f

08003d14 <_strtol_l.constprop.0>:
 8003d14:	2b24      	cmp	r3, #36	@ 0x24
 8003d16:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d1a:	4686      	mov	lr, r0
 8003d1c:	4690      	mov	r8, r2
 8003d1e:	d801      	bhi.n	8003d24 <_strtol_l.constprop.0+0x10>
 8003d20:	2b01      	cmp	r3, #1
 8003d22:	d106      	bne.n	8003d32 <_strtol_l.constprop.0+0x1e>
 8003d24:	f000 f892 	bl	8003e4c <__errno>
 8003d28:	2316      	movs	r3, #22
 8003d2a:	6003      	str	r3, [r0, #0]
 8003d2c:	2000      	movs	r0, #0
 8003d2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d32:	4834      	ldr	r0, [pc, #208]	@ (8003e04 <_strtol_l.constprop.0+0xf0>)
 8003d34:	460d      	mov	r5, r1
 8003d36:	462a      	mov	r2, r5
 8003d38:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003d3c:	5d06      	ldrb	r6, [r0, r4]
 8003d3e:	f016 0608 	ands.w	r6, r6, #8
 8003d42:	d1f8      	bne.n	8003d36 <_strtol_l.constprop.0+0x22>
 8003d44:	2c2d      	cmp	r4, #45	@ 0x2d
 8003d46:	d12d      	bne.n	8003da4 <_strtol_l.constprop.0+0x90>
 8003d48:	782c      	ldrb	r4, [r5, #0]
 8003d4a:	2601      	movs	r6, #1
 8003d4c:	1c95      	adds	r5, r2, #2
 8003d4e:	f033 0210 	bics.w	r2, r3, #16
 8003d52:	d109      	bne.n	8003d68 <_strtol_l.constprop.0+0x54>
 8003d54:	2c30      	cmp	r4, #48	@ 0x30
 8003d56:	d12a      	bne.n	8003dae <_strtol_l.constprop.0+0x9a>
 8003d58:	782a      	ldrb	r2, [r5, #0]
 8003d5a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8003d5e:	2a58      	cmp	r2, #88	@ 0x58
 8003d60:	d125      	bne.n	8003dae <_strtol_l.constprop.0+0x9a>
 8003d62:	786c      	ldrb	r4, [r5, #1]
 8003d64:	2310      	movs	r3, #16
 8003d66:	3502      	adds	r5, #2
 8003d68:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8003d6c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8003d70:	2200      	movs	r2, #0
 8003d72:	fbbc f9f3 	udiv	r9, ip, r3
 8003d76:	4610      	mov	r0, r2
 8003d78:	fb03 ca19 	mls	sl, r3, r9, ip
 8003d7c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8003d80:	2f09      	cmp	r7, #9
 8003d82:	d81b      	bhi.n	8003dbc <_strtol_l.constprop.0+0xa8>
 8003d84:	463c      	mov	r4, r7
 8003d86:	42a3      	cmp	r3, r4
 8003d88:	dd27      	ble.n	8003dda <_strtol_l.constprop.0+0xc6>
 8003d8a:	1c57      	adds	r7, r2, #1
 8003d8c:	d007      	beq.n	8003d9e <_strtol_l.constprop.0+0x8a>
 8003d8e:	4581      	cmp	r9, r0
 8003d90:	d320      	bcc.n	8003dd4 <_strtol_l.constprop.0+0xc0>
 8003d92:	d101      	bne.n	8003d98 <_strtol_l.constprop.0+0x84>
 8003d94:	45a2      	cmp	sl, r4
 8003d96:	db1d      	blt.n	8003dd4 <_strtol_l.constprop.0+0xc0>
 8003d98:	fb00 4003 	mla	r0, r0, r3, r4
 8003d9c:	2201      	movs	r2, #1
 8003d9e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003da2:	e7eb      	b.n	8003d7c <_strtol_l.constprop.0+0x68>
 8003da4:	2c2b      	cmp	r4, #43	@ 0x2b
 8003da6:	bf04      	itt	eq
 8003da8:	782c      	ldrbeq	r4, [r5, #0]
 8003daa:	1c95      	addeq	r5, r2, #2
 8003dac:	e7cf      	b.n	8003d4e <_strtol_l.constprop.0+0x3a>
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d1da      	bne.n	8003d68 <_strtol_l.constprop.0+0x54>
 8003db2:	2c30      	cmp	r4, #48	@ 0x30
 8003db4:	bf0c      	ite	eq
 8003db6:	2308      	moveq	r3, #8
 8003db8:	230a      	movne	r3, #10
 8003dba:	e7d5      	b.n	8003d68 <_strtol_l.constprop.0+0x54>
 8003dbc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8003dc0:	2f19      	cmp	r7, #25
 8003dc2:	d801      	bhi.n	8003dc8 <_strtol_l.constprop.0+0xb4>
 8003dc4:	3c37      	subs	r4, #55	@ 0x37
 8003dc6:	e7de      	b.n	8003d86 <_strtol_l.constprop.0+0x72>
 8003dc8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8003dcc:	2f19      	cmp	r7, #25
 8003dce:	d804      	bhi.n	8003dda <_strtol_l.constprop.0+0xc6>
 8003dd0:	3c57      	subs	r4, #87	@ 0x57
 8003dd2:	e7d8      	b.n	8003d86 <_strtol_l.constprop.0+0x72>
 8003dd4:	f04f 32ff 	mov.w	r2, #4294967295
 8003dd8:	e7e1      	b.n	8003d9e <_strtol_l.constprop.0+0x8a>
 8003dda:	1c53      	adds	r3, r2, #1
 8003ddc:	d108      	bne.n	8003df0 <_strtol_l.constprop.0+0xdc>
 8003dde:	2322      	movs	r3, #34	@ 0x22
 8003de0:	f8ce 3000 	str.w	r3, [lr]
 8003de4:	4660      	mov	r0, ip
 8003de6:	f1b8 0f00 	cmp.w	r8, #0
 8003dea:	d0a0      	beq.n	8003d2e <_strtol_l.constprop.0+0x1a>
 8003dec:	1e69      	subs	r1, r5, #1
 8003dee:	e006      	b.n	8003dfe <_strtol_l.constprop.0+0xea>
 8003df0:	b106      	cbz	r6, 8003df4 <_strtol_l.constprop.0+0xe0>
 8003df2:	4240      	negs	r0, r0
 8003df4:	f1b8 0f00 	cmp.w	r8, #0
 8003df8:	d099      	beq.n	8003d2e <_strtol_l.constprop.0+0x1a>
 8003dfa:	2a00      	cmp	r2, #0
 8003dfc:	d1f6      	bne.n	8003dec <_strtol_l.constprop.0+0xd8>
 8003dfe:	f8c8 1000 	str.w	r1, [r8]
 8003e02:	e794      	b.n	8003d2e <_strtol_l.constprop.0+0x1a>
 8003e04:	0800410d 	.word	0x0800410d

08003e08 <strtol>:
 8003e08:	4613      	mov	r3, r2
 8003e0a:	460a      	mov	r2, r1
 8003e0c:	4601      	mov	r1, r0
 8003e0e:	4802      	ldr	r0, [pc, #8]	@ (8003e18 <strtol+0x10>)
 8003e10:	6800      	ldr	r0, [r0, #0]
 8003e12:	f7ff bf7f 	b.w	8003d14 <_strtol_l.constprop.0>
 8003e16:	bf00      	nop
 8003e18:	2000000c 	.word	0x2000000c

08003e1c <memcmp>:
 8003e1c:	b510      	push	{r4, lr}
 8003e1e:	3901      	subs	r1, #1
 8003e20:	4402      	add	r2, r0
 8003e22:	4290      	cmp	r0, r2
 8003e24:	d101      	bne.n	8003e2a <memcmp+0xe>
 8003e26:	2000      	movs	r0, #0
 8003e28:	e005      	b.n	8003e36 <memcmp+0x1a>
 8003e2a:	7803      	ldrb	r3, [r0, #0]
 8003e2c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8003e30:	42a3      	cmp	r3, r4
 8003e32:	d001      	beq.n	8003e38 <memcmp+0x1c>
 8003e34:	1b18      	subs	r0, r3, r4
 8003e36:	bd10      	pop	{r4, pc}
 8003e38:	3001      	adds	r0, #1
 8003e3a:	e7f2      	b.n	8003e22 <memcmp+0x6>

08003e3c <memset>:
 8003e3c:	4402      	add	r2, r0
 8003e3e:	4603      	mov	r3, r0
 8003e40:	4293      	cmp	r3, r2
 8003e42:	d100      	bne.n	8003e46 <memset+0xa>
 8003e44:	4770      	bx	lr
 8003e46:	f803 1b01 	strb.w	r1, [r3], #1
 8003e4a:	e7f9      	b.n	8003e40 <memset+0x4>

08003e4c <__errno>:
 8003e4c:	4b01      	ldr	r3, [pc, #4]	@ (8003e54 <__errno+0x8>)
 8003e4e:	6818      	ldr	r0, [r3, #0]
 8003e50:	4770      	bx	lr
 8003e52:	bf00      	nop
 8003e54:	2000000c 	.word	0x2000000c

08003e58 <__libc_init_array>:
 8003e58:	b570      	push	{r4, r5, r6, lr}
 8003e5a:	4d0d      	ldr	r5, [pc, #52]	@ (8003e90 <__libc_init_array+0x38>)
 8003e5c:	4c0d      	ldr	r4, [pc, #52]	@ (8003e94 <__libc_init_array+0x3c>)
 8003e5e:	1b64      	subs	r4, r4, r5
 8003e60:	10a4      	asrs	r4, r4, #2
 8003e62:	2600      	movs	r6, #0
 8003e64:	42a6      	cmp	r6, r4
 8003e66:	d109      	bne.n	8003e7c <__libc_init_array+0x24>
 8003e68:	4d0b      	ldr	r5, [pc, #44]	@ (8003e98 <__libc_init_array+0x40>)
 8003e6a:	4c0c      	ldr	r4, [pc, #48]	@ (8003e9c <__libc_init_array+0x44>)
 8003e6c:	f000 f826 	bl	8003ebc <_init>
 8003e70:	1b64      	subs	r4, r4, r5
 8003e72:	10a4      	asrs	r4, r4, #2
 8003e74:	2600      	movs	r6, #0
 8003e76:	42a6      	cmp	r6, r4
 8003e78:	d105      	bne.n	8003e86 <__libc_init_array+0x2e>
 8003e7a:	bd70      	pop	{r4, r5, r6, pc}
 8003e7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003e80:	4798      	blx	r3
 8003e82:	3601      	adds	r6, #1
 8003e84:	e7ee      	b.n	8003e64 <__libc_init_array+0xc>
 8003e86:	f855 3b04 	ldr.w	r3, [r5], #4
 8003e8a:	4798      	blx	r3
 8003e8c:	3601      	adds	r6, #1
 8003e8e:	e7f2      	b.n	8003e76 <__libc_init_array+0x1e>
 8003e90:	08004218 	.word	0x08004218
 8003e94:	08004218 	.word	0x08004218
 8003e98:	08004218 	.word	0x08004218
 8003e9c:	0800421c 	.word	0x0800421c

08003ea0 <memcpy>:
 8003ea0:	440a      	add	r2, r1
 8003ea2:	4291      	cmp	r1, r2
 8003ea4:	f100 33ff 	add.w	r3, r0, #4294967295
 8003ea8:	d100      	bne.n	8003eac <memcpy+0xc>
 8003eaa:	4770      	bx	lr
 8003eac:	b510      	push	{r4, lr}
 8003eae:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003eb2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003eb6:	4291      	cmp	r1, r2
 8003eb8:	d1f9      	bne.n	8003eae <memcpy+0xe>
 8003eba:	bd10      	pop	{r4, pc}

08003ebc <_init>:
 8003ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ebe:	bf00      	nop
 8003ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ec2:	bc08      	pop	{r3}
 8003ec4:	469e      	mov	lr, r3
 8003ec6:	4770      	bx	lr

08003ec8 <_fini>:
 8003ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003eca:	bf00      	nop
 8003ecc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ece:	bc08      	pop	{r3}
 8003ed0:	469e      	mov	lr, r3
 8003ed2:	4770      	bx	lr
